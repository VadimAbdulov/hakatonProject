{"version":3,"file":"utils.cjs.js","sources":["../src/applyMixins.ts","../src/array/arrayChunk.ts","../src/array/arrayCompare.ts","../src/array/arrayUnique.ts","../src/Clipboard.ts","../src/debounce.ts","../src/debug/debugLog.ts","../src/deepmerge.ts","../src/defined.ts","../src/deprecated/deprecatedMapClick.ts","../src/deprecated/deprecatedWarn.ts","../src/events.ts","../src/flatten.ts","../src/geom/checkExtent.ts","../src/geom/constants.ts","../src/geom/coordTransform.ts","../src/geom/eachCoordinates.ts","../src/geom/geom.ts","../src/geom/getBoundsPolygon.ts","../src/geom/getCirclePolygon.ts","../src/geom/getIdentifyRadius.ts","../src/geom/getSquarePolygon.ts","../src/geom/isLngLatBoundsArray.ts","../src/number/round.ts","../src/object/objectAssign.ts","../src/object/objectDeepEqual.ts","../src/object/objectRemoveEmpty.ts","../src/platform.ts","../src/re/reEscape.ts","../src/sleep.ts","../src/string/camelize.ts","../src/string/capitalize.ts","../src/string/numberWithSpaces.ts","../src/typeHelpers/isObjKey.ts","../src/typeHelpers/Json.ts","../src/typeHelpers/index.ts","../src/unflatten.ts","../src/url.ts"],"sourcesContent":["export interface ApplyMixinOptions {\n  replace?: boolean;\n}\n\ntype Ctor = any;\n\nexport function applyMixins(\n  derivedCtor: Ctor,\n  baseCtors: Ctor[],\n  opt: ApplyMixinOptions = {},\n): void {\n  const derivedProperties = allProperties(derivedCtor.prototype);\n  const replace = opt.replace !== undefined ? opt.replace : true;\n  baseCtors.forEach((baseCtor) => {\n    Object.getOwnPropertyNames(baseCtor.prototype).forEach((name) => {\n      const isSomeProp = derivedProperties.indexOf(name) !== -1;\n      if ((!replace && !isSomeProp) || replace) {\n        const descriptor = Object.getOwnPropertyDescriptor(\n          baseCtor.prototype,\n          name,\n        );\n        if (descriptor) {\n          Object.defineProperty(derivedCtor.prototype, name, descriptor);\n        }\n      }\n    });\n  });\n}\n\nexport function allProperties(obj: Record<string, unknown>): string[] {\n  return _allProperties(obj);\n}\n\nfunction _allProperties(\n  obj: Record<string, unknown>,\n  _props: string[] = [],\n): string[] {\n  for (; obj !== null; obj = Object.getPrototypeOf(obj)) {\n    const op = Object.getOwnPropertyNames(obj);\n    for (let i = 0; i < op.length; i++) {\n      if (_props.indexOf(op[i]) == -1) {\n        _props.push(op[i]);\n      }\n    }\n  }\n  return _props;\n}\n\nexport function mixinProperties(\n  derivedCtor: Ctor,\n  baseCtor: Ctor,\n  properties: string[],\n): void {\n  properties.forEach((name) => {\n    const descriptor = Object.getOwnPropertyDescriptor(\n      baseCtor.prototype,\n      name,\n    );\n    if (descriptor) {\n      Object.defineProperty(derivedCtor.prototype, name, descriptor);\n    }\n  });\n}\n","export function arrayChunk<T>(arr: T[], size: number): T[][] {\n  return Array.from({ length: Math.ceil(arr.length / size) }, (v, i) =>\n    arr.slice(i * size, i * size + size),\n  );\n}\n","/**\n * Comparison of the contents of two arrays. Position of elements is ignored.\n * @example\n * ```javascript\n * arrayCompare(['a', 'b'], ['b', 'a']) // true\n * arrayCompare(['a', 'b'], ['b']) // false\n * arrayCompare('asdf1234', '1234asdf') // true\n * ```\n */\nexport function arrayCompare(array1: any[], array2: any[]): boolean {\n  array1 = Array.from(array1).sort();\n  array2 = Array.from(array2).sort();\n  return _arrayCompare(array1, array2);\n}\n\n/**\n * Comparing content and position of elements of two arrays.\n * @example\n * ```javascript\n * arrayCompareStrict(['a', 'b'], ['a', 'b']) // true\n * arrayCompareStrict(['a', 'b'], ['b', 'a']) // false\n * arrayCompareStrict('asdf1234', 'asdf1234') // true\n * arrayCompareStrict('asdf1234', '1234asdf') // false\n * ```\n */\nexport function arrayCompareStrict(array1: any[], array2: any[]): boolean {\n  array1 = Array.from(array1);\n  array2 = Array.from(array2);\n  return _arrayCompare(array1, array2);\n}\n\nfunction _arrayCompare(array1: any[], array2: any[]): boolean {\n  return (\n    array1.length === array2.length &&\n    array1.every(function (value, index) {\n      return value === array2[index];\n    })\n  );\n}\n","export function arrayUnique<T = any>(arr: T[]): T[] {\n  return arr.filter((elem, pos, arr) => {\n    return arr.indexOf(elem) == pos;\n  });\n}\n","export class Clipboard {\n  silent = true;\n\n  constructor(text?: string) {\n    if (text) {\n      this.copy(text);\n    }\n  }\n\n  static copy(text: string): boolean {\n    const clipboard = new Clipboard();\n    return clipboard.copy(text);\n  }\n\n  copy(text: string): boolean {\n    try {\n      if ((navigator as any).clipboard) {\n        (navigator as any).clipboard.writeText(text);\n      } else if ((window as any).clipboardData) {\n        (window as any).clipboardData.setData('text', text);\n      } else {\n        this.copyToClipboard(text);\n      }\n      if (!this.silent) console.log('Copied to Clipboard');\n      return true;\n    } catch {\n      if (!this.silent) console.log('Please copy manually');\n    }\n    return false;\n  }\n\n  private copyToClipboard(text: string) {\n    const input = document.createElement('input') as HTMLInputElement;\n    input.value = text;\n    try {\n      document.body.appendChild(input);\n      this.copyNodeContentsToClipboard(input);\n    } finally {\n      document.body.removeChild(input);\n    }\n  }\n\n  private copyNodeContentsToClipboard(input: HTMLInputElement) {\n    input.select();\n    input.setSelectionRange(0, 99999); /*For mobile devices*/\n    document.execCommand('copy');\n  }\n}\n","// based on https://github.com/bvaughn/debounce-decorator\n\nexport function debounce<T extends (...args: any[]) => void>(\n  cb: T,\n  wait = 10,\n): T & { clear: () => void } {\n  let timeoutId: any;\n\n  function wrapper(this: any, ...args: any[]) {\n    wrapper.clear();\n\n    timeoutId = setTimeout(() => {\n      timeoutId = null;\n      cb.apply(this, args);\n    }, wait);\n  }\n\n  wrapper.clear = function () {\n    if (timeoutId) {\n      clearTimeout(timeoutId);\n      timeoutId = null;\n    }\n  };\n\n  return wrapper as T & { clear: () => void };\n}\n\nexport function DebounceDecorator(wait = 10) {\n  return function (\n    _target: unknown,\n    key: string,\n    descriptor: PropertyDescriptor,\n  ): PropertyDescriptor {\n    return {\n      configurable: true,\n      enumerable: descriptor.enumerable,\n      get: function getter() {\n        // Attach this function to the instance (not the class)\n        Object.defineProperty(this, key, {\n          configurable: true,\n          enumerable: descriptor.enumerable,\n          value: debounce(descriptor.value, wait),\n        });\n\n        return this[key as keyof PropertyDescriptor];\n      },\n    };\n  };\n}\n","export function debugLog(message?: string): boolean {\n  if (__DEV__) {\n    console.trace('DEBUG: ' + message);\n    return true;\n  }\n  return false;\n}\n","export function deepmerge<T>(\n  x: Partial<T>,\n  y: Partial<T>,\n  mergeArray?: boolean,\n): T;\nexport function deepmerge<T1, T2>(\n  target: Partial<T1>,\n  src: Partial<T2>,\n  mergeArray = false,\n): T1 & T2 {\n  let target_ = target as any;\n  const src_ = src as any;\n  const array = Array.isArray(src_);\n  let dst: any = (array && []) || {};\n\n  if (array && Array.isArray(src_)) {\n    if (mergeArray) {\n      target_ = target_ || [];\n      dst = dst.concat(target_);\n      src_.forEach((e: any, i: number) => {\n        if (typeof dst[i] === 'undefined') {\n          dst[i] = e;\n        } else if (typeof e === 'object') {\n          dst[i] = deepmerge(target_[i], e, mergeArray);\n        } else {\n          if (target_.indexOf(e) === -1) {\n            dst.push(e);\n          }\n        }\n      });\n    } else {\n      // Replace array. Do not merge by default\n      dst = src_;\n    }\n  } else {\n    if (target_ && typeof target_ === 'object') {\n      Object.keys(target_).forEach(function (key) {\n        dst[key] = target_[key];\n      });\n    }\n    Object.keys(src_).forEach(function (key) {\n      if (typeof src_[key] !== 'object' || !src_[key]) {\n        dst[key] = src_[key];\n      } else {\n        if (typeof target_[key] === 'object' && typeof src_[key] === 'object') {\n          dst[key] = deepmerge(target_[key], src_[key], mergeArray);\n        } else {\n          dst[key] = src_[key];\n        }\n      }\n    });\n  }\n  return dst;\n}\n","/**\n * from https://github.com/CesiumGS/cesium/blob/master/Source/Core/defined.js\n *\n * @param val - The object.\n * @returns Returns true if the object is defined, returns false otherwise.\n *\n * @example\n * ```javascript\n * if (defined(positions)) {\n *   doSomething();\n * } else {\n *   doSomethingElse();\n * }\n * ```\n */\nexport function defined<T>(val: T): val is Exclude<T, null | undefined> {\n  return val !== undefined && val !== null;\n}\n\n/**\n * from https://github.com/CesiumGS/cesium/blob/master/Source/Core/defined.js\n *\n * @param val - The object.\n * @returns Returns true if the object is defined and not empty string, returns false otherwise.\n *\n * @example\n * ```javascript\n * full('foo') // true\n * full('') // false\n * full(undefined) // false\n * full(0) // true\n * ```\n */\nexport function full<T>(val: T): val is Exclude<T, null | undefined> {\n  return typeof val === 'string' ? !!val : defined(val);\n}\n","import { debugLog } from '../debug/debugLog';\n\nimport type { LatLng } from '../geom/interfaces';\nimport type { LngLatArray } from '../geom/interfaces';\n\ninterface DeprecatedMapClickEvent {\n  lngLat: LngLatArray;\n  latLng?: LatLng;\n}\n\n/**\n * @internal\n */\nexport function deprecatedMapClick<\n  T extends DeprecatedMapClickEvent = DeprecatedMapClickEvent,\n>(ev: T): T {\n  if (!ev.lngLat && ev.latLng) {\n    debugLog('deprecated use of latLng in MapClickEvent, use lngLat instead');\n    const lat = ev.latLng.lat;\n    const lng = ev.latLng.lng;\n    ev.lngLat = [lng, lat];\n  }\n  return ev;\n}\n","/** @internal */\nexport function deprecatedWarn(message: string): void {\n  console.warn(`DEPRECATED WARN: ${message}`);\n}\n","import type { EventEmitter } from 'events';\n\nexport class Events<E = any> {\n  private readonly _eventsStatus: { [key in keyof E]?: boolean } = {};\n\n  constructor(private emitter: EventEmitter) {}\n\n  setEventStatus(event: keyof E, status: boolean): void {\n    this._eventsStatus[event] = status;\n  }\n\n  onLoad(event: keyof E | (keyof E)[]): Promise<this> {\n    const events: (keyof E)[] = Array.isArray(event) ? event : [event];\n    const promises = events.map(\n      (x) =>\n        new Promise((res) => {\n          if (this.getEventStatus(x)) {\n            res(this);\n          } else {\n            const e = x as string | symbol;\n            this.emitter.once(e, () => {\n              this.setEventStatus(x, true);\n              res(this);\n            });\n          }\n        }),\n    );\n    return Promise.all(promises).then(() => this);\n  }\n\n  getEventStatus(event: keyof E): boolean {\n    // ugly hack to disable type checking error\n    const _eventName = event as keyof E;\n    const status = this._eventsStatus[_eventName];\n    return status !== undefined ? !!status : false;\n  }\n}\n","export interface FlattenOptions {\n  flatArray?: boolean;\n}\n\nexport function flatten(\n  data: Record<string, any>,\n  opt: FlattenOptions = {},\n): Record<string, any> {\n  const flatArray = opt.flatArray ?? true;\n  const result: Record<string, any> = {};\n  function recurse(cur: Record<string, any>, prop: any) {\n    if (Object(cur) !== cur) {\n      result[prop] = cur;\n    } else if (Array.isArray(cur) && flatArray) {\n      const l = cur.length;\n      for (let i = 0; i < l; i++) {\n        recurse(cur[i], prop + '[' + i + ']');\n      }\n      if (l === 0) result[prop] = [];\n    } else {\n      let isEmpty = true;\n      for (const p in cur) {\n        isEmpty = false;\n        recurse(cur[p], prop ? prop + '.' + p : p);\n      }\n      if (isEmpty && prop) result[prop] = {};\n    }\n  }\n  recurse(data, '');\n  return result;\n}\n","import type { LngLatBoundsArray } from './interfaces';\n\nexport function checkExtent(extent: number[]): extent is LngLatBoundsArray {\n  const [minLon, minLat, maxLon, maxLat] = extent;\n\n  // Check if coordinates are in the correct order\n  const isOrderValid = minLon < maxLon && minLat < maxLat;\n\n  if (!isOrderValid) {\n    console.log('Error: The extent coordinates are not in the correct order.');\n    console.log(\n      `Received extent: [${minLon}, ${minLat}, ${maxLon}, ${maxLat}]`,\n    );\n\n    // Create a valid array with corrected order\n    const correctedExtent = [\n      Math.min(minLon, maxLon),\n      Math.min(minLat, maxLat),\n      Math.max(minLon, maxLon),\n      Math.max(maxLat, minLat),\n    ];\n\n    console.log(`Expected order: [${correctedExtent.join(', ')}]`);\n  }\n\n  // Check if the coordinates are within valid ranges\n  const isValidLon = minLon >= -180 && maxLon <= 180;\n  const isValidLat = minLat >= -90 && maxLat <= 90;\n\n  if (!isValidLon || !isValidLat) {\n    console.log(\n      'Warning: The coordinates may not be within valid geographic ranges.',\n    );\n  }\n\n  // Return true only if all checks pass\n  return isOrderValid && isValidLon && isValidLat;\n}\n","/**\n * Radius of the earth in kilometers\n */\nexport const EARTHS_RADIUS = 6371;\n","import type { LngLatArray } from './interfaces';\n\nexport function degrees2meters(lng: number, lat: number): [number, number] {\n  lat = lat > 85.06 ? 85.06 : lat < -85.06 ? -85.06 : lat;\n\n  const x = (lng * 20037508.34) / 180;\n  let y = Math.log(Math.tan(((90 + lat) * Math.PI) / 360)) / (Math.PI / 180);\n  y = (y * 20037508.34) / 180;\n  return [x, y];\n}\n\nexport function meters2degrees(x: number, y: number): LngLatArray {\n  const lon = (x * 180) / 20037508.34;\n  const lat =\n    (Math.atan(Math.exp((y * Math.PI) / 20037508.34)) * 360) / Math.PI - 90;\n  return [lon, lat];\n}\n\nexport function degrees2Radian(deg: number): number {\n  return (deg * Math.PI) / 180;\n}\n\n// export function degrees2meters2(lon: number, lat: number): [number, number] {\n//   const radius = 6378137.0;\n//   const x = (radius * lon * Math.PI) / 180.0;\n//   const y =\n//     radius * Math.log(Math.tan(Math.PI / 4.0 + (lat * Math.PI) / 360.0));\n//   return [x, y];\n// }\n\n// export function meters2degress2(x: number, y: number): LngLatArray {\n//   const radius = 6378137.0;\n//   const lon = (180 / Math.PI) * (x / radius);\n//   const lat = (360 / Math.PI) * (Math.atan(Math.exp(y / radius)) - Math.PI / 4);\n//   return [lon, lat];\n// }\n\n// const lon = -77.035974;\n// const lat = 38.898717;\n\n// console.log(degrees2meters(lon, lat), degrees2meters2(lon, lat));\n\n// const x = -8575605.398443861;\n// const y = 4707174.018280405;\n\n// console.log(meters2degress(x, y), meters2degress2(x, y));\n","import type { GeoJSON, Geometry, Position } from 'geojson';\n\nexport function coordinatesCount(geojson: GeoJSON): number {\n  let count = 0;\n  eachCoordinates(geojson, () => count++);\n  return count;\n}\n\nexport function getCoordinates(geojson: GeoJSON): Position[] {\n  const coordinates: Position[] = [];\n  eachCoordinates(geojson, (pos) => coordinates.push(pos));\n  return coordinates;\n}\n\nexport function eachCoordinates(\n  geojson: GeoJSON,\n  cb: (position: Position) => void,\n): void {\n  eachGeometry(geojson, (geom) => {\n    if ('coordinates' in geom) {\n      if (geom.type === 'Polygon' || geom.type === 'MultiLineString') {\n        for (const x of geom.coordinates) {\n          x.forEach((y) => cb(y));\n        }\n      } else if (geom.type === 'MultiPolygon') {\n        for (const x of geom.coordinates) {\n          x.forEach((y) => y.forEach((z) => cb(z)));\n        }\n      } else if (geom.type === 'Point') {\n        cb(geom.coordinates);\n      } else if (geom.type === 'MultiPoint' || geom.type === 'LineString') {\n        for (const x of geom.coordinates) {\n          cb(x);\n        }\n      }\n    }\n    return geom;\n  });\n}\n\nexport function getPolygons(geojson: GeoJSON): Position[][] {\n  const polygons: Position[][] = [];\n  eachGeometry(geojson, (geom) => {\n    if ('coordinates' in geom) {\n      if (geom.type === 'Polygon') {\n        geom.coordinates.forEach((x) => polygons.push(x));\n      } else if (geom.type === 'MultiPolygon') {\n        for (const x of geom.coordinates) {\n          for (const y of x) {\n            polygons.push(y);\n          }\n        }\n      }\n    }\n    return geom;\n  });\n  return polygons;\n}\n\nexport function eachGeometry(\n  geojson: GeoJSON,\n  cb: (position: Geometry) => void,\n): void {\n  if (geojson.type === 'FeatureCollection') {\n    for (const f of geojson.features) {\n      cb(f.geometry);\n    }\n  } else if (geojson.type === 'Feature') {\n    cb(geojson.geometry);\n  } else if ('coordinates' in geojson) {\n    cb(geojson);\n  }\n}\n","import type { LatLng, LngLatArray } from './interfaces';\n\nexport function latLngToLngLatArray(latLng: LatLng): LngLatArray {\n  return [latLng.lng, latLng.lat];\n}\n\nexport function lngLatArrayToLatLng(coord: LngLatArray): LatLng {\n  return { lat: coord[1], lng: coord[0] };\n}\n","import type { Feature, Polygon } from 'geojson';\n\nimport type { LngLatBoundsArray } from './interfaces';\n\nexport function getBoundsPolygon(b: LngLatBoundsArray): Polygon {\n  const polygon: Polygon = {\n    type: 'Polygon',\n    coordinates: [getBoundsCoordinates(b)],\n  };\n  return polygon;\n}\n\nexport function getBoundsCoordinates(b: LngLatBoundsArray): number[][] {\n  const westNorth = [b[0], b[1]];\n  const eastNorth = [b[2], b[1]];\n  const eastSouth = [b[2], b[3]];\n  const westSouth = [b[0], b[3]];\n\n  return [westNorth, eastNorth, eastSouth, westSouth, westNorth];\n}\n\nexport function getBoundsFeature(b: LngLatBoundsArray): Feature<Polygon> {\n  const feature: Feature<Polygon> = {\n    type: 'Feature',\n    properties: {},\n    geometry: getBoundsPolygon(b),\n  };\n  return feature;\n}\n","import { EARTHS_RADIUS } from './constants';\n\nimport type { Feature, Polygon, Position } from 'geojson';\n\nconst d2r = Math.PI / 180; // degrees to radians\nconst r2d = 180 / Math.PI; // radians to degrees\n\nexport function getCirclePolygonCoordinates(\n  lng: number,\n  lat: number,\n  /** In kilometers */\n  radius = 10,\n  points = 6,\n): Position[] {\n  // find the radius in lat/lon\n  const rlat = (radius / EARTHS_RADIUS) * r2d;\n  const rlng = rlat / Math.cos(lat * d2r);\n\n  const extp = [];\n  for (let i = 0; i < points + 1; i++) {\n    // one extra here makes sure we connect the\n\n    const theta = Math.PI * (i / (points / 2));\n    const ex = lng + rlng * Math.cos(theta); // center a + radius x * cos(theta)\n    const ey = lat + rlat * Math.sin(theta); // center b + radius y * sin(theta)\n    extp.push([ex, ey]);\n  }\n\n  return extp;\n}\n\nexport function getCircleFeature(\n  lng: number,\n  lat: number,\n  radius = 10,\n  points = 6,\n): Feature<Polygon> {\n  const polygon = getCirclePolygonCoordinates(lng, lat, radius, points);\n  const feature: Feature<Polygon> = {\n    type: 'Feature',\n    properties: {},\n    geometry: {\n      type: 'Polygon',\n      coordinates: [polygon],\n    },\n  };\n  return feature;\n}\n","import type { LngLatArray } from '@nextgis/utils';\n\nexport function getIdentifyRadius(\n  center: LngLatArray,\n  zoom: number,\n  pixelRadius: number,\n): number {\n  pixelRadius = pixelRadius ?? 10;\n  const metresPerPixel =\n    (40075016.686 * Math.abs(Math.cos((center[1] * 180) / Math.PI))) /\n    Math.pow(2, zoom + 8);\n  const radius = pixelRadius * metresPerPixel * 0.0005;\n  return radius;\n}\n","import { EARTHS_RADIUS } from './constants';\n\nimport type { Position } from 'geojson';\n\nconst d2r = Math.PI / 180;\nconst r2d = 180 / Math.PI;\n\nexport function getSquarePolygonCoordinates(\n  lng: number,\n  lat: number,\n  halfSideLength = 10,\n): Position[] {\n  const rlat = (halfSideLength / EARTHS_RADIUS) * r2d;\n  const rlng = rlat / Math.cos(lat * d2r);\n\n  const topLeft: Position = [lng - rlng, lat + rlat];\n  const topRight: Position = [lng + rlng, lat + rlat];\n  const bottomRight: Position = [lng + rlng, lat - rlat];\n  const bottomLeft: Position = [lng - rlng, lat - rlat];\n\n  return [topLeft, topRight, bottomRight, bottomLeft, topLeft];\n}\n","import type { LngLatBoundsArray } from '@nextgis/utils';\n\nexport function isLngLatBoundsArray(\n  array: unknown,\n): array is LngLatBoundsArray {\n  return (\n    Array.isArray(array) &&\n    array.length === 4 &&\n    array.every((x) => typeof x === 'number')\n  );\n}\n","export function round(val: number, toFixed?: number): number {\n  const n = toFixed ? Number('1e+' + toFixed) : 1;\n  return Math.round((val + Number.EPSILON) * n) / n;\n}\n","export function objectAssign<T, U>(target: T, source: U): T & U;\n\n/**\n * Copy the values of all of the enumerable own properties from one or more source objects to a\n * target object. Returns the target object.\n * @param target - The target object to copy to.\n * @param source1 - The first source object from which to copy properties.\n * @param source2 - The second source object from which to copy properties.\n */\nexport function objectAssign<T, U, V>(\n  target: T,\n  source1: U,\n  source2: V,\n): T & U & V;\n\n/**\n * Copy the values of all of the enumerable own properties from one or more source objects to a\n * target object. Returns the target object.\n * @param target - The target object to copy to.\n * @param source1 - The first source object from which to copy properties.\n * @param source2 - The second source object from which to copy properties.\n * @param source3 - The third source object from which to copy properties.\n */\nexport function objectAssign<T, U, V, W>(\n  target: T,\n  source1: U,\n  source2: V,\n  source3: W,\n): T & U & V & W;\n\n/**\n * Copy the values of all of the enumerable own properties from one or more source objects to a\n * target object. Returns the target object.\n * @param target - The target object to copy to.\n * @param sources - One or more source objects from which to copy properties\n */\nexport function objectAssign(\n  target: Record<string, unknown>,\n  ...sources: any[]\n): any {\n  for (const source of sources) {\n    for (const prop of Object.getOwnPropertyNames(source)) {\n      (target as any)[prop] = source[prop];\n    }\n  }\n}\n","function isEqual(a: unknown, b: unknown, o: unknown, p: unknown): boolean {\n  if (a instanceof Array) {\n    if (!(b instanceof Array)) return false;\n    //if (compareObjects(oVal, pVal === false) return false\n    //would work, too, and perhaps is a better fit, still, this is easy, too\n    return b.sort().join('') === a.sort().join('');\n  } else if (a instanceof Date) {\n    if (!(b instanceof Date)) return false;\n    return '' + a === '' + b;\n  } else if (a instanceof Function) {\n    if (!(b instanceof Function)) return false;\n    //ignore functions, or check them regardless?\n  } else if (a instanceof Object) {\n    if (!(b instanceof Object)) return false;\n    if (a === o) {\n      return b === p;\n    } else {\n      return objectDeepEqual(a, b);\n    }\n  }\n  return a === b;\n}\n\n// based on https://stackoverflow.com/a/13143059\nexport function objectDeepEqual<\n  T extends Record<string, any> = Record<string, any>,\n>(o: T, p: T): boolean {\n  const keysO = Object.keys(o).sort();\n  const keysP = Object.keys(p).sort();\n  if (keysO.length !== keysP.length) return false;\n  if (keysO.join('') !== keysP.join('')) return false;\n  for (let i = 0; i < keysO.length; i++) {\n    const oVal = o[keysO[i]];\n    const pVal = p[keysP[i]];\n    if (!isEqual(oVal, pVal, o, p)) {\n      return false;\n    }\n  }\n  return true;\n}\n","type NoUndefinedField<T> = {\n  [P in keyof T]: Exclude<T[P], undefined>;\n};\n\nexport function objectRemoveEmpty<T extends Record<any, any>>(\n  obj: T,\n): NoUndefinedField<T> {\n  const newObj: Record<any, any> = {};\n  Object.keys(obj).forEach((key) => {\n    if (!(obj[key] instanceof Array) && obj[key] === Object(obj[key])) {\n      newObj[key] = objectRemoveEmpty(obj[key]);\n    } else if (obj[key] !== undefined) {\n      newObj[key] = obj[key];\n    }\n  });\n  return newObj as NoUndefinedField<T>;\n}\n","export const isBrowser =\n  typeof window !== 'undefined' && typeof window.document !== 'undefined';\n\nexport const type: 'browser' | 'node' = isBrowser ? 'browser' : 'node';\n\nexport function getGlobalVariable(): any {\n  if (isBrowser) {\n    return window;\n  } else {\n    // NativeScript uses global, not window\n    return global;\n  }\n}\n","export function reEscape(s: string): string {\n  return s.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n}\n","export function sleep(delay = 0): Promise<void> {\n  return new Promise<void>((resolve) => setTimeout(resolve, delay));\n}\n","/**\n * Camelize a string, cutting the string by separator character.\n * @param text to camelize\n * @param separator Word separator (string or regexp)\n * @return string Camelized text\n */\nexport function camelize(text: string, separator = /[_.\\- ]/) {\n  // Cut the string into words\n  const words = text.split(separator);\n\n  // Concatenate all capitalized words to get camelized string\n  let result = '';\n  for (let i = 0; i < words.length; i++) {\n    const word = words[i];\n    const capitalizedWord = word.charAt(0).toUpperCase() + word.slice(1);\n    result += capitalizedWord;\n  }\n\n  return result;\n}\n","export function capitalize(str: string): string {\n  str = String(str).toLowerCase();\n  return str[0].toUpperCase() + str.slice(1);\n}\n","export function numberWithSpaces(x: number): string {\n  const parts = x.toString().split('.');\n  parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ');\n  return parts.join('.');\n}\n","type Obj = Record<string | number, any>;\n\nexport function isObjKey<O extends Obj = Obj>(\n  obj: O,\n  key: unknown,\n): key is keyof O {\n  if (typeof key === 'string' || typeof key === 'number') {\n    return key in obj;\n  }\n  return false;\n}\n\n/**\n *\n * @deprecated - use isObjKey instead\n */\nexport function keyInObj<O extends Obj = Obj>(\n  obj: O,\n  key: unknown,\n): key is keyof O {\n  return isObjKey(obj, key);\n}\n","import { isArray, isObject } from '../index';\n\nexport type AnyJson = boolean | number | string | null | JsonArray | JsonMap;\nexport interface JsonMap {\n  [key: string]: AnyJson;\n}\nexport type JsonArray = Array<AnyJson>;\n\nexport function isAnyJson(val: unknown): val is AnyJson {\n  if (\n    typeof val === 'boolean' ||\n    typeof val === 'number' ||\n    typeof val === 'string' ||\n    val === null\n  ) {\n    return true;\n  } else if (isObject(val)) {\n    return isJsonMap(val);\n  } else if (isArray(val)) {\n    return isJsonArray(val);\n  }\n  return false;\n}\n\nexport function isJsonArray(val: unknown): val is JsonArray {\n  if (isArray(val)) {\n    return val.every(isAnyJson);\n  }\n  return false;\n}\n\nexport function isJsonMap(val: unknown): val is JsonMap {\n  if (isObject(val)) {\n    for (const i in val) {\n      if (!isAnyJson(i)) {\n        return false;\n      }\n    }\n  }\n  return false;\n}\n","export * from './DeepPartial';\nexport * from './isObjKey';\nexport * from './Json';\nexport * from './Type';\n\nexport function isObject(val: unknown): val is Record<string | number, any> {\n  return Object.prototype.toString.call(val) === '[object Object]';\n}\n\nexport function isArray(val: unknown): val is [] {\n  return Object.prototype.toString.call(val) === '[object Array]';\n}\n","export function unflatten(\n  data: Record<string, any> | any[],\n): Record<string, any> {\n  if (Object(data) !== data || Array.isArray(data)) return data;\n  const regex = /\\.?([^.[\\]]+)|\\[(\\d+)\\]/g;\n  const flat: Record<string, any> = {};\n  for (const p in data) {\n    let cur = flat;\n    let prop = '';\n    let m;\n    while ((m = regex.exec(p))) {\n      cur = cur[prop] || (cur[prop] = m[2] ? [] : {});\n      prop = m[2] || m[1];\n    }\n    cur[prop] = data[p];\n  }\n  return flat[''] || flat;\n}\n","export function fixUrlStr(url: string): string {\n  // remove double slash\n  return url.replace(/([^:]\\/)\\/+/g, '$1');\n}\n\nexport function updateUrlParams(\n  urlStr: string,\n  params: Record<string, string | undefined>,\n) {\n  const url = new URL(urlStr);\n  const searchParams = new URLSearchParams(url.search);\n\n  Object.entries(params).forEach(([key, value]) => {\n    if (value === undefined) {\n      searchParams.delete(key);\n    } else {\n      searchParams.set(key, value);\n    }\n  });\n\n  searchParams.set('timestamp', String(new Date().getTime()));\n\n  const newSearch = [...searchParams.entries()]\n    .map(([key, value]) => `${key}=${value}`)\n    .join('&');\n\n  return `${url.origin}${url.pathname}?${newSearch}`;\n}\n"],"names":["arr","__publicField","d2r","r2d"],"mappings":"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"}