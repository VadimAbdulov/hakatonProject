{"version":3,"file":"utils.cjs.prod.js","sources":["../src/applyMixins.ts","../src/array/arrayCompare.ts","../src/Clipboard.ts","../src/debounce.ts","../src/defined.ts","../src/geom/constants.ts","../src/geom/eachCoordinates.ts","../src/geom/getBoundsPolygon.ts","../src/geom/getCirclePolygon.ts","../src/geom/getSquarePolygon.ts","../src/object/objectDeepEqual.ts","../src/platform.ts","../src/typeHelpers/isObjKey.ts","../src/typeHelpers/Json.ts","../src/typeHelpers/index.ts","../src/events.ts","../src/array/arrayChunk.ts","../src/array/arrayUnique.ts","../src/string/camelize.ts","../src/string/capitalize.ts","../src/geom/checkExtent.ts","../src/debug/debugLog.ts","../src/deepmerge.ts","../src/geom/coordTransform.ts","../src/deprecated/deprecatedMapClick.ts","../src/deprecated/deprecatedWarn.ts","../src/url.ts","../src/flatten.ts","../src/geom/getIdentifyRadius.ts","../src/geom/isLngLatBoundsArray.ts","../src/geom/geom.ts","../src/string/numberWithSpaces.ts","../src/object/objectAssign.ts","../src/object/objectRemoveEmpty.ts","../src/re/reEscape.ts","../src/number/round.ts","../src/sleep.ts","../src/unflatten.ts"],"sourcesContent":["export interface ApplyMixinOptions {\n  replace?: boolean;\n}\n\ntype Ctor = any;\n\nexport function applyMixins(\n  derivedCtor: Ctor,\n  baseCtors: Ctor[],\n  opt: ApplyMixinOptions = {},\n): void {\n  const derivedProperties = allProperties(derivedCtor.prototype);\n  const replace = opt.replace !== undefined ? opt.replace : true;\n  baseCtors.forEach((baseCtor) => {\n    Object.getOwnPropertyNames(baseCtor.prototype).forEach((name) => {\n      const isSomeProp = derivedProperties.indexOf(name) !== -1;\n      if ((!replace && !isSomeProp) || replace) {\n        const descriptor = Object.getOwnPropertyDescriptor(\n          baseCtor.prototype,\n          name,\n        );\n        if (descriptor) {\n          Object.defineProperty(derivedCtor.prototype, name, descriptor);\n        }\n      }\n    });\n  });\n}\n\nexport function allProperties(obj: Record<string, unknown>): string[] {\n  return _allProperties(obj);\n}\n\nfunction _allProperties(\n  obj: Record<string, unknown>,\n  _props: string[] = [],\n): string[] {\n  for (; obj !== null; obj = Object.getPrototypeOf(obj)) {\n    const op = Object.getOwnPropertyNames(obj);\n    for (let i = 0; i < op.length; i++) {\n      if (_props.indexOf(op[i]) == -1) {\n        _props.push(op[i]);\n      }\n    }\n  }\n  return _props;\n}\n\nexport function mixinProperties(\n  derivedCtor: Ctor,\n  baseCtor: Ctor,\n  properties: string[],\n): void {\n  properties.forEach((name) => {\n    const descriptor = Object.getOwnPropertyDescriptor(\n      baseCtor.prototype,\n      name,\n    );\n    if (descriptor) {\n      Object.defineProperty(derivedCtor.prototype, name, descriptor);\n    }\n  });\n}\n","/**\n * Comparison of the contents of two arrays. Position of elements is ignored.\n * @example\n * ```javascript\n * arrayCompare(['a', 'b'], ['b', 'a']) // true\n * arrayCompare(['a', 'b'], ['b']) // false\n * arrayCompare('asdf1234', '1234asdf') // true\n * ```\n */\nexport function arrayCompare(array1: any[], array2: any[]): boolean {\n  array1 = Array.from(array1).sort();\n  array2 = Array.from(array2).sort();\n  return _arrayCompare(array1, array2);\n}\n\n/**\n * Comparing content and position of elements of two arrays.\n * @example\n * ```javascript\n * arrayCompareStrict(['a', 'b'], ['a', 'b']) // true\n * arrayCompareStrict(['a', 'b'], ['b', 'a']) // false\n * arrayCompareStrict('asdf1234', 'asdf1234') // true\n * arrayCompareStrict('asdf1234', '1234asdf') // false\n * ```\n */\nexport function arrayCompareStrict(array1: any[], array2: any[]): boolean {\n  array1 = Array.from(array1);\n  array2 = Array.from(array2);\n  return _arrayCompare(array1, array2);\n}\n\nfunction _arrayCompare(array1: any[], array2: any[]): boolean {\n  return (\n    array1.length === array2.length &&\n    array1.every(function (value, index) {\n      return value === array2[index];\n    })\n  );\n}\n","export class Clipboard {\n  silent = true;\n\n  constructor(text?: string) {\n    if (text) {\n      this.copy(text);\n    }\n  }\n\n  static copy(text: string): boolean {\n    const clipboard = new Clipboard();\n    return clipboard.copy(text);\n  }\n\n  copy(text: string): boolean {\n    try {\n      if ((navigator as any).clipboard) {\n        (navigator as any).clipboard.writeText(text);\n      } else if ((window as any).clipboardData) {\n        (window as any).clipboardData.setData('text', text);\n      } else {\n        this.copyToClipboard(text);\n      }\n      if (!this.silent) console.log('Copied to Clipboard');\n      return true;\n    } catch {\n      if (!this.silent) console.log('Please copy manually');\n    }\n    return false;\n  }\n\n  private copyToClipboard(text: string) {\n    const input = document.createElement('input') as HTMLInputElement;\n    input.value = text;\n    try {\n      document.body.appendChild(input);\n      this.copyNodeContentsToClipboard(input);\n    } finally {\n      document.body.removeChild(input);\n    }\n  }\n\n  private copyNodeContentsToClipboard(input: HTMLInputElement) {\n    input.select();\n    input.setSelectionRange(0, 99999); /*For mobile devices*/\n    document.execCommand('copy');\n  }\n}\n","// based on https://github.com/bvaughn/debounce-decorator\n\nexport function debounce<T extends (...args: any[]) => void>(\n  cb: T,\n  wait = 10,\n): T & { clear: () => void } {\n  let timeoutId: any;\n\n  function wrapper(this: any, ...args: any[]) {\n    wrapper.clear();\n\n    timeoutId = setTimeout(() => {\n      timeoutId = null;\n      cb.apply(this, args);\n    }, wait);\n  }\n\n  wrapper.clear = function () {\n    if (timeoutId) {\n      clearTimeout(timeoutId);\n      timeoutId = null;\n    }\n  };\n\n  return wrapper as T & { clear: () => void };\n}\n\nexport function DebounceDecorator(wait = 10) {\n  return function (\n    _target: unknown,\n    key: string,\n    descriptor: PropertyDescriptor,\n  ): PropertyDescriptor {\n    return {\n      configurable: true,\n      enumerable: descriptor.enumerable,\n      get: function getter() {\n        // Attach this function to the instance (not the class)\n        Object.defineProperty(this, key, {\n          configurable: true,\n          enumerable: descriptor.enumerable,\n          value: debounce(descriptor.value, wait),\n        });\n\n        return this[key as keyof PropertyDescriptor];\n      },\n    };\n  };\n}\n","/**\n * from https://github.com/CesiumGS/cesium/blob/master/Source/Core/defined.js\n *\n * @param val - The object.\n * @returns Returns true if the object is defined, returns false otherwise.\n *\n * @example\n * ```javascript\n * if (defined(positions)) {\n *   doSomething();\n * } else {\n *   doSomethingElse();\n * }\n * ```\n */\nexport function defined<T>(val: T): val is Exclude<T, null | undefined> {\n  return val !== undefined && val !== null;\n}\n\n/**\n * from https://github.com/CesiumGS/cesium/blob/master/Source/Core/defined.js\n *\n * @param val - The object.\n * @returns Returns true if the object is defined and not empty string, returns false otherwise.\n *\n * @example\n * ```javascript\n * full('foo') // true\n * full('') // false\n * full(undefined) // false\n * full(0) // true\n * ```\n */\nexport function full<T>(val: T): val is Exclude<T, null | undefined> {\n  return typeof val === 'string' ? !!val : defined(val);\n}\n","/**\n * Radius of the earth in kilometers\n */\nexport const EARTHS_RADIUS = 6371;\n","import type { GeoJSON, Geometry, Position } from 'geojson';\n\nexport function coordinatesCount(geojson: GeoJSON): number {\n  let count = 0;\n  eachCoordinates(geojson, () => count++);\n  return count;\n}\n\nexport function getCoordinates(geojson: GeoJSON): Position[] {\n  const coordinates: Position[] = [];\n  eachCoordinates(geojson, (pos) => coordinates.push(pos));\n  return coordinates;\n}\n\nexport function eachCoordinates(\n  geojson: GeoJSON,\n  cb: (position: Position) => void,\n): void {\n  eachGeometry(geojson, (geom) => {\n    if ('coordinates' in geom) {\n      if (geom.type === 'Polygon' || geom.type === 'MultiLineString') {\n        for (const x of geom.coordinates) {\n          x.forEach((y) => cb(y));\n        }\n      } else if (geom.type === 'MultiPolygon') {\n        for (const x of geom.coordinates) {\n          x.forEach((y) => y.forEach((z) => cb(z)));\n        }\n      } else if (geom.type === 'Point') {\n        cb(geom.coordinates);\n      } else if (geom.type === 'MultiPoint' || geom.type === 'LineString') {\n        for (const x of geom.coordinates) {\n          cb(x);\n        }\n      }\n    }\n    return geom;\n  });\n}\n\nexport function getPolygons(geojson: GeoJSON): Position[][] {\n  const polygons: Position[][] = [];\n  eachGeometry(geojson, (geom) => {\n    if ('coordinates' in geom) {\n      if (geom.type === 'Polygon') {\n        geom.coordinates.forEach((x) => polygons.push(x));\n      } else if (geom.type === 'MultiPolygon') {\n        for (const x of geom.coordinates) {\n          for (const y of x) {\n            polygons.push(y);\n          }\n        }\n      }\n    }\n    return geom;\n  });\n  return polygons;\n}\n\nexport function eachGeometry(\n  geojson: GeoJSON,\n  cb: (position: Geometry) => void,\n): void {\n  if (geojson.type === 'FeatureCollection') {\n    for (const f of geojson.features) {\n      cb(f.geometry);\n    }\n  } else if (geojson.type === 'Feature') {\n    cb(geojson.geometry);\n  } else if ('coordinates' in geojson) {\n    cb(geojson);\n  }\n}\n","import type { Feature, Polygon } from 'geojson';\n\nimport type { LngLatBoundsArray } from './interfaces';\n\nexport function getBoundsPolygon(b: LngLatBoundsArray): Polygon {\n  const polygon: Polygon = {\n    type: 'Polygon',\n    coordinates: [getBoundsCoordinates(b)],\n  };\n  return polygon;\n}\n\nexport function getBoundsCoordinates(b: LngLatBoundsArray): number[][] {\n  const westNorth = [b[0], b[1]];\n  const eastNorth = [b[2], b[1]];\n  const eastSouth = [b[2], b[3]];\n  const westSouth = [b[0], b[3]];\n\n  return [westNorth, eastNorth, eastSouth, westSouth, westNorth];\n}\n\nexport function getBoundsFeature(b: LngLatBoundsArray): Feature<Polygon> {\n  const feature: Feature<Polygon> = {\n    type: 'Feature',\n    properties: {},\n    geometry: getBoundsPolygon(b),\n  };\n  return feature;\n}\n","import { EARTHS_RADIUS } from './constants';\n\nimport type { Feature, Polygon, Position } from 'geojson';\n\nconst d2r = Math.PI / 180; // degrees to radians\nconst r2d = 180 / Math.PI; // radians to degrees\n\nexport function getCirclePolygonCoordinates(\n  lng: number,\n  lat: number,\n  /** In kilometers */\n  radius = 10,\n  points = 6,\n): Position[] {\n  // find the radius in lat/lon\n  const rlat = (radius / EARTHS_RADIUS) * r2d;\n  const rlng = rlat / Math.cos(lat * d2r);\n\n  const extp = [];\n  for (let i = 0; i < points + 1; i++) {\n    // one extra here makes sure we connect the\n\n    const theta = Math.PI * (i / (points / 2));\n    const ex = lng + rlng * Math.cos(theta); // center a + radius x * cos(theta)\n    const ey = lat + rlat * Math.sin(theta); // center b + radius y * sin(theta)\n    extp.push([ex, ey]);\n  }\n\n  return extp;\n}\n\nexport function getCircleFeature(\n  lng: number,\n  lat: number,\n  radius = 10,\n  points = 6,\n): Feature<Polygon> {\n  const polygon = getCirclePolygonCoordinates(lng, lat, radius, points);\n  const feature: Feature<Polygon> = {\n    type: 'Feature',\n    properties: {},\n    geometry: {\n      type: 'Polygon',\n      coordinates: [polygon],\n    },\n  };\n  return feature;\n}\n","import { EARTHS_RADIUS } from './constants';\n\nimport type { Position } from 'geojson';\n\nconst d2r = Math.PI / 180;\nconst r2d = 180 / Math.PI;\n\nexport function getSquarePolygonCoordinates(\n  lng: number,\n  lat: number,\n  halfSideLength = 10,\n): Position[] {\n  const rlat = (halfSideLength / EARTHS_RADIUS) * r2d;\n  const rlng = rlat / Math.cos(lat * d2r);\n\n  const topLeft: Position = [lng - rlng, lat + rlat];\n  const topRight: Position = [lng + rlng, lat + rlat];\n  const bottomRight: Position = [lng + rlng, lat - rlat];\n  const bottomLeft: Position = [lng - rlng, lat - rlat];\n\n  return [topLeft, topRight, bottomRight, bottomLeft, topLeft];\n}\n","function isEqual(a: unknown, b: unknown, o: unknown, p: unknown): boolean {\n  if (a instanceof Array) {\n    if (!(b instanceof Array)) return false;\n    //if (compareObjects(oVal, pVal === false) return false\n    //would work, too, and perhaps is a better fit, still, this is easy, too\n    return b.sort().join('') === a.sort().join('');\n  } else if (a instanceof Date) {\n    if (!(b instanceof Date)) return false;\n    return '' + a === '' + b;\n  } else if (a instanceof Function) {\n    if (!(b instanceof Function)) return false;\n    //ignore functions, or check them regardless?\n  } else if (a instanceof Object) {\n    if (!(b instanceof Object)) return false;\n    if (a === o) {\n      return b === p;\n    } else {\n      return objectDeepEqual(a, b);\n    }\n  }\n  return a === b;\n}\n\n// based on https://stackoverflow.com/a/13143059\nexport function objectDeepEqual<\n  T extends Record<string, any> = Record<string, any>,\n>(o: T, p: T): boolean {\n  const keysO = Object.keys(o).sort();\n  const keysP = Object.keys(p).sort();\n  if (keysO.length !== keysP.length) return false;\n  if (keysO.join('') !== keysP.join('')) return false;\n  for (let i = 0; i < keysO.length; i++) {\n    const oVal = o[keysO[i]];\n    const pVal = p[keysP[i]];\n    if (!isEqual(oVal, pVal, o, p)) {\n      return false;\n    }\n  }\n  return true;\n}\n","export const isBrowser =\n  typeof window !== 'undefined' && typeof window.document !== 'undefined';\n\nexport const type: 'browser' | 'node' = isBrowser ? 'browser' : 'node';\n\nexport function getGlobalVariable(): any {\n  if (isBrowser) {\n    return window;\n  } else {\n    // NativeScript uses global, not window\n    return global;\n  }\n}\n","type Obj = Record<string | number, any>;\n\nexport function isObjKey<O extends Obj = Obj>(\n  obj: O,\n  key: unknown,\n): key is keyof O {\n  if (typeof key === 'string' || typeof key === 'number') {\n    return key in obj;\n  }\n  return false;\n}\n\n/**\n *\n * @deprecated - use isObjKey instead\n */\nexport function keyInObj<O extends Obj = Obj>(\n  obj: O,\n  key: unknown,\n): key is keyof O {\n  return isObjKey(obj, key);\n}\n","import { isArray, isObject } from '../index';\n\nexport type AnyJson = boolean | number | string | null | JsonArray | JsonMap;\nexport interface JsonMap {\n  [key: string]: AnyJson;\n}\nexport type JsonArray = Array<AnyJson>;\n\nexport function isAnyJson(val: unknown): val is AnyJson {\n  if (\n    typeof val === 'boolean' ||\n    typeof val === 'number' ||\n    typeof val === 'string' ||\n    val === null\n  ) {\n    return true;\n  } else if (isObject(val)) {\n    return isJsonMap(val);\n  } else if (isArray(val)) {\n    return isJsonArray(val);\n  }\n  return false;\n}\n\nexport function isJsonArray(val: unknown): val is JsonArray {\n  if (isArray(val)) {\n    return val.every(isAnyJson);\n  }\n  return false;\n}\n\nexport function isJsonMap(val: unknown): val is JsonMap {\n  if (isObject(val)) {\n    for (const i in val) {\n      if (!isAnyJson(i)) {\n        return false;\n      }\n    }\n  }\n  return false;\n}\n","export * from './DeepPartial';\nexport * from './isObjKey';\nexport * from './Json';\nexport * from './Type';\n\nexport function isObject(val: unknown): val is Record<string | number, any> {\n  return Object.prototype.toString.call(val) === '[object Object]';\n}\n\nexport function isArray(val: unknown): val is [] {\n  return Object.prototype.toString.call(val) === '[object Array]';\n}\n","import type { EventEmitter } from 'events';\n\nexport class Events<E = any> {\n  private readonly _eventsStatus: { [key in keyof E]?: boolean } = {};\n\n  constructor(private emitter: EventEmitter) {}\n\n  setEventStatus(event: keyof E, status: boolean): void {\n    this._eventsStatus[event] = status;\n  }\n\n  onLoad(event: keyof E | (keyof E)[]): Promise<this> {\n    const events: (keyof E)[] = Array.isArray(event) ? event : [event];\n    const promises = events.map(\n      (x) =>\n        new Promise((res) => {\n          if (this.getEventStatus(x)) {\n            res(this);\n          } else {\n            const e = x as string | symbol;\n            this.emitter.once(e, () => {\n              this.setEventStatus(x, true);\n              res(this);\n            });\n          }\n        }),\n    );\n    return Promise.all(promises).then(() => this);\n  }\n\n  getEventStatus(event: keyof E): boolean {\n    // ugly hack to disable type checking error\n    const _eventName = event as keyof E;\n    const status = this._eventsStatus[_eventName];\n    return status !== undefined ? !!status : false;\n  }\n}\n","export function arrayChunk<T>(arr: T[], size: number): T[][] {\n  return Array.from({ length: Math.ceil(arr.length / size) }, (v, i) =>\n    arr.slice(i * size, i * size + size),\n  );\n}\n","export function arrayUnique<T = any>(arr: T[]): T[] {\n  return arr.filter((elem, pos, arr) => {\n    return arr.indexOf(elem) == pos;\n  });\n}\n","/**\n * Camelize a string, cutting the string by separator character.\n * @param text to camelize\n * @param separator Word separator (string or regexp)\n * @return string Camelized text\n */\nexport function camelize(text: string, separator = /[_.\\- ]/) {\n  // Cut the string into words\n  const words = text.split(separator);\n\n  // Concatenate all capitalized words to get camelized string\n  let result = '';\n  for (let i = 0; i < words.length; i++) {\n    const word = words[i];\n    const capitalizedWord = word.charAt(0).toUpperCase() + word.slice(1);\n    result += capitalizedWord;\n  }\n\n  return result;\n}\n","export function capitalize(str: string): string {\n  str = String(str).toLowerCase();\n  return str[0].toUpperCase() + str.slice(1);\n}\n","import type { LngLatBoundsArray } from './interfaces';\n\nexport function checkExtent(extent: number[]): extent is LngLatBoundsArray {\n  const [minLon, minLat, maxLon, maxLat] = extent;\n\n  // Check if coordinates are in the correct order\n  const isOrderValid = minLon < maxLon && minLat < maxLat;\n\n  if (!isOrderValid) {\n    console.log('Error: The extent coordinates are not in the correct order.');\n    console.log(\n      `Received extent: [${minLon}, ${minLat}, ${maxLon}, ${maxLat}]`,\n    );\n\n    // Create a valid array with corrected order\n    const correctedExtent = [\n      Math.min(minLon, maxLon),\n      Math.min(minLat, maxLat),\n      Math.max(minLon, maxLon),\n      Math.max(maxLat, minLat),\n    ];\n\n    console.log(`Expected order: [${correctedExtent.join(', ')}]`);\n  }\n\n  // Check if the coordinates are within valid ranges\n  const isValidLon = minLon >= -180 && maxLon <= 180;\n  const isValidLat = minLat >= -90 && maxLat <= 90;\n\n  if (!isValidLon || !isValidLat) {\n    console.log(\n      'Warning: The coordinates may not be within valid geographic ranges.',\n    );\n  }\n\n  // Return true only if all checks pass\n  return isOrderValid && isValidLon && isValidLat;\n}\n","export function debugLog(message?: string): boolean {\n  if (__DEV__) {\n    console.trace('DEBUG: ' + message);\n    return true;\n  }\n  return false;\n}\n","export function deepmerge<T>(\n  x: Partial<T>,\n  y: Partial<T>,\n  mergeArray?: boolean,\n): T;\nexport function deepmerge<T1, T2>(\n  target: Partial<T1>,\n  src: Partial<T2>,\n  mergeArray = false,\n): T1 & T2 {\n  let target_ = target as any;\n  const src_ = src as any;\n  const array = Array.isArray(src_);\n  let dst: any = (array && []) || {};\n\n  if (array && Array.isArray(src_)) {\n    if (mergeArray) {\n      target_ = target_ || [];\n      dst = dst.concat(target_);\n      src_.forEach((e: any, i: number) => {\n        if (typeof dst[i] === 'undefined') {\n          dst[i] = e;\n        } else if (typeof e === 'object') {\n          dst[i] = deepmerge(target_[i], e, mergeArray);\n        } else {\n          if (target_.indexOf(e) === -1) {\n            dst.push(e);\n          }\n        }\n      });\n    } else {\n      // Replace array. Do not merge by default\n      dst = src_;\n    }\n  } else {\n    if (target_ && typeof target_ === 'object') {\n      Object.keys(target_).forEach(function (key) {\n        dst[key] = target_[key];\n      });\n    }\n    Object.keys(src_).forEach(function (key) {\n      if (typeof src_[key] !== 'object' || !src_[key]) {\n        dst[key] = src_[key];\n      } else {\n        if (typeof target_[key] === 'object' && typeof src_[key] === 'object') {\n          dst[key] = deepmerge(target_[key], src_[key], mergeArray);\n        } else {\n          dst[key] = src_[key];\n        }\n      }\n    });\n  }\n  return dst;\n}\n","import type { LngLatArray } from './interfaces';\n\nexport function degrees2meters(lng: number, lat: number): [number, number] {\n  lat = lat > 85.06 ? 85.06 : lat < -85.06 ? -85.06 : lat;\n\n  const x = (lng * 20037508.34) / 180;\n  let y = Math.log(Math.tan(((90 + lat) * Math.PI) / 360)) / (Math.PI / 180);\n  y = (y * 20037508.34) / 180;\n  return [x, y];\n}\n\nexport function meters2degrees(x: number, y: number): LngLatArray {\n  const lon = (x * 180) / 20037508.34;\n  const lat =\n    (Math.atan(Math.exp((y * Math.PI) / 20037508.34)) * 360) / Math.PI - 90;\n  return [lon, lat];\n}\n\nexport function degrees2Radian(deg: number): number {\n  return (deg * Math.PI) / 180;\n}\n\n// export function degrees2meters2(lon: number, lat: number): [number, number] {\n//   const radius = 6378137.0;\n//   const x = (radius * lon * Math.PI) / 180.0;\n//   const y =\n//     radius * Math.log(Math.tan(Math.PI / 4.0 + (lat * Math.PI) / 360.0));\n//   return [x, y];\n// }\n\n// export function meters2degress2(x: number, y: number): LngLatArray {\n//   const radius = 6378137.0;\n//   const lon = (180 / Math.PI) * (x / radius);\n//   const lat = (360 / Math.PI) * (Math.atan(Math.exp(y / radius)) - Math.PI / 4);\n//   return [lon, lat];\n// }\n\n// const lon = -77.035974;\n// const lat = 38.898717;\n\n// console.log(degrees2meters(lon, lat), degrees2meters2(lon, lat));\n\n// const x = -8575605.398443861;\n// const y = 4707174.018280405;\n\n// console.log(meters2degress(x, y), meters2degress2(x, y));\n","import { debugLog } from '../debug/debugLog';\n\nimport type { LatLng } from '../geom/interfaces';\nimport type { LngLatArray } from '../geom/interfaces';\n\ninterface DeprecatedMapClickEvent {\n  lngLat: LngLatArray;\n  latLng?: LatLng;\n}\n\n/**\n * @internal\n */\nexport function deprecatedMapClick<\n  T extends DeprecatedMapClickEvent = DeprecatedMapClickEvent,\n>(ev: T): T {\n  if (!ev.lngLat && ev.latLng) {\n    debugLog('deprecated use of latLng in MapClickEvent, use lngLat instead');\n    const lat = ev.latLng.lat;\n    const lng = ev.latLng.lng;\n    ev.lngLat = [lng, lat];\n  }\n  return ev;\n}\n","/** @internal */\nexport function deprecatedWarn(message: string): void {\n  console.warn(`DEPRECATED WARN: ${message}`);\n}\n","export function fixUrlStr(url: string): string {\n  // remove double slash\n  return url.replace(/([^:]\\/)\\/+/g, '$1');\n}\n\nexport function updateUrlParams(\n  urlStr: string,\n  params: Record<string, string | undefined>,\n) {\n  const url = new URL(urlStr);\n  const searchParams = new URLSearchParams(url.search);\n\n  Object.entries(params).forEach(([key, value]) => {\n    if (value === undefined) {\n      searchParams.delete(key);\n    } else {\n      searchParams.set(key, value);\n    }\n  });\n\n  searchParams.set('timestamp', String(new Date().getTime()));\n\n  const newSearch = [...searchParams.entries()]\n    .map(([key, value]) => `${key}=${value}`)\n    .join('&');\n\n  return `${url.origin}${url.pathname}?${newSearch}`;\n}\n","export interface FlattenOptions {\n  flatArray?: boolean;\n}\n\nexport function flatten(\n  data: Record<string, any>,\n  opt: FlattenOptions = {},\n): Record<string, any> {\n  const flatArray = opt.flatArray ?? true;\n  const result: Record<string, any> = {};\n  function recurse(cur: Record<string, any>, prop: any) {\n    if (Object(cur) !== cur) {\n      result[prop] = cur;\n    } else if (Array.isArray(cur) && flatArray) {\n      const l = cur.length;\n      for (let i = 0; i < l; i++) {\n        recurse(cur[i], prop + '[' + i + ']');\n      }\n      if (l === 0) result[prop] = [];\n    } else {\n      let isEmpty = true;\n      for (const p in cur) {\n        isEmpty = false;\n        recurse(cur[p], prop ? prop + '.' + p : p);\n      }\n      if (isEmpty && prop) result[prop] = {};\n    }\n  }\n  recurse(data, '');\n  return result;\n}\n","import type { LngLatArray } from '@nextgis/utils';\n\nexport function getIdentifyRadius(\n  center: LngLatArray,\n  zoom: number,\n  pixelRadius: number,\n): number {\n  pixelRadius = pixelRadius ?? 10;\n  const metresPerPixel =\n    (40075016.686 * Math.abs(Math.cos((center[1] * 180) / Math.PI))) /\n    Math.pow(2, zoom + 8);\n  const radius = pixelRadius * metresPerPixel * 0.0005;\n  return radius;\n}\n","import type { LngLatBoundsArray } from '@nextgis/utils';\n\nexport function isLngLatBoundsArray(\n  array: unknown,\n): array is LngLatBoundsArray {\n  return (\n    Array.isArray(array) &&\n    array.length === 4 &&\n    array.every((x) => typeof x === 'number')\n  );\n}\n","import type { LatLng, LngLatArray } from './interfaces';\n\nexport function latLngToLngLatArray(latLng: LatLng): LngLatArray {\n  return [latLng.lng, latLng.lat];\n}\n\nexport function lngLatArrayToLatLng(coord: LngLatArray): LatLng {\n  return { lat: coord[1], lng: coord[0] };\n}\n","export function numberWithSpaces(x: number): string {\n  const parts = x.toString().split('.');\n  parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ');\n  return parts.join('.');\n}\n","export function objectAssign<T, U>(target: T, source: U): T & U;\n\n/**\n * Copy the values of all of the enumerable own properties from one or more source objects to a\n * target object. Returns the target object.\n * @param target - The target object to copy to.\n * @param source1 - The first source object from which to copy properties.\n * @param source2 - The second source object from which to copy properties.\n */\nexport function objectAssign<T, U, V>(\n  target: T,\n  source1: U,\n  source2: V,\n): T & U & V;\n\n/**\n * Copy the values of all of the enumerable own properties from one or more source objects to a\n * target object. Returns the target object.\n * @param target - The target object to copy to.\n * @param source1 - The first source object from which to copy properties.\n * @param source2 - The second source object from which to copy properties.\n * @param source3 - The third source object from which to copy properties.\n */\nexport function objectAssign<T, U, V, W>(\n  target: T,\n  source1: U,\n  source2: V,\n  source3: W,\n): T & U & V & W;\n\n/**\n * Copy the values of all of the enumerable own properties from one or more source objects to a\n * target object. Returns the target object.\n * @param target - The target object to copy to.\n * @param sources - One or more source objects from which to copy properties\n */\nexport function objectAssign(\n  target: Record<string, unknown>,\n  ...sources: any[]\n): any {\n  for (const source of sources) {\n    for (const prop of Object.getOwnPropertyNames(source)) {\n      (target as any)[prop] = source[prop];\n    }\n  }\n}\n","type NoUndefinedField<T> = {\n  [P in keyof T]: Exclude<T[P], undefined>;\n};\n\nexport function objectRemoveEmpty<T extends Record<any, any>>(\n  obj: T,\n): NoUndefinedField<T> {\n  const newObj: Record<any, any> = {};\n  Object.keys(obj).forEach((key) => {\n    if (!(obj[key] instanceof Array) && obj[key] === Object(obj[key])) {\n      newObj[key] = objectRemoveEmpty(obj[key]);\n    } else if (obj[key] !== undefined) {\n      newObj[key] = obj[key];\n    }\n  });\n  return newObj as NoUndefinedField<T>;\n}\n","export function reEscape(s: string): string {\n  return s.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n}\n","export function round(val: number, toFixed?: number): number {\n  const n = toFixed ? Number('1e+' + toFixed) : 1;\n  return Math.round((val + Number.EPSILON) * n) / n;\n}\n","export function sleep(delay = 0): Promise<void> {\n  return new Promise<void>((resolve) => setTimeout(resolve, delay));\n}\n","export function unflatten(\n  data: Record<string, any> | any[],\n): Record<string, any> {\n  if (Object(data) !== data || Array.isArray(data)) return data;\n  const regex = /\\.?([^.[\\]]+)|\\[(\\d+)\\]/g;\n  const flat: Record<string, any> = {};\n  for (const p in data) {\n    let cur = flat;\n    let prop = '';\n    let m;\n    while ((m = regex.exec(p))) {\n      cur = cur[prop] || (cur[prop] = m[2] ? [] : {});\n      prop = m[2] || m[1];\n    }\n    cur[prop] = data[p];\n  }\n  return flat[''] || flat;\n}\n"],"names":["allProperties","obj","_props","Object","getPrototypeOf","op","getOwnPropertyNames","i","length","indexOf","push","_allProperties","_arrayCompare","array1","array2","every","value","index","Clipboard","constructor","text","__publicField","this","copy","navigator","clipboard","writeText","window","clipboardData","setData","copyToClipboard","silent","console","log","input","document","createElement","body","appendChild","copyNodeContentsToClipboard","removeChild","select","setSelectionRange","execCommand","debounce","cb","wait","timeoutId","wrapper","args","clear","setTimeout","apply","clearTimeout","defined","val","EARTHS_RADIUS","eachCoordinates","geojson","eachGeometry","geom","type","x","coordinates","forEach","y","z","f","features","geometry","getBoundsPolygon","b","getBoundsCoordinates","westNorth","d2r","Math","PI","r2d","getCirclePolygonCoordinates","lng","lat","radius","points","rlat","rlng","cos","extp","theta","ex","ey","sin","isEqual","a","o","p","Array","sort","join","Date","Function","objectDeepEqual","keysO","keys","keysP","isBrowser","isObjKey","key","isAnyJson","isObject","isJsonMap","isArray","isJsonArray","prototype","toString","call","_target","descriptor","configurable","enumerable","get","defineProperty","emitter","setEventStatus","event","status","_eventsStatus","onLoad","promises","map","Promise","res","getEventStatus","once","all","then","derivedCtor","baseCtors","opt","derivedProperties","replace","baseCtor","name","isSomeProp","getOwnPropertyDescriptor","arr","size","from","ceil","v","slice","filter","elem","pos","separator","words","split","result","word","charAt","toUpperCase","str","String","toLowerCase","extent","minLon","minLat","maxLon","maxLat","isOrderValid","correctedExtent","min","max","isValidLon","isValidLat","count","message","deepmerge","target","src","mergeArray","target_","src_","array","dst","concat","e","deg","tan","ev","lngLat","latLng","warn","url","data","_a","flatArray","recurse","cur","prop","l","isEmpty","properties","global","center","zoom","pixelRadius","abs","pow","polygons","halfSideLength","topLeft","coord","atan","exp","parts","sources","source","objectRemoveEmpty","newObj","s","toFixed","n","Number","round","EPSILON","delay","resolve","regex","flat","m","exec","urlStr","params","URL","searchParams","URLSearchParams","search","entries","delete","set","getTime","newSearch","origin","pathname"],"mappings":"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"}