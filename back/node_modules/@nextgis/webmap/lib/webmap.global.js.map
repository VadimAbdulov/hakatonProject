{"version":3,"file":"webmap.global.js","sources":["../src/container.ts","../src/components/controls/createToggleControl.ts","../../expression/src/utils/evaluateArgs.ts","../../expression/src/expressions/decisionExpressions.ts","../../expression/src/constants/colors.ts","../../expression/src/utils/color.ts","../../expression/src/expressions/interpolationExpressions/interpolate.ts","../../expression/src/expressions/interpolationExpressions/step.ts","../../expression/src/expressions/interpolationExpressions/index.ts","../../expression/src/expressions/lookupExpressions.ts","../../expression/src/expressions/mathExpressions.ts","../../expression/src/expressions/stringExpressions.ts","../../expression/src/utils/tryConvert.ts","../../expression/src/utils/fallback.ts","../../expression/src/expressions/typeExpressions.ts","../../expression/src/expression.ts","../../paint/src/fromPaintExpression.ts","../../properties-filter/src/propertiesFilter.ts","../../paint/src/typeHelpers.ts","../../paint/src/preparePaint.ts","../../utils/src/debug/debugLog.ts","../../utils/src/deepmerge.ts","../../utils/src/defined.ts","../../utils/src/deprecated/deprecatedMapClick.ts","../../utils/src/geom/checkExtent.ts","../../utils/src/geom/getBoundsPolygon.ts","../src/utils/geometryTypes.ts","../src/utils/updateGeoJsonAdapterOptions.ts","../src/components/keys/KeysCodes.ts","../src/components/keys/Keys.ts","../src/components/mapStates/StateItem.ts","../src/components/mapStates/BoundState.ts","../src/components/mapStates/CenterState.ts","../src/components/mapStates/ZoomState.ts","../src/utils/clearObject.ts","../src/WebMapMain.ts","../src/WebMapLayers.ts","../src/WebMapControls.ts","../src/WebMap.ts","../src/utils/getDefaultControls.ts","../src/index.ts"],"sourcesContent":["import type { WebMap } from './WebMap';\n\nconst WEB_MAP_CONTAINER: Record<number, any> = {};\n\nexport function getWebMap<T extends WebMap = WebMap>(id: number): T {\n  return WEB_MAP_CONTAINER[id];\n}\n\nexport function setWebMap(id: number, webMap: WebMap) {\n  WEB_MAP_CONTAINER[id] = webMap;\n}\n","import type {\n  ButtonControlOptions,\n  ToggleControl,\n  ToggleControlOptions,\n} from '../../interfaces/MapControl';\n\n/**\n * The toggle is a button with status.\n * @internal\n */\nexport function createToggleControl<C = any>(\n  createButtonControl: (options: ButtonControlOptions) => C,\n  options: ToggleControlOptions,\n): C & ToggleControl {\n  const link = document.createElement('div');\n\n  let status = false;\n  if (options.getStatus) {\n    status = options.getStatus();\n  } else if (options.status) {\n    status = options.status;\n  }\n\n  const title = options.title || '';\n  const html = options.html;\n\n  function setTitle() {\n    if (title) {\n      if (typeof title === 'string') {\n        link.title = title;\n      } else {\n        link.title = status ? title.on : title.off;\n      }\n      link.setAttribute('aria-label', link.title);\n    }\n  }\n  setTitle();\n\n  // DomEvent.disableClickPropagation(link);\n  // DomEvent.on(link, 'click', DomEvent.stop);\n\n  function _setHtml(htmlDef: string | HTMLElement) {\n    if (htmlDef instanceof HTMLElement) {\n      link.innerHTML = '';\n      link.appendChild(htmlDef);\n    } else if (typeof htmlDef === 'string') {\n      link.innerHTML = htmlDef;\n    }\n  }\n  function setHtml() {\n    if (html) {\n      if (typeof html === 'string' || html instanceof HTMLElement) {\n        _setHtml(html);\n      } else {\n        _setHtml(status ? html.on : html.off);\n      }\n      link.setAttribute('aria-label', link.title);\n    }\n  }\n  setHtml();\n\n  function _setClass(addClass: string, impact: boolean) {\n    addClass.split(' ').forEach((x) => {\n      if (impact) {\n        link.classList.add(x);\n      } else {\n        link.classList.remove(x);\n      }\n    });\n  }\n\n  function setClass() {\n    if (options.addClassOn) {\n      _setClass(options.addClassOn, status);\n    }\n    if (options.addClassOff) {\n      _setClass(options.addClassOff, !status);\n    }\n  }\n\n  if (options.addClass) {\n    _setClass(options.addClass, true);\n  }\n  setClass();\n\n  const changeStatus = (status_?: boolean) => {\n    if (status_ !== undefined) {\n      status = status_;\n    }\n    setHtml();\n    setTitle();\n    setClass();\n  };\n\n  const onClick = (status_?: boolean) => {\n    status = status_ !== undefined ? status_ : !status;\n    if (options.onClick) {\n      const afterClick = options.onClick(status);\n      Promise.resolve(afterClick)\n        .then(() => changeStatus())\n        .catch(() => (status = !status));\n    } else {\n      changeStatus();\n    }\n  };\n\n  const buttonControl = createButtonControl({\n    html: link,\n    onClick,\n  }) as C & ToggleControl;\n  buttonControl.onClick = onClick;\n  buttonControl.changeStatus = changeStatus;\n  return buttonControl;\n}\n","import type {\n  ExpressionCbFunc,\n  ExpressionFunc,\n  MapToCallback,\n  SimpleType,\n} from '../interfaces';\n\nexport default function evaluateArgs<\n  T extends SimpleType[] = SimpleType[],\n  R = T[0],\n>(cb: ExpressionFunc<T, R>): ExpressionCbFunc<T, R> {\n  return (args: MapToCallback<T>, data) => {\n    const unwrap = args.map((a) => a()) as T;\n    return cb(unwrap, data);\n  };\n}\n","import e from '../utils/evaluateArgs';\n\nimport type { DecisionExpressionName, ExpressionCbFunc } from '../interfaces';\n\nfunction not([expr]: [boolean]): boolean {\n  return !expr;\n}\n\nfunction notEqual([a, b]: [value1: any, value2: any]): boolean {\n  return a !== b;\n}\n\nfunction lessThan([left, right]: [value1: any, value2: any]): boolean {\n  return left < right;\n}\n\nfunction lessThanOrEqual([left, right]: [value1: any, value2: any]): boolean {\n  return left <= right;\n}\n\nfunction equal([left, right]: [value1: any, value2: any]): boolean {\n  return left === right;\n}\n\nfunction greaterThan([left, right]: [value1: any, value2: any]): boolean {\n  return left > right;\n}\n\nfunction greaterThanOrEqual([left, right]: [\n  value1: any,\n  value2: any,\n]): boolean {\n  return left >= right;\n}\n\nconst coalesce: ExpressionCbFunc<any[], any> = (args) => {\n  for (let i = 0; i < args.length; i++) {\n    const arg = args[i]();\n    if (arg !== null && arg !== undefined) {\n      return arg;\n    }\n  }\n  return null;\n};\n\nconst all: ExpressionCbFunc<any[], boolean> = (args) => {\n  for (let i = 0; i < args.length; i++) {\n    const arg = args[i]();\n    if (!arg) {\n      return false;\n    }\n  }\n  return true;\n};\n\nconst any: ExpressionCbFunc<any[], boolean> = (args) => {\n  for (let i = 0; i < args.length; i++) {\n    const arg = args[i]();\n    if (arg) {\n      return true;\n    }\n  }\n  return false;\n};\n\nconst match: ExpressionCbFunc<any[]> = (args) => {\n  const [lookupFn, ...cases] = args;\n  const lookup = lookupFn();\n  // remove last odd item from cases array\n  const defValue = cases.splice(-1, cases.length % 2)[0];\n  for (let fry = 0; fry < cases.length - 1; fry += 2) {\n    const key = cases[fry]();\n    if (key === lookup) {\n      return cases[fry + 1]();\n    }\n  }\n  return defValue();\n};\n\ntype OutputType = any;\nconst caseFunc: ExpressionCbFunc<\n  [boolean, OutputType, ...Array<boolean | OutputType>],\n  OutputType\n> = (args) => {\n  if (args.length < 2) {\n    throw new Error(\n      'The \"case\" function requires at least a condition and a corresponding output.',\n    );\n  }\n\n  if (args.length % 2 === 0) {\n    throw new Error(\n      'Missing a fallback value or unmatched condition-output pair.',\n    );\n  }\n  for (let i = 0; i < args.length - 1; i += 2) {\n    const condition = args[i]() as boolean;\n    const value = args[i + 1]() as OutputType;\n    if (condition) {\n      return value;\n    }\n  }\n  const fallback = args[args.length - 1];\n  return fallback();\n};\n\nexport const decisionExpressions: Record<\n  DecisionExpressionName,\n  ExpressionCbFunc\n> = {\n  '!': e(not),\n  '!=': e(notEqual),\n  '<': e(lessThan),\n  '<=': e(lessThanOrEqual),\n  '==': e(equal),\n  '>': e(greaterThan),\n  '>=': e(greaterThanOrEqual),\n  coalesce,\n  all,\n  any,\n  case: caseFunc,\n  match,\n};\n","export const COLORS = {\n  aliceblue: '#f0f8ff',\n  antiquewhite: '#faebd7',\n  aqua: '#00ffff',\n  aquamarine: '#7fffd4',\n  azure: '#f0ffff',\n  beige: '#f5f5dc',\n  bisque: '#ffe4c4',\n  black: '#000000',\n  blanchedalmond: '#ffebcd',\n  blue: '#0000ff',\n  blueviolet: '#8a2be2',\n  brown: '#a52a2a',\n  burlywood: '#deb887',\n  cadetblue: '#5f9ea0',\n  chartreuse: '#7fff00',\n  chocolate: '#d2691e',\n  coral: '#ff7f50',\n  cornflowerblue: '#6495ed',\n  cornsilk: '#fff8dc',\n  crimson: '#dc143c',\n  cyan: '#00ffff',\n  darkblue: '#00008b',\n  darkcyan: '#008b8b',\n  darkgoldenrod: '#b8860b',\n  darkgray: '#a9a9a9',\n  darkgreen: '#006400',\n  darkkhaki: '#bdb76b',\n  darkmagenta: '#8b008b',\n  darkolivegreen: '#556b2f',\n  darkorange: '#ff8c00',\n  darkorchid: '#9932cc',\n  darkred: '#8b0000',\n  darksalmon: '#e9967a',\n  darkseagreen: '#8fbc8f',\n  darkslateblue: '#483d8b',\n  darkslategray: '#2f4f4f',\n  darkturquoise: '#00ced1',\n  darkviolet: '#9400d3',\n  deeppink: '#ff1493',\n  deepskyblue: '#00bfff',\n  dimgray: '#696969',\n  dodgerblue: '#1e90ff',\n  firebrick: '#b22222',\n  floralwhite: '#fffaf0',\n  forestgreen: '#228b22',\n  fuchsia: '#ff00ff',\n  gainsboro: '#dcdcdc',\n  ghostwhite: '#f8f8ff',\n  gold: '#ffd700',\n  goldenrod: '#daa520',\n  gray: '#808080',\n  green: '#008000',\n  greenyellow: '#adff2f',\n  honeydew: '#f0fff0',\n  hotpink: '#ff69b4',\n  'indianred ': '#cd5c5c',\n  indigo: '#4b0082',\n  ivory: '#fffff0',\n  khaki: '#f0e68c',\n  lavender: '#e6e6fa',\n  lavenderblush: '#fff0f5',\n  lawngreen: '#7cfc00',\n  lemonchiffon: '#fffacd',\n  lightblue: '#add8e6',\n  lightcoral: '#f08080',\n  lightcyan: '#e0ffff',\n  lightgoldenrodyellow: '#fafad2',\n  lightgrey: '#d3d3d3',\n  lightgreen: '#90ee90',\n  lightpink: '#ffb6c1',\n  lightsalmon: '#ffa07a',\n  lightseagreen: '#20b2aa',\n  lightskyblue: '#87cefa',\n  lightslategray: '#778899',\n  lightsteelblue: '#b0c4de',\n  lightyellow: '#ffffe0',\n  lime: '#00ff00',\n  limegreen: '#32cd32',\n  linen: '#faf0e6',\n  magenta: '#ff00ff',\n  maroon: '#800000',\n  mediumaquamarine: '#66cdaa',\n  mediumblue: '#0000cd',\n  mediumorchid: '#ba55d3',\n  mediumpurple: '#9370d8',\n  mediumseagreen: '#3cb371',\n  mediumslateblue: '#7b68ee',\n  mediumspringgreen: '#00fa9a',\n  mediumturquoise: '#48d1cc',\n  mediumvioletred: '#c71585',\n  midnightblue: '#191970',\n  mintcream: '#f5fffa',\n  mistyrose: '#ffe4e1',\n  moccasin: '#ffe4b5',\n  navajowhite: '#ffdead',\n  navy: '#000080',\n  oldlace: '#fdf5e6',\n  olive: '#808000',\n  olivedrab: '#6b8e23',\n  orange: '#ffa500',\n  orangered: '#ff4500',\n  orchid: '#da70d6',\n  palegoldenrod: '#eee8aa',\n  palegreen: '#98fb98',\n  paleturquoise: '#afeeee',\n  palevioletred: '#d87093',\n  papayawhip: '#ffefd5',\n  peachpuff: '#ffdab9',\n  peru: '#cd853f',\n  pink: '#ffc0cb',\n  plum: '#dda0dd',\n  powderblue: '#b0e0e6',\n  purple: '#800080',\n  rebeccapurple: '#663399',\n  red: '#ff0000',\n  rosybrown: '#bc8f8f',\n  royalblue: '#4169e1',\n  saddlebrown: '#8b4513',\n  salmon: '#fa8072',\n  sandybrown: '#f4a460',\n  seagreen: '#2e8b57',\n  seashell: '#fff5ee',\n  sienna: '#a0522d',\n  silver: '#c0c0c0',\n  skyblue: '#87ceeb',\n  slateblue: '#6a5acd',\n  slategray: '#708090',\n  snow: '#fffafa',\n  springgreen: '#00ff7f',\n  steelblue: '#4682b4',\n  tan: '#d2b48c',\n  teal: '#008080',\n  thistle: '#d8bfd8',\n  tomato: '#ff6347',\n  turquoise: '#40e0d0',\n  violet: '#ee82ee',\n  wheat: '#f5deb3',\n  white: '#ffffff',\n  whitesmoke: '#f5f5f5',\n  yellow: '#ffff00',\n  yellowgreen: '#9acd32',\n};\n","import { COLORS } from '../constants/colors';\n\nexport type ColorArray = [r: number, g: number, b: number, a?: number];\n\nexport type ColorObject = {\n  r: number;\n  g: number;\n  b: number;\n  a?: number;\n};\nexport type Color = string | ColorObject;\n\nfunction isHex(hex: any): hex is string {\n  return typeof hex === 'string' && /^#([A-Fa-f0-9]{3}){1,2}$/.test(hex);\n}\n\nfunction isRgb(hex: any): hex is string {\n  const r =\n    // eslint-disable-next-line max-len\n    /^rgb(a?)\\(\\s*([0-9]+)\\s*,\\s*([0-9]+)\\s*,\\s*([0-9]+)(?:\\s*,\\s*([01](?:\\.\\d+)?))?\\s*\\)$/;\n  return typeof hex === 'string' && r.test(hex);\n}\n\nfunction isColorObj(obj: any): obj is ColorObject {\n  if (typeof obj === 'object' && obj !== null) {\n    const hasRgb = 'r' in obj && 'g' in obj && 'b' in obj;\n    const hasValidAlpha =\n      !('a' in obj) || (typeof obj.a === 'number' && obj.a >= 0 && obj.a <= 1);\n    return hasRgb && hasValidAlpha;\n  }\n  return false;\n}\n\nfunction isColorName(name: any): name is keyof typeof COLORS {\n  if (typeof name === 'string' && name in COLORS) {\n    return true;\n  }\n  return false;\n}\n\nexport function isColor(value: any): value is Color {\n  return [isColorName, isHex, isRgb, isColorObj].some((c) => c(value));\n}\n\nexport function toColor(value: Color): ColorArray {\n  if (isHex(value)) {\n    return hexToColor(value);\n  } else if (isColorName(value)) {\n    return colorNameToColor(value);\n  } else if (isRgb(value)) {\n    return rgbToColor(value);\n  } else if (isColorObj(value)) {\n    return colorObjectToColor(value);\n  }\n  throw new Error(`The '${value}' cannot be converted to color`);\n}\n\nfunction colorNameToColor(name: keyof typeof COLORS) {\n  return hexToColor(COLORS[name]);\n}\n\nfunction hexToColor(hex: string): ColorArray {\n  const shortRGB = /^#([0-9a-fA-F])([0-9a-fA-F])([0-9a-fA-F])$/;\n  const shortRGBA = /^#([0-9a-fA-F])([0-9a-fA-F])([0-9a-fA-F])([0-9a-fA-F])$/;\n  const longRGB = /^#([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/;\n  const longRGBA =\n    /^#([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/;\n\n  let result;\n\n  if ((result = shortRGB.exec(hex))) {\n    return [\n      parseInt(result[1] + result[1], 16),\n      parseInt(result[2] + result[2], 16),\n      parseInt(result[3] + result[3], 16),\n    ];\n  } else if ((result = shortRGBA.exec(hex))) {\n    return [\n      parseInt(result[1] + result[1], 16),\n      parseInt(result[2] + result[2], 16),\n      parseInt(result[3] + result[3], 16),\n      parseInt(result[4] + result[4], 16) / 255,\n    ];\n  } else if ((result = longRGB.exec(hex))) {\n    return [\n      parseInt(result[1], 16),\n      parseInt(result[2], 16),\n      parseInt(result[3], 16),\n    ];\n  } else if ((result = longRGBA.exec(hex))) {\n    return [\n      parseInt(result[1], 16),\n      parseInt(result[2], 16),\n      parseInt(result[3], 16),\n      parseInt(result[4], 16) / 255,\n    ];\n  }\n  throw new Error(`The '${hex}' Is not valid hex`);\n}\n\nfunction rgbToColor(rgb: string): ColorArray {\n  const rgbPattern = /^rgb\\((\\d+),\\s*(\\d+),\\s*(\\d+)\\)$/;\n  const rgbaPattern = /^rgba\\((\\d+),\\s*(\\d+),\\s*(\\d+),\\s*([\\d.]+)\\)$/;\n\n  let matches;\n\n  if ((matches = rgb.match(rgbPattern))) {\n    return [\n      parseInt(matches[1], 10),\n      parseInt(matches[2], 10),\n      parseInt(matches[3], 10),\n    ];\n  } else if ((matches = rgb.match(rgbaPattern))) {\n    return [\n      parseInt(matches[1], 10),\n      parseInt(matches[2], 10),\n      parseInt(matches[3], 10),\n      parseFloat(matches[4]),\n    ];\n  }\n\n  throw new Error(`The '${rgb}' Is not valid rgb`);\n}\n\nexport function colorObjectToColor({ r, g, b, a }: ColorObject): ColorArray {\n  return [r, g, b, ...(a !== undefined ? [a] : [])] as ColorArray;\n}\n\nexport function colorToRGB(array: ColorArray): string {\n  return `rgb(${array.join(',')})`;\n}\n","import { type ColorArray, colorToRGB, toColor } from '../../utils/color';\n\nimport type { ExpressionCbFunc } from '../../interfaces';\n\ntype LinearInterpolation = ['linear'];\ntype ExponentialInterpolation = [name: 'exponential', base: number];\ntype CubicBezierInterpolation = [\n  name: 'cubic-bezier',\n  x1: number,\n  y1: number,\n  x2: number,\n  y2: number,\n];\ntype Interpolation =\n  | LinearInterpolation\n  | ExponentialInterpolation\n  | CubicBezierInterpolation;\n\ntype OutputType = any;\n\ntype InterpolateArgs = [\n  interpolation: Interpolation,\n  input: number,\n  ...stops: (number | OutputType)[],\n];\n\nfunction linearInterpolation(\n  input: number,\n  input1: number,\n  output1: OutputType,\n  input2: number,\n  output2: OutputType,\n): OutputType {\n  if (typeof output1 === 'number' && typeof output2 === 'number') {\n    return (\n      output1 + ((input - input1) / (input2 - input1)) * (output2 - output1)\n    );\n  }\n\n  try {\n    const outputColor1 = toColor(output1);\n    const outputColor2 = toColor(output2);\n    return colorToRGB(\n      outputColor1.map((val, index) => {\n        return Math.ceil(\n          linearInterpolation(input, input1, val, input2, outputColor2[index]),\n        );\n      }) as ColorArray,\n    );\n  } catch (er) {\n    console.log(er);\n  }\n\n  throw new Error('Unsupported output type for linear interpolation.');\n}\n\nexport const interpolate: ExpressionCbFunc<InterpolateArgs, OutputType> = ([\n  interpolationFn,\n  inputFn,\n  ...stops\n]) => {\n  if (stops.length < 2) {\n    throw new Error('At least two stops are required');\n  }\n  if (stops.length < 2 || stops.length % 2 !== 0) {\n    throw new Error('Invalid stops provided.');\n  }\n  const input = inputFn();\n\n  if (typeof input !== 'number') {\n    throw new Error('Input must be a number.');\n  }\n  const interpolation = interpolationFn();\n  for (let i = 0; i < stops.length - 2; i += 2) {\n    const stopInput1 = stops[i]() as number;\n    const stopOutput1 = stops[i + 1]() as OutputType;\n    const stopInput2 = stops[i + 2]() as number;\n    const stopOutput2 = stops[i + 3]() as OutputType;\n\n    if (input >= stopInput1 && input <= stopInput2) {\n      if (interpolation[0] === 'linear') {\n        return linearInterpolation(\n          input,\n          stopInput1,\n          stopOutput1,\n          stopInput2,\n          stopOutput2,\n        );\n      }\n      // else if (interpolation[0] === 'exponential') {\n      //   const base = interpolation[1];\n      //   return exponentialInterpolation(\n      //     input,\n      //     base,\n      //     stopInput1,\n      //     stopOutput1,\n      //     stopInput2,\n      //     stopOutput2,\n      //   );\n      // }\n    }\n  }\n\n  throw new Error('Invalid interpolation type.');\n};\n","import type { ExpressionCbFunc } from '../../interfaces';\n\ntype OutputType = number | string | boolean | null;\n\nexport const step: ExpressionCbFunc<(number | OutputType)[], OutputType> = (\n  args,\n) => {\n  const [inputFn, defaultValue, ...stops] = args;\n  const input = inputFn();\n\n  if (typeof input !== 'number') {\n    return defaultValue() as OutputType;\n  }\n\n  for (let i = 0; i < stops.length - 2; i += 2) {\n    const stopInput = stops[i]() as number;\n    const stopOutput = stops[i + 1]() as OutputType;\n    const nextStopInput = stops[i + 2]() as number;\n\n    if (input >= stopInput && input < nextStopInput) {\n      return stopOutput;\n    }\n  }\n\n  if (input >= (stops[stops.length - 2]() as number)) {\n    return stops[stops.length - 1]();\n  }\n\n  return defaultValue();\n};\n","import { interpolate } from './interpolate';\nimport { step } from './step';\n\nimport type {\n  ExpressionFunc,\n  InterpolationExpressionName,\n} from '../../interfaces';\n\nexport const interpolationExpressions: Record<\n  InterpolationExpressionName,\n  ExpressionFunc\n> = {\n  step,\n  interpolate,\n};\n","import e from '../utils/evaluateArgs';\n\nimport type {\n  Data,\n  ExpressionCbFunc,\n  LookupExpressionName,\n  SimpleType,\n} from '../interfaces';\n\ntype GetArg = [key: string] | [key: string, obj: Record<string, any>];\n\nfunction get([key, objExp]: GetArg, data: Data): SimpleType | null {\n  const target = objExp || data;\n  if (target && typeof target === 'object' && key in target) {\n    return target[key];\n  }\n  return null;\n}\n\nfunction has([key, objExp]: GetArg, data: Data): boolean {\n  const target = objExp || data;\n  return !!(target && typeof target === 'object' && key in target);\n}\n\nfunction at([index, array]: [index: number, array: any[]]): SimpleType {\n  return array[index];\n}\n\ntype InArgs = [keyword: string | boolean | number, input: string | any[]];\nfunction inFunc([keyword, input]: InArgs): boolean {\n  if (typeof input === 'string') {\n    return input.includes(String(keyword));\n  } else if (Array.isArray(input)) {\n    return input.includes(keyword);\n  }\n  throw new Error(\n    `Invalid input type for 'in'. Expected string or array, got ${typeof input}.`,\n  );\n}\n\nconst length = ([item]: [string | any[]]) => {\n  if (typeof item === 'string' || Array.isArray(item)) {\n    return item.length;\n  }\n  return undefined;\n};\n\ntype IndexOfArgs =\n  | [keyword: string | boolean | number, input: string | any[]]\n  | [keyword: string | boolean | number, input: string | any[], index: number];\nfunction indexOf([keyword, input, startIndex]: IndexOfArgs): number {\n  if (typeof input === 'string') {\n    return input.indexOf(String(keyword), startIndex);\n  } else if (Array.isArray(input)) {\n    return input.indexOf(keyword, startIndex);\n  }\n\n  throw new Error(\n    `Invalid input type for 'index-of'. Expected string or array, got ${typeof input}.`,\n  );\n}\n\ntype SliceArgs =\n  | [input: string | any[], startIndex: number]\n  | [input: string | any[], startIndex: number, endIndex: number];\n\nfunction slice(args: SliceArgs): string | any[] {\n  const [input, startIndex, endIndex] = args;\n\n  if (typeof input === 'string') {\n    return input.slice(startIndex, endIndex);\n  } else if (Array.isArray(input)) {\n    return input.slice(startIndex, endIndex);\n  }\n\n  throw new Error(\n    `Invalid input type for 'slice'. Expected string or array, got ${typeof input}.`,\n  );\n}\n\nexport const lookupExpressions: Record<LookupExpressionName, ExpressionCbFunc> =\n  {\n    get: e(get),\n    length: e(length),\n    at: e(at),\n    has: e(has),\n    in: e(inFunc),\n    'index-of': e(indexOf),\n    slice: e(slice),\n  };\n","import e from '../utils/evaluateArgs';\n\nimport type { ExpressionCbFunc, MathExpressionName } from '../interfaces';\n\nexport const mathExpressions: Record<\n  MathExpressionName,\n  ExpressionCbFunc<number[], number>\n> = {\n  '+': e((args) => args.reduce((a, b) => a + b, 0)),\n  '-': e((args) => args.reduce((a, b) => a - b)),\n  '*': e((args) => args.reduce((a, b) => a * b, 1)),\n  '/': e((args) => args.reduce((a, b) => a / b)),\n  '%': e((args) => args[0] % args[1]),\n  '^': e((args) => Math.pow(args[0], args[1])),\n  abs: e((args) => Math.abs(args[0])),\n  acos: e((args) => Math.acos(args[0])),\n  asin: e((args) => Math.asin(args[0])),\n  atan: e((args) => Math.atan(args[0])),\n  ceil: e((args) => Math.ceil(args[0])),\n  cos: e((args) => Math.cos(args[0])),\n  e: () => Math.E,\n  floor: e((args) => Math.floor(args[0])),\n  ln: e((args) => Math.log(args[0])),\n  ln2: () => Math.LN2,\n  log10: e((args) => Math.log10(args[0])),\n  log2: e((args) => Math.log2(args[0])),\n  max: e((args) => Math.max(...args)),\n  min: e((args) => Math.min(...args)),\n  pi: () => Math.PI,\n  round: e((args) => Math.round(args[0])),\n  sin: e((args) => Math.sin(args[0])),\n  sqrt: e((args) => Math.sqrt(args[0])),\n  tan: e((args) => Math.tan(args[0])),\n};\n","import e from '../utils/evaluateArgs';\n\nimport type { ExpressionCbFunc, StringExpressionName } from '../interfaces';\n\nexport const stringExpressions: Record<\n  StringExpressionName,\n  ExpressionCbFunc<string[], string>\n> = {\n  concat: e((args) => args.reduce((a, b) => String(a) + String(b), '')),\n  downcase: e((args) => String(args[0]).toLowerCase()),\n  upcase: e((args) => String(args[0]).toUpperCase()),\n};\n","export const tryConvert = (\n  converter: (arg: any, data: any) => any,\n  arg: any,\n  data: any,\n): any => {\n  try {\n    const result = converter(arg, data);\n    if (result !== undefined) {\n      return result;\n    }\n  } catch {\n    // ignore errors\n  }\n  return undefined;\n};\n","import { tryConvert } from './tryConvert';\n\nimport type { ExpressionFunc, SimpleType } from '../interfaces';\n\nexport default function fallback<\n  T extends SimpleType[] = SimpleType[],\n  R = T[0],\n>(cb: ExpressionFunc<T, R | undefined>): ExpressionFunc<T[], R> {\n  return (args: T[], data) => {\n    for (const arg of args) {\n      const result = tryConvert(cb, arg, data);\n      if (result !== undefined) {\n        return result;\n      }\n    }\n    throw new Error(`Received a mismatched type`);\n  };\n}\n","import e from '../utils/evaluateArgs';\nimport f from '../utils/fallback';\n\nimport type { ExpressionCbFunc, TypeExpressionName } from '../interfaces';\n\ntype ArrayType = 'string' | 'number' | 'boolean';\n\ntype ArrayArgs =\n  | [value: any[]]\n  | [type: ArrayType, value: any[]]\n  | [type: ArrayType, n: number, value: any[]];\n\nconst array = (args: ArrayArgs): any[] => {\n  const [firstArg, secondArg, thirdArg] = args;\n  let requiredType: ArrayType | undefined = undefined;\n  let requiredLength: number | undefined = undefined;\n  let value: any[] | undefined;\n\n  if (\n    typeof firstArg === 'string' &&\n    ['string', 'number', 'boolean'].includes(firstArg)\n  ) {\n    requiredType = firstArg;\n\n    if (typeof secondArg === 'number') {\n      requiredLength = secondArg;\n      value = thirdArg;\n    } else {\n      value = secondArg;\n    }\n  } else if (Array.isArray(firstArg)) {\n    value = firstArg;\n  }\n  if (!Array.isArray(value)) {\n    throw new Error('Expected an array');\n  }\n  if (requiredType && !value.every((item) => typeof item === requiredType)) {\n    throw new Error(\n      `Expected all items in array to be of type ${requiredType}`,\n    );\n  }\n\n  if (requiredLength && value.length !== requiredLength) {\n    throw new Error(`Expected array of length ${requiredLength}`);\n  }\n  return value;\n};\n\nfunction typeOfValue(value: any): string {\n  if (value === null) return 'null';\n  switch (typeof value) {\n    case 'string':\n      return 'string';\n    case 'number':\n      return 'number';\n    case 'boolean':\n      return 'boolean';\n    case 'object':\n      if (Array.isArray(value)) {\n        let arrayType = 'value';\n        if (value.every((item) => typeof item === 'number')) {\n          arrayType = 'number';\n        } else if (value.every((item) => typeof item === 'string')) {\n          arrayType = 'string';\n        } else if (value.every((item) => typeof item === 'boolean')) {\n          arrayType = 'boolean';\n        }\n        return `array<${arrayType}, ${value.length}>`;\n      } else {\n        return 'object';\n      }\n    default:\n      return 'undefined';\n  }\n}\n\nexport const typeExpressions: Record<TypeExpressionName, ExpressionCbFunc> = {\n  array: e(array),\n  boolean: e(\n    f<boolean[]>((arg) => (typeof arg === 'boolean' ? arg : undefined)),\n  ),\n  literal: e(([arg]) => arg),\n  number: e(f<number[]>((arg) => (typeof arg === 'number' ? arg : undefined))),\n  object: e(\n    f<Record<string, any>[]>((arg) =>\n      arg !== null && typeof arg === 'object' && !Array.isArray(arg)\n        ? arg\n        : undefined,\n    ),\n  ),\n\n  string: e(f((arg) => (typeof arg === 'string' ? arg : undefined))),\n  'to-boolean': e(f(Boolean)),\n  'to-number': e(f(Number)),\n  'to-string': e(f(String)),\n  typeof: e(([arg]) => typeOfValue(arg)),\n};\n","import { decisionExpressions } from './expressions/decisionExpressions';\nimport { interpolationExpressions } from './expressions/interpolationExpressions';\nimport { lookupExpressions } from './expressions/lookupExpressions';\nimport { mathExpressions } from './expressions/mathExpressions';\nimport { stringExpressions } from './expressions/stringExpressions';\nimport { typeExpressions } from './expressions/typeExpressions';\n\nimport type {\n  Data,\n  Expression,\n  ExpressionFunc,\n  ExpressionName,\n  SimpleType,\n} from './interfaces';\n\nexport function isExpression(value: any): value is Expression {\n  if (Array.isArray(value)) {\n    const [lookup, ...cases] = value;\n    const l = lookup as ExpressionName;\n    return (\n      typeof l === 'string' &&\n      l !== 'literal' &&\n      l in expressions &&\n      cases.length > 0\n    );\n  }\n  return false;\n}\n\nconst expressions: { [key in ExpressionName]: ExpressionFunc } = {\n  ...mathExpressions,\n  ...typeExpressions,\n  ...stringExpressions,\n  ...lookupExpressions,\n  ...decisionExpressions,\n  ...interpolationExpressions,\n};\n\nexport function evaluate<T extends SimpleType[] = SimpleType[], R = T[0]>(\n  expression: Expression,\n  data: Data = {},\n): R {\n  const [name, ...args] = expression;\n  const expressionFun = expressions[name];\n  if (expressionFun) {\n    return expressionFun(\n      args.map((arg) => () => (isExpression(arg) ? evaluate(arg, data) : arg)),\n      data,\n    );\n  }\n  throw new Error(`Expression \"${name}\" is not supported.`);\n}\n","import { evaluate, type Expression, isExpression } from '@nextgis/expression';\n\nimport type { Feature } from 'geojson';\n\nimport type { GetPaintCallback, VectorAdapterLayerPaint } from './interfaces';\n\ntype PropertyExpressionCb = (feature: Feature) => ReturnType<typeof evaluate>;\n\nfunction createPropertyExpressionCb(\n  expression: Expression,\n): PropertyExpressionCb {\n  return (feature: Feature) => {\n    const properties = feature.properties;\n    if (properties) {\n      return evaluate(expression, properties);\n    }\n    return false;\n  };\n}\n\nconst excludeExpressionList = ['iconSize', 'iconAnchor'];\n\nexport function createExpressionCallback(\n  paint: Record<string, any>,\n): GetPaintCallback | undefined {\n  let withExpression = false;\n  const expressions: {\n    [key: string]: PropertyExpressionCb;\n  } = {};\n  for (const p in paint) {\n    if (excludeExpressionList.indexOf(p) === -1) {\n      const p_ = p as keyof VectorAdapterLayerPaint;\n      const val = paint[p_];\n      if (isExpression(val)) {\n        withExpression = true;\n        expressions[p_] = createPropertyExpressionCb(val);\n      }\n    }\n  }\n  if (withExpression) {\n    return (feature: Feature) => {\n      const fromCb: any = {};\n      for (const p in expressions) {\n        fromCb[p] = expressions[p](feature);\n      }\n      return { ...paint, ...fromCb };\n    };\n  }\n  return;\n}\n","import type { Feature } from 'geojson';\n\nimport type {\n  Operation,\n  Properties,\n  PropertiesFilter,\n  PropertyFilter,\n} from './interfaces';\n\nfunction reEscape(s: string): string {\n  return s.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n}\n\nfunction like(b: string, a: string, iLike?: boolean): boolean {\n  a = String(a);\n  b = String(b);\n  if (a === b) return true;\n  if (iLike && a.toUpperCase() === b.toUpperCase()) return true;\n  const re = `^${reEscape(a)}$`.replace(/%/g, '.*').replace('_', '.');\n  return new RegExp(re, iLike ? 'i' : '').exec(b) !== null;\n}\n\nexport const operationsAliases: {\n  [key in Operation]: (a: any, b: any) => boolean;\n} = {\n  // greater(>)\n  gt: (a: any, b: any) => a > b,\n  // lower(<)\n  lt: (a: any, b: any) => a < b,\n  // greater or equal(>=)\n  ge: (a: any, b: any) => a >= b,\n  // lower or equal(<=)\n  le: (a: any, b: any) => a <= b,\n  // equal(=)\n  eq: (a: any, b: any) => a === b,\n  //  not equal(!=)\n  ne: (a: any, b: any) => a !== b,\n\n  in: (a: any, b: any[]) => b.indexOf(a) !== -1,\n  notin: (a: any, b: any[]) => b.indexOf(a) === -1,\n  // LIKE SQL statement(for strings compare)\n  like: (a: string, b: string) => {\n    return like(a, b);\n  },\n  // ILIKE SQL statement(for strings compare)\n  ilike: (a: string, b: string) => {\n    return like(a, b, true);\n  },\n};\n\nexport function isPropertyFilter(\n  filter: PropertyFilter | PropertiesFilter | string,\n): filter is PropertyFilter {\n  const pf = filter as PropertyFilter;\n  if (\n    pf.length === 3 &&\n    typeof pf[0] === 'string' &&\n    typeof pf[1] === 'string'\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/** @deprecated use {@link isPropertyFilter} instead */\nexport function checkIfPropertyFilter(\n  filter: PropertyFilter | PropertiesFilter | string,\n): filter is PropertyFilter {\n  return isPropertyFilter(filter);\n}\n\nexport function featureFilter(\n  feature: Feature,\n  filters: PropertiesFilter,\n): boolean {\n  const properties: Properties = { ...feature.properties };\n  if (properties) {\n    // workaround to filter by feature id\n    properties.$id = feature.id;\n    return propertiesFilter(properties, filters);\n  }\n  return false;\n}\n\nexport function propertiesFilter<T extends Properties = Properties>(\n  properties: T,\n  filters: PropertiesFilter<T>,\n): boolean {\n  const logic = typeof filters[0] === 'string' ? filters[0] : 'all';\n  const filterFunction = (p: PropertyFilter | PropertiesFilter) => {\n    if (isPropertyFilter(p)) {\n      const [field, operation, value] = p;\n      const operationExec = operationsAliases[operation];\n      if (operationExec) {\n        if (operation === 'like' || operation === 'ilike') {\n          if (typeof field === 'string') {\n            let prop = '';\n            const value_ = field.replace(/^%?(\\w+)%?$/, (match, cleanField) => {\n              prop = properties[cleanField];\n              return field.replace(cleanField, value);\n            });\n            return operationExec(prop, value_);\n          }\n        }\n        return operationExec(properties[field], value);\n      }\n      return false;\n    } else {\n      return propertiesFilter(properties, p);\n    }\n  };\n  const filters_ = filters.filter((x) => Array.isArray(x)) as (\n    | PropertyFilter\n    | PropertiesFilter\n  )[];\n  return logic === 'any'\n    ? filters_.some(filterFunction)\n    : filters_.every(filterFunction);\n}\n","import type {\n  GeometryPaint,\n  GetPaintCallback,\n  IconPaint,\n  Paint,\n  PropertiesPaint,\n  VectorAdapterLayerPaint,\n} from './interfaces';\n\nexport function isPropertiesPaint(paint: Paint): paint is PropertiesPaint {\n  if (Array.isArray(paint)) {\n    return true;\n  }\n  return false;\n}\n\nexport function isPaint(paint: Paint): paint is VectorAdapterLayerPaint {\n  if (Object.prototype.toString.call(paint) === '[object Object]') {\n    return true;\n  }\n  return false;\n}\n\nexport function isBasePaint(paint: Paint): paint is GeometryPaint {\n  if (isPaint(paint)) {\n    if (paint.type === 'get-paint' || paint.type === 'icon') {\n      return false;\n    }\n    return true;\n  }\n  return false;\n}\n\nexport function isPaintCallback(paint: Paint): paint is GetPaintCallback {\n  if (typeof paint === 'function') {\n    return true;\n  }\n  return false;\n}\n\nexport function isIcon(paint: IconPaint): paint is IconPaint {\n  return paint.type === 'icon' || 'html' in paint;\n}\n","import { featureFilter } from '@nextgis/properties-filter';\n\nimport { createExpressionCallback } from './fromPaintExpression';\nimport { isPaintCallback, isPropertiesPaint } from './typeHelpers';\n\nimport type { Feature } from 'geojson';\n\nimport type {\n  GeometryPaint,\n  GetCustomPaintOptions,\n  GetPaintCallback,\n  GetPaintFunction,\n  Paint,\n  PropertiesPaint,\n  PropertyPaint,\n  VectorAdapterLayerPaint,\n} from './interfaces';\n\nfunction updatePaintOptionFromCallback(\n  paint: GetCustomPaintOptions,\n  getPaintFunctions?: { [name: string]: GetPaintFunction },\n): VectorAdapterLayerPaint | undefined {\n  if (typeof paint.from === 'function') {\n    return paint.from(paint.options);\n  } else if (typeof paint.from === 'string' && getPaintFunctions) {\n    const from = getPaintFunctions[paint.from];\n    if (from) {\n      return from(paint.options);\n    }\n  }\n}\n\nfunction createPropertiesPaint(\n  propertiesPaint: PropertiesPaint,\n): GetPaintFunction {\n  let mask: VectorAdapterLayerPaint = {};\n  const paintsFilters: PropertyPaint[] = [];\n  for (const p of propertiesPaint) {\n    if (p) {\n      if (Array.isArray(p)) {\n        paintsFilters.push(p);\n      } else {\n        mask = p as VectorAdapterLayerPaint;\n      }\n    }\n  }\n\n  return (feature: Feature) => {\n    const paint = paintsFilters.find((x) => featureFilter(feature, x[0]));\n    if (paint) {\n      return { ...mask, ...paint[1] };\n    }\n    return mask;\n  };\n}\n\nfunction expressionCallback({\n  paint,\n  defaultPaint,\n}: PreparePaintOptions): Paint | VectorAdapterLayerPaint {\n  const expressionCallback = createExpressionCallback(paint);\n  if (expressionCallback) {\n    const expressionPaintCb = (feature: Feature) => {\n      return preparePaint({\n        paint: expressionCallback(feature),\n        defaultPaint,\n      }) as VectorAdapterLayerPaint;\n    };\n    expressionPaintCb.paint = finalizePaint({ paint, defaultPaint });\n    return expressionPaintCb as VectorAdapterLayerPaint;\n  }\n  return finalizePaint({ paint, defaultPaint });\n}\n\nfunction finalizePaint({ paint, defaultPaint }: PreparePaintOptions): Paint {\n  let newPaint: Paint = { ...defaultPaint };\n  newPaint = { ...newPaint, ...paint } as GeometryPaint;\n  newPaint.fill = newPaint.fill ?? true;\n  newPaint.stroke =\n    newPaint.stroke !== undefined\n      ? newPaint.stroke\n      : !newPaint.fill || !!(newPaint.strokeColor || newPaint.strokeOpacity);\n  return newPaint;\n}\n\nexport interface PreparePaintOptions {\n  paint: Paint;\n  defaultPaint?: GeometryPaint;\n  getPaintFunctions?: { [name: string]: GetPaintFunction };\n}\n\nexport function preparePaint({\n  paint,\n  defaultPaint,\n  getPaintFunctions,\n}: PreparePaintOptions): Paint {\n  if (!paint) {\n    throw new Error('paint is empty');\n  }\n  let newPaint: Paint = { ...defaultPaint };\n  if (isPaintCallback(paint)) {\n    const getPaintFunction: GetPaintCallback = (feature: Feature) => {\n      const getPaint = preparePaint({\n        paint: paint(feature),\n        defaultPaint,\n        getPaintFunctions,\n      }) as VectorAdapterLayerPaint;\n      getPaint.type = paint.type;\n      return getPaint;\n    };\n    getPaintFunction.type = paint.type;\n    return getPaintFunction;\n  } else if (isPropertiesPaint(paint)) {\n    return (feature: Feature) => {\n      return preparePaint({\n        paint: createPropertiesPaint(paint)(feature),\n        defaultPaint,\n        getPaintFunctions,\n      }) as VectorAdapterLayerPaint;\n    };\n  } else if (paint.type === 'get-paint') {\n    const getPaint = updatePaintOptionFromCallback(paint, getPaintFunctions);\n    if (getPaint) {\n      newPaint = preparePaint({\n        paint: getPaint,\n        defaultPaint,\n        getPaintFunctions,\n      });\n    }\n  } else if (paint.type === 'icon') {\n    return paint;\n  } else {\n    newPaint = expressionCallback({ paint, defaultPaint });\n  }\n\n  if (isPaintCallback(newPaint)) {\n    return newPaint;\n  }\n\n  if ('color' in newPaint) {\n    if (!newPaint.strokeColor) {\n      newPaint.strokeColor = newPaint.color;\n    }\n    if (!newPaint.fillColor) {\n      newPaint.fillColor = newPaint.color;\n    }\n  }\n  if ('opacity' in newPaint) {\n    if (newPaint.strokeOpacity === undefined) {\n      newPaint.strokeOpacity = newPaint.opacity;\n    }\n    if (newPaint.fillOpacity === undefined) {\n      newPaint.fillOpacity = newPaint.opacity;\n    }\n  }\n\n  return newPaint;\n}\n","export function debugLog(message?: string): boolean {\n  if (__DEV__) {\n    console.trace('DEBUG: ' + message);\n    return true;\n  }\n  return false;\n}\n","export function deepmerge<T>(\n  x: Partial<T>,\n  y: Partial<T>,\n  mergeArray?: boolean,\n): T;\nexport function deepmerge<T1, T2>(\n  target: Partial<T1>,\n  src: Partial<T2>,\n  mergeArray = false,\n): T1 & T2 {\n  let target_ = target as any;\n  const src_ = src as any;\n  const array = Array.isArray(src_);\n  let dst: any = (array && []) || {};\n\n  if (array && Array.isArray(src_)) {\n    if (mergeArray) {\n      target_ = target_ || [];\n      dst = dst.concat(target_);\n      src_.forEach((e: any, i: number) => {\n        if (typeof dst[i] === 'undefined') {\n          dst[i] = e;\n        } else if (typeof e === 'object') {\n          dst[i] = deepmerge(target_[i], e, mergeArray);\n        } else {\n          if (target_.indexOf(e) === -1) {\n            dst.push(e);\n          }\n        }\n      });\n    } else {\n      // Replace array. Do not merge by default\n      dst = src_;\n    }\n  } else {\n    if (target_ && typeof target_ === 'object') {\n      Object.keys(target_).forEach(function (key) {\n        dst[key] = target_[key];\n      });\n    }\n    Object.keys(src_).forEach(function (key) {\n      if (typeof src_[key] !== 'object' || !src_[key]) {\n        dst[key] = src_[key];\n      } else {\n        if (typeof target_[key] === 'object' && typeof src_[key] === 'object') {\n          dst[key] = deepmerge(target_[key], src_[key], mergeArray);\n        } else {\n          dst[key] = src_[key];\n        }\n      }\n    });\n  }\n  return dst;\n}\n","/**\n * from https://github.com/CesiumGS/cesium/blob/master/Source/Core/defined.js\n *\n * @param val - The object.\n * @returns Returns true if the object is defined, returns false otherwise.\n *\n * @example\n * ```javascript\n * if (defined(positions)) {\n *   doSomething();\n * } else {\n *   doSomethingElse();\n * }\n * ```\n */\nexport function defined<T>(val: T): val is Exclude<T, null | undefined> {\n  return val !== undefined && val !== null;\n}\n\n/**\n * from https://github.com/CesiumGS/cesium/blob/master/Source/Core/defined.js\n *\n * @param val - The object.\n * @returns Returns true if the object is defined and not empty string, returns false otherwise.\n *\n * @example\n * ```javascript\n * full('foo') // true\n * full('') // false\n * full(undefined) // false\n * full(0) // true\n * ```\n */\nexport function full<T>(val: T): val is Exclude<T, null | undefined> {\n  return typeof val === 'string' ? !!val : defined(val);\n}\n","import { debugLog } from '../debug/debugLog';\n\nimport type { LatLng } from '../geom/interfaces';\nimport type { LngLatArray } from '../geom/interfaces';\n\ninterface DeprecatedMapClickEvent {\n  lngLat: LngLatArray;\n  latLng?: LatLng;\n}\n\n/**\n * @internal\n */\nexport function deprecatedMapClick<\n  T extends DeprecatedMapClickEvent = DeprecatedMapClickEvent,\n>(ev: T): T {\n  if (!ev.lngLat && ev.latLng) {\n    debugLog('deprecated use of latLng in MapClickEvent, use lngLat instead');\n    const lat = ev.latLng.lat;\n    const lng = ev.latLng.lng;\n    ev.lngLat = [lng, lat];\n  }\n  return ev;\n}\n","import type { LngLatBoundsArray } from './interfaces';\n\nexport function checkExtent(extent: number[]): extent is LngLatBoundsArray {\n  const [minLon, minLat, maxLon, maxLat] = extent;\n\n  // Check if coordinates are in the correct order\n  const isOrderValid = minLon < maxLon && minLat < maxLat;\n\n  if (!isOrderValid) {\n    console.log('Error: The extent coordinates are not in the correct order.');\n    console.log(\n      `Received extent: [${minLon}, ${minLat}, ${maxLon}, ${maxLat}]`,\n    );\n\n    // Create a valid array with corrected order\n    const correctedExtent = [\n      Math.min(minLon, maxLon),\n      Math.min(minLat, maxLat),\n      Math.max(minLon, maxLon),\n      Math.max(maxLat, minLat),\n    ];\n\n    console.log(`Expected order: [${correctedExtent.join(', ')}]`);\n  }\n\n  // Check if the coordinates are within valid ranges\n  const isValidLon = minLon >= -180 && maxLon <= 180;\n  const isValidLat = minLat >= -90 && maxLat <= 90;\n\n  if (!isValidLon || !isValidLat) {\n    console.log(\n      'Warning: The coordinates may not be within valid geographic ranges.',\n    );\n  }\n\n  // Return true only if all checks pass\n  return isOrderValid && isValidLon && isValidLat;\n}\n","import type { Feature, Polygon } from 'geojson';\n\nimport type { LngLatBoundsArray } from './interfaces';\n\nexport function getBoundsPolygon(b: LngLatBoundsArray): Polygon {\n  const polygon: Polygon = {\n    type: 'Polygon',\n    coordinates: [getBoundsCoordinates(b)],\n  };\n  return polygon;\n}\n\nexport function getBoundsCoordinates(b: LngLatBoundsArray): number[][] {\n  const westNorth = [b[0], b[1]];\n  const eastNorth = [b[2], b[1]];\n  const eastSouth = [b[2], b[3]];\n  const westSouth = [b[0], b[3]];\n\n  return [westNorth, eastNorth, eastSouth, westSouth, westNorth];\n}\n\nexport function getBoundsFeature(b: LngLatBoundsArray): Feature<Polygon> {\n  const feature: Feature<Polygon> = {\n    type: 'Feature',\n    properties: {},\n    geometry: getBoundsPolygon(b),\n  };\n  return feature;\n}\n","import type {\n  Feature,\n  FeatureCollection,\n  GeoJsonGeometryTypes,\n  GeoJsonObject,\n  GeometryCollection,\n} from 'geojson';\n\n/**\n * @internal\n */\nexport function findMostFrequentGeomType(\n  arr: GeoJsonGeometryTypes[],\n): GeoJsonGeometryTypes {\n  const counts: { [x: string]: number } = {};\n  for (let fry = 0; fry < arr.length; fry++) {\n    counts[arr[fry]] = 1 + (counts[arr[fry]] || 0);\n  }\n  let maxName;\n  for (const c in counts) {\n    const count = maxName !== undefined ? counts[maxName] : 0;\n    if (counts[c] > (count || 0)) {\n      maxName = c;\n    }\n  }\n  return maxName as GeoJsonGeometryTypes;\n}\n\n/**\n * @internal\n */\nexport function detectGeometryType(\n  geojson: GeoJsonObject,\n): GeoJsonGeometryTypes {\n  let geometry: GeoJsonGeometryTypes;\n  if (geojson.type === 'FeatureCollection') {\n    const featuresTypes = (geojson as FeatureCollection).features.map(\n      (f) => f.geometry.type,\n    );\n    geometry = findMostFrequentGeomType(featuresTypes);\n  } else if (geojson.type === 'GeometryCollection') {\n    const geometryTypes = (geojson as GeometryCollection).geometries.map(\n      (g) => g.type,\n    );\n    geometry = findMostFrequentGeomType(geometryTypes);\n  } else if (geojson.type === 'Feature') {\n    geometry = (geojson as Feature).geometry.type;\n  } else {\n    geometry = geojson.type;\n  }\n  return geometry;\n}\n","import { isPaint } from '@nextgis/paint';\n\nimport { detectGeometryType } from './geometryTypes';\n\nimport type {\n  GeoJsonAdapterOptions,\n  VectorAdapterLayerType,\n} from '../interfaces/LayerAdapter';\n\n/**\n * @internal\n */\nexport const paintTypeAlias: Record<VectorAdapterLayerType, any> = {\n  polygon: 'path',\n  line: 'path',\n  point: 'circle',\n};\n\nexport const typeAlias: { [x: string]: VectorAdapterLayerType } = {\n  Point: 'point',\n  LineString: 'line',\n  MultiPoint: 'point',\n  Polygon: 'polygon',\n  MultiLineString: 'line',\n  MultiPolygon: 'polygon',\n};\n\n/**\n * @internal\n */\nexport function updateGeoJsonAdapterOptions<\n  O extends GeoJsonAdapterOptions = GeoJsonAdapterOptions,\n>(opt: O): O {\n  if (opt.data) {\n    const geomType = typeAlias[detectGeometryType(opt.data)];\n    const p = opt.paint;\n    if (p && isPaint(p)) {\n      // define parameter if not specified\n      p.type = p.type\n        ? p.type\n        : geomType === 'polygon' || geomType === 'line'\n          ? 'path'\n          : 'html' in p || 'className' in p\n            ? 'icon'\n            : paintTypeAlias[geomType];\n    }\n    opt.type = opt.type || geomType;\n  }\n  return opt;\n}\n","export class KeyCodes {\n  'backspace' = 8;\n  'tab' = 9;\n  'enter' = 13;\n  'shift' = 16;\n  'ctrl' = 17;\n  'alt' = 18;\n  'pause/break' = 19;\n  'caps_lock' = 20;\n  'escape' = 27;\n  'page_up' = 33;\n  'page_down' = 34;\n  'end' = 35;\n  'home' = 36;\n  'left_arrow' = 37;\n  'up_arrow' = 38;\n  'right_arrow' = 39;\n  'down_arrow' = 40;\n  'insert' = 45;\n  'delete' = 46;\n  'left_window_key' = 91;\n  'right_window_key' = 92;\n  'select_key' = 93;\n  'numpad_0' = 96;\n  'numpad_1' = 97;\n  'numpad_2' = 98;\n  'numpad_3' = 99;\n  'numpad_4' = 100;\n  'numpad_5' = 101;\n  'numpad_6' = 102;\n  'numpad_7' = 103;\n  'numpad_8' = 104;\n  'numpad_9' = 105;\n  'multiply' = 106;\n  'add' = 107;\n  'subtract' = 109;\n  'decimal_point' = 110;\n  'divide' = 111;\n  'f1' = 112;\n  'f2' = 113;\n  'f3' = 114;\n  'f4' = 115;\n  'f5' = 116;\n  'f6' = 117;\n  'f7' = 118;\n  'f8' = 119;\n  'f9' = 120;\n  'f10' = 121;\n  'f11' = 122;\n  'f12' = 123;\n  'num_lock' = 144;\n  'scroll_lock' = 145;\n  'semi-colon' = 186;\n  'equal_sign' = 187;\n  ',' = 188; // \"comma\";\n  '-' = 189; // \"dash\";\n  '.' = 190; // \"period\";\n  '/' = 191; // \"forward slash\";\n  '`' = 192; // \"grave accent\";\n  '[' = 219; // \"open bracket\";\n  '\\\\' = 220; // \"back slash\";\n  ']' = 221; // \"close braket\";\n  \"'\" = 222; // \"single quote\"\n}\n","import { KeyCodes } from './KeysCodes';\n\n/**\n * @param {string} key - key symbol\n * @param {string} func - action on key press\n * @param {number} [keyCode] - key code for special button like tab\n *\n * @export\n * @interface KeyControl\n */\nexport interface KeyControl {\n  key?: string;\n  keyCode?: number;\n  func: () => void;\n}\n\nexport class Keys {\n  keyCodeAlias = new KeyCodes();\n\n  keys: { [keyCode: number]: boolean } = {};\n\n  private _windowOnFocus: () => void;\n  private _keysPressed: (e: KeyboardEvent) => void;\n  private _keysReleased: (e: KeyboardEvent) => void;\n\n  constructor() {\n    this._windowOnFocus = this.windowOnFocus.bind(this);\n    this._keysPressed = this.keysPressed.bind(this);\n    this._keysReleased = this.keysReleased.bind(this);\n    this.addKeyboardEventsListener();\n  }\n\n  pressed(keyName: keyof KeyCodes): boolean {\n    const code = this.keyCodeAlias[keyName];\n    return !!code && this.keys[code];\n  }\n\n  addKeyboardEventsListener(): void {\n    if (typeof window !== 'undefined') {\n      window.addEventListener('focus', this._windowOnFocus, false);\n      window.addEventListener('keydown', this._keysPressed, false);\n      window.addEventListener('keyup', this._keysReleased, false);\n    }\n  }\n\n  removeKeyboardEventsListener(): void {\n    if (typeof window !== 'undefined') {\n      window.removeEventListener('focus', this._windowOnFocus, false);\n      window.removeEventListener('keydown', this._keysPressed, false);\n      window.removeEventListener('keyup', this._keysReleased, false);\n    }\n  }\n\n  private keysPressed(e: KeyboardEvent) {\n    e.stopPropagation();\n    if (!this.keys[e.keyCode]) {\n      this.keys[e.keyCode] = true;\n    }\n  }\n\n  private keysReleased(e: KeyboardEvent) {\n    e.stopPropagation();\n    this.keys[e.keyCode] = false;\n  }\n\n  private windowOnFocus() {\n    this.keys = {};\n  }\n}\n","import type { WebMapEvents } from '../../interfaces/Events';\nimport type { MapOptions } from '../../interfaces/MapOptions';\nimport type { MapStateItem } from '../../interfaces/MapState';\nimport type { WebMap } from '../../WebMap';\n\nexport abstract class StateItem<V extends any | undefined = any | undefined>\n  implements MapStateItem<V | undefined>\n{\n  name!: keyof MapOptions;\n  event!: (keyof WebMapEvents)[];\n  protected value?: V;\n\n  constructor(\n    protected webMap: WebMap,\n    opt?: {\n      name?: keyof MapOptions;\n      event?: (keyof WebMapEvents)[] | keyof WebMapEvents;\n      value?: V;\n    },\n  ) {\n    if (opt) {\n      if (opt.value) {\n        this.setValue(opt.value);\n      }\n      if (opt.name) {\n        this.name = opt.name;\n      }\n      if (opt.event) {\n        if (typeof opt.event === 'string') {\n          this.event = [opt.event];\n        } else {\n          this.event = opt.event;\n        }\n      }\n    }\n  }\n\n  getValue(): V | undefined {\n    return this.value;\n  }\n\n  setValue(val: V): void {\n    this.value = val;\n  }\n\n  abstract toString(): string | undefined;\n  abstract parse(str: string): V;\n}\n","import { StateItem } from './StateItem';\n\nimport type { LngLatBoundsArray } from '@nextgis/utils';\n\nimport type { WebMapEvents } from '../../interfaces/Events';\nimport type { MapOptions } from '../../interfaces/MapOptions';\n\nexport class BoundState extends StateItem<LngLatBoundsArray> {\n  name: keyof MapOptions = 'bounds';\n  event: (keyof WebMapEvents)[] = ['moveend'];\n\n  getValue(): LngLatBoundsArray | undefined {\n    return this.webMap.getBounds();\n  }\n  setValue(bounds: LngLatBoundsArray): void {\n    this.webMap.setView({ bounds });\n  }\n  toString(): string | undefined {\n    const data = this.getValue();\n    if (data) {\n      return data\n        .slice(0, 4)\n        .map((x) => x.toFixed(5))\n        .join('_');\n    }\n    return undefined;\n  }\n  parse(str: string): LngLatBoundsArray {\n    const lngLat = str.split('_').map(Number) as LngLatBoundsArray;\n    return lngLat;\n  }\n}\n","import { StateItem } from './StateItem';\n\nimport type { LngLatArray } from '@nextgis/utils';\n\nimport type { WebMapEvents } from '../../interfaces/Events';\nimport type { MapOptions } from '../../interfaces/MapOptions';\n\nexport class CenterState extends StateItem<LngLatArray> {\n  name: keyof MapOptions = 'center';\n  event: (keyof WebMapEvents)[] = ['moveend'];\n\n  getValue(): LngLatArray | undefined {\n    return this.webMap.getCenter();\n  }\n  setValue(val: LngLatArray): void {\n    this.webMap.setCenter(val);\n  }\n  toString(): string {\n    const data = this.getValue();\n    if (data) {\n      const d = data.map((x) => x.toFixed(5));\n      return d[0] + '_' + d[1];\n    }\n    return '';\n  }\n  parse(str: string): LngLatArray {\n    const lngLat = str.split('_').map(Number) as LngLatArray;\n    return lngLat;\n  }\n}\n","import { StateItem } from './StateItem';\n\nimport type { WebMapEvents } from '../../interfaces/Events';\nimport type { MapOptions } from '../../interfaces/MapOptions';\n\nexport class ZoomState extends StateItem<number> {\n  name: keyof MapOptions = 'zoom';\n  event: (keyof WebMapEvents)[] = ['zoomend'];\n  getValue(): number | undefined {\n    const zoom = this.webMap.getZoom();\n    return zoom !== undefined ? Math.round(zoom) : undefined;\n  }\n  setValue(val: number): void {\n    this.webMap.setZoom(val);\n  }\n  toString(): string | undefined {\n    return String(this.getValue());\n  }\n  parse(str: string): number {\n    return Number(str);\n  }\n}\n","/**\n * @internal\n */\nexport function clearObject(obj: Record<any, any>): void {\n  for (const member in obj) {\n    delete obj[member];\n  }\n}\n","import {\n  checkExtent,\n  deepmerge,\n  defined,\n  getBoundsFeature,\n} from '@nextgis/utils';\nimport { deprecatedMapClick } from '@nextgis/utils';\nimport { EventEmitter } from 'events';\n\nimport { Keys } from './components/keys/Keys';\nimport { BoundState, CenterState, ZoomState } from './components/mapStates';\nimport { clearObject } from './utils/clearObject';\n\nimport type { GetPaintFunction } from '@nextgis/paint';\nimport type {\n  LngLatArray,\n  LngLatBoundsArray,\n  TileJson,\n  Type,\n} from '@nextgis/utils';\nimport type { Feature, Polygon } from 'geojson';\nimport type StrictEventEmitter from 'strict-event-emitter-types';\n\nimport type { StateItem } from './components/mapStates/StateItem';\nimport type { Cursor } from './interfaces/BaseTypes';\nimport type { MainMapEvents, WebMapEvents } from './interfaces/Events';\nimport type { LayerAdapter } from './interfaces/LayerAdapter';\nimport type {\n  FitOptions,\n  Locate,\n  LocateOptions,\n  LocationEvents,\n  MapAdapter,\n  MapClickEvent,\n} from './interfaces/MapAdapter';\nimport type { MapOptions, ViewOptions } from './interfaces/MapOptions';\nimport type { RuntimeParams } from './interfaces/RuntimeParams';\nimport type { StarterKit } from './interfaces/StarterKit';\n\ntype EmitStatusEventData = any;\n\nlet ID = 0;\n\nconst OPTIONS: MapOptions = {\n  minZoom: 0,\n  maxZoom: 22,\n  paint: {\n    color: '#0000ff', // blue\n    opacity: 0.4,\n    strokeOpacity: 1,\n    stroke: true,\n    radius: 8,\n    weight: 1,\n  },\n  selectedPaint: {\n    color: '#00008b', // darkblue\n    opacity: 0.4,\n    strokeOpacity: 1,\n    stroke: true,\n    radius: 12,\n    weight: 1,\n  },\n  create: true,\n};\n\ninterface AddEventsListenersOptions {\n  include: (keyof MainMapEvents)[];\n}\n\nexport class WebMapMain<\n  M = any,\n  E extends WebMapEvents = WebMapEvents,\n  O extends MapOptions = MapOptions,\n> {\n  static keys: Keys = new Keys();\n\n  static getPaintFunctions: { [name: string]: GetPaintFunction };\n\n  options: O = OPTIONS as O;\n  // `WebMapEvents` must be `E` but its not work correct\n  readonly emitter: StrictEventEmitter<EventEmitter, WebMapEvents> =\n    new EventEmitter();\n  readonly keys = WebMapMain.keys;\n\n  readonly mapAdapter: MapAdapter<M>;\n  readonly runtimeParams: RuntimeParams[] = [];\n\n  getPaintFunctions = WebMapMain.getPaintFunctions;\n  mapStateItems: Type<StateItem>[] = [CenterState, ZoomState, BoundState];\n  id = ID++;\n\n  /**\n   * From runtime params\n   */\n  readonly mapState: StateItem[] = [];\n  protected _initMapState: Record<string, any> = {};\n  protected readonly _starterKits: StarterKit[];\n  private _extent?: LngLatBoundsArray;\n  private readonly _eventsStatus: { [key in keyof E]?: boolean } = {};\n  private _coordFromMapClickAbort?: () => void;\n\n  private readonly _mapEvents: {\n    [key in keyof MainMapEvents]?: (...args: any[]) => void;\n  } = {};\n\n  constructor(mapOptions: O) {\n    this.mapAdapter = mapOptions.mapAdapter as MapAdapter<M>;\n    this._starterKits = mapOptions.starterKits || [];\n    if (mapOptions) {\n      this.options = deepmerge((OPTIONS as O) || {}, mapOptions) as O;\n    }\n    if (this.options.runtimeParams) {\n      this.runtimeParams = this.options.runtimeParams;\n    }\n    this._addEventsListeners();\n\n    if (this.options.tileJson) {\n      this._setTileJsonOptions(this.options.tileJson);\n    }\n    if (this.options.create) {\n      this.create();\n    }\n  }\n\n  getId(): number {\n    return this.id;\n  }\n\n  /**\n   * Manual way to create a map (If {@link MapOptions.create} is `false`).\n   * @example\n   * ```javascript\n   * const webMap = new WebMap(options);\n   * webMap.create().then(() => doSomething());\n   * ```\n   */\n  async create(): Promise<this> {\n    if (!this.getEventStatus('create')) {\n      await this._setInitMapState(this.mapStateItems);\n      await this._setupMap();\n      this._emitStatusEvent('create', this);\n    }\n    return this;\n  }\n\n  setRuntimeParams(params: RuntimeParams): void {\n    this.runtimeParams.push(params);\n  }\n\n  /**\n   * Destroys WebMap, MapAdapter, clears all layers and turn off all event listeners\n   */\n  destroy(): void {\n    this._removeEventListeners();\n    clearObject(this._emitStatusEvent);\n    if (this.mapAdapter.destroy) {\n      this.mapAdapter.destroy();\n    }\n  }\n\n  mapStateWithFunc(func: (x: any) => any): Record<string, any> {\n    const state: Record<string, any> = {};\n    this.mapState.forEach((x) => {\n      state[x.name] = func(x);\n    });\n    return state;\n  }\n\n  getStateAsString(): Record<string, any> {\n    return this.mapStateWithFunc((x) => x.toString());\n  }\n\n  getState(): Record<string, any> {\n    return this.mapStateWithFunc((x) => x.getValue());\n  }\n\n  getRuntimeParams(): Record<string, any> {\n    const state: Record<string, any> = {};\n    this.mapState.forEach((x) => {\n      for (const r of this.runtimeParams) {\n        const val = r.get(x.name);\n        if (val !== undefined) {\n          state[x.name] = x.parse(val);\n          break;\n        }\n      }\n    });\n    return state;\n  }\n\n  /**\n   * Returns the HTML element that contains the map.\n   * @returns The map's container\n   */\n  getContainer(): HTMLElement | undefined {\n    if (this.mapAdapter.getContainer) {\n      return this.mapAdapter.getContainer();\n    } else if (this.options.target) {\n      if (this.options.target instanceof HTMLElement) {\n        return this.options.target;\n      } else if (typeof this.options.target === 'string') {\n        const element = document.getElementById(this.options.target);\n        if (element) {\n          return element;\n        }\n      }\n    }\n  }\n\n  /**\n   * Set the cursor icon to be displayed when hover icon on the map container.\n   * @param cursor - Available cursor name from https://developer.mozilla.org/ru/docs/Web/CSS/cursor\n   */\n  setCursor(cursor: Cursor): void {\n    this.onLoad().then(() => {\n      if (this.mapAdapter.setCursor) {\n        this.mapAdapter.setCursor(cursor);\n      }\n    });\n  }\n\n  getCursor(): Cursor | undefined {\n    if (this.mapAdapter.getCursor) {\n      return this.mapAdapter.getCursor() as Cursor;\n    }\n    const container = this.getContainer();\n    if (container) {\n      return container.style.cursor as Cursor;\n    }\n  }\n\n  /**\n   * Set the center of the current view.\n   * @param lngLat - Array of two numbers representing longitude and latitude of the center of the map view.\n   *\n   * @example\n   * ```javascript\n   * // Mount Everest 27° 59′ 17″ N, 86° 55′ 31″ E\n   * webMap.setCenter([86.925278, 27.988056]);\n   * ```\n   */\n  setCenter(lngLat: LngLatArray): this {\n    this.mapAdapter.setCenter(lngLat);\n    return this;\n  }\n\n  /**\n   * Returns the map's geographical centerpoint.\n   * @returns lngLat Array of two numbers representing longitude and latitude of the center of the map view.\n   *\n   * @example\n   * ```javascript\n   * // Mount Everest 27° 59′ 17″ N, 86° 55′ 31″ E\n   * webMap.getCenter(); // [86.925278, 27.988056]\n   * ```\n   */\n  getCenter(): LngLatArray | undefined {\n    return this.mapAdapter.getCenter();\n  }\n\n  getBounds(): LngLatBoundsArray | undefined {\n    if (this.mapAdapter.getBounds) {\n      return this.mapAdapter.getBounds();\n    }\n  }\n\n  getBoundsPolygon(): Feature<Polygon> | undefined {\n    const bounds = this.getBounds();\n    if (bounds) {\n      const feature = getBoundsFeature(bounds);\n      return feature;\n    }\n  }\n\n  /**\n   * Zoom to a specific zoom level.\n   * @param zoom - The zoom level to set (0-24).\n   */\n  setZoom(zoom: number): this {\n    this.mapAdapter.setZoom(zoom);\n    return this;\n  }\n\n  /**\n   * Returns the map's current zoom level.\n   * @returns The map's current zoom level (0-24).\n   */\n  getZoom(): number | undefined {\n    const zoom = this.mapAdapter.getZoom();\n    if (typeof zoom === 'number') {\n      return zoom;\n    }\n    // throw Error(\n    //   'Unable to get zoom level. Perhaps the map is not have been initialized yet',\n    // );\n  }\n\n  zoomIn(): void {\n    if (this.mapAdapter.zoomIn) {\n      this.mapAdapter.zoomIn();\n    } else {\n      const zoom = this.getZoom();\n      if (zoom !== undefined) {\n        const toZoom = zoom + 1;\n        this.setZoom(toZoom);\n      }\n    }\n  }\n\n  zoomOut(): void {\n    if (this.mapAdapter.zoomOut) {\n      this.mapAdapter.zoomOut();\n    } else {\n      const zoom = this.getZoom();\n      if (zoom !== undefined) {\n        const toZoom = zoom - 1;\n        this.setZoom(toZoom);\n      }\n    }\n  }\n\n  /**\n   * Sets the view of the map geographical center and zoom\n   * @param lngLat - Array of two numbers representing longitude and latitude of the center of the map view.\n   * @param zoom - The zoom level to set (0-24).\n   *\n   * @example\n   * ```javascript\n   * // Mount Everest 27° 59′ 17″ N, 86° 55′ 31″ E\n   * webMap.setView([86.925278, 27.988056], 12)\n   * ```\n   */\n  setView(lngLatOr: LngLatArray, zoom?: number): void;\n\n  setView(options: ViewOptions): void;\n\n  setView(lngLatOrOpt: LngLatArray | ViewOptions, zoom?: number): void {\n    if (Array.isArray(lngLatOrOpt)) {\n      const lngLat = lngLatOrOpt;\n      if (this.mapAdapter.setView && lngLat && defined(zoom)) {\n        this.mapAdapter.setView(lngLat, zoom);\n      } else {\n        if (lngLat) {\n          this.mapAdapter.setCenter(lngLat);\n        }\n        if (defined(zoom)) {\n          this.mapAdapter.setZoom(zoom);\n        }\n      }\n    } else {\n      const viewOpt = lngLatOrOpt;\n      if (this.mapAdapter.setView) {\n        this.mapAdapter.setView(viewOpt);\n      }\n    }\n  }\n\n  /**\n   * Sets a map view that contains the given geographical bounds.\n   * @param bounds - Array of coordinates, measured in degrees, in [west, south, east, north] order.\n   *\n   * @example\n   * ```javascript\n   * // Whole world\n   * webMap.fitBounds([0, -90, 180, 90]);\n   * ```\n   */\n  fitBounds(bounds: LngLatBoundsArray, options?: FitOptions): this {\n    checkExtent(bounds);\n    if (bounds.every((x) => defined(x))) {\n      if (bounds[1] < -85.06) {\n        bounds[1] = -85.06;\n      }\n      if (bounds[3] > 85.06) {\n        bounds[3] = 85.06;\n      }\n      this.mapAdapter.fitBounds(bounds, options);\n    }\n    return this;\n  }\n\n  /**\n   * Checking the status of any asynchronous operation\n   * @param event - The name of the event whose status is checked\n   *\n   * @example\n   * ```javascript\n   * var webMap = new WebMap(options);\n   * webMap.getEventStatus('create'); // false\n   * webMap.emitter.on('create', function () {\n   *   webMap.getEventStatus('create'); // true\n   * })\n   * ```\n   */\n  getEventStatus(event: keyof E): boolean {\n    // ugly hack to disable type checking error\n    const _eventName = event as keyof WebMapEvents;\n    const status = this._eventsStatus[_eventName];\n    return status ?? false;\n  }\n\n  /**\n   * helper method to wait for events to load. By default, card creation is tracked\n   * @param event - The name of the event whose status is checked\n   *\n   * @example\n   * ```javascript\n   * var webMap = new WebMap(options);\n   * webMap.onLoad().then(function () {\n   *   webMap.getEventStatus('create'); // true\n   * })\n   *\n   * // use async/await syntax\n   * async function () {\n   *   await webMap.onLoad();\n   *   doSomething();\n   * }\n   *\n   * ```\n   */\n  onLoad(event: keyof WebMapEvents = 'create'): Promise<this> {\n    return new Promise((res) => {\n      if (this.getEventStatus(event)) {\n        res(this);\n      } else {\n        this.emitter.once(event, () => {\n          res(this);\n        });\n      }\n    });\n  }\n\n  onMapLoad(cb?: (mapAdapter: MapAdapter) => void): Promise<MapAdapter> {\n    return new Promise((res) => {\n      const _resolve = () => {\n        const mapAdapter = this.mapAdapter;\n        if (cb) {\n          cb(mapAdapter);\n        }\n        if (mapAdapter) {\n          res(mapAdapter);\n        }\n      };\n      const isLoaded = this.mapAdapter.isLoaded ?? true;\n      if (this.mapAdapter.map && isLoaded) {\n        _resolve();\n      } else {\n        this.mapAdapter.emitter.once('create', () => {\n          _resolve();\n        });\n      }\n    });\n  }\n\n  getLayerAdapters(): { [name: string]: Type<LayerAdapter> } {\n    return this.mapAdapter.layerAdapters;\n  }\n\n  getLayerAdapter(name: string): Type<LayerAdapter> {\n    const adapter = this.mapAdapter.layerAdapters[name];\n    return adapter;\n  }\n\n  locate(opt: LocateOptions, events?: LocationEvents): Locate {\n    if (this.mapAdapter && this.mapAdapter.locate) {\n      return this.mapAdapter.locate(opt, events);\n    }\n    const stop = () => ({});\n    return { stop };\n  }\n\n  stopGetCoordFromMapClick(): void {\n    if (this._coordFromMapClickAbort) {\n      this._coordFromMapClickAbort();\n      this._coordFromMapClickAbort = undefined;\n    }\n  }\n\n  getCoordFromMapClick(): Promise<LngLatArray> {\n    if (!this._coordFromMapClickAbort) {\n      return new Promise((resolve, reject) => {\n        const cursor: Cursor = this.getCursor() || 'grab';\n        this._removeEventListeners({ include: ['click'] });\n        this.setCursor('crosshair');\n        const onCancel_ = (): void => {\n          this.setCursor(cursor);\n          this._addEventsListeners({ include: ['click'] });\n          this.mapAdapter.emitter.off('click', onMapClick);\n          this._coordFromMapClickAbort = undefined;\n        };\n        const onMapClick = (e: MapClickEvent) => {\n          onCancel_();\n          deprecatedMapClick(e);\n          resolve(e.lngLat);\n        };\n        this.mapAdapter.emitter.once('click', onMapClick);\n        this._coordFromMapClickAbort = onCancel_;\n      });\n    } else {\n      return this.getCoordFromMapClick();\n    }\n  }\n\n  protected _emitStatusEvent(\n    eventName: keyof E,\n    data?: EmitStatusEventData,\n  ): void {\n    // ugly hack to disable type checking error\n    const _eventName = eventName as keyof E;\n    this._eventsStatus[_eventName] = true;\n    this.emitter.emit(_eventName as keyof WebMapEvents, data);\n  }\n\n  protected async _addLayerProviders(): Promise<void> {\n    //\n  }\n\n  protected async _onLoadSync(): Promise<void> {\n    //\n  }\n\n  private async _setupMap(): Promise<this> {\n    if (!this.mapAdapter) {\n      throw new Error('WebMap `mapAdapter` option is not set');\n    }\n    await this.mapAdapter.create(this.options);\n    this._zoomToInitialExtent();\n\n    await this._addLayerProviders();\n    await this._onLoadSync();\n\n    this._emitStatusEvent('build-map', this.mapAdapter);\n    return this;\n  }\n\n  private _setTileJsonOptions(tileJson: TileJson): void {\n    if (tileJson.center) {\n      this.options.center = tileJson.center;\n    }\n    if (tileJson.bounds) {\n      this.options.bounds = tileJson.bounds;\n    }\n    if (defined(tileJson.maxzoom)) {\n      // this.options.maxZoom = tileJson.maxzoom;\n      this.options.zoom = tileJson.maxzoom;\n    }\n    if (defined(tileJson.minzoom)) {\n      // this.options.minZoom = tileJson.minzoom;\n      this.options.zoom = tileJson.minzoom;\n    }\n    if (defined(tileJson.maxzoom) && defined(tileJson.minzoom)) {\n      this.options.zoom = (tileJson.maxzoom + tileJson.minzoom) / 2;\n    }\n  }\n\n  private _zoomToInitialExtent(): void {\n    const { center, zoom, bounds } = this.options;\n    if (this._extent) {\n      this.fitBounds(this._extent);\n    } else if (center && zoom) {\n      this.setView(center, zoom);\n    } else if (bounds) {\n      this.fitBounds(bounds);\n      if (zoom !== undefined) {\n        this.setZoom(zoom);\n      }\n    }\n  }\n\n  private _setInitMapState(states: Type<StateItem>[]): void {\n    for (const X of states) {\n      const state = new X(this);\n      this.mapState.push(state);\n      for (const r of this.runtimeParams) {\n        const str = r.get(state.name);\n        if (str !== undefined) {\n          const val = state.parse(str);\n          this._initMapState[state.name] = val;\n          Object.defineProperty(this.options, state.name, {\n            value: val,\n            configurable: true,\n            enumerable: true,\n          });\n          break;\n        }\n      }\n    }\n  }\n\n  private _addEventsListeners(opt?: AddEventsListenersOptions): void {\n    let events: (keyof MainMapEvents)[] = [\n      'preclick',\n      'click',\n      'zoomstart',\n      'zoom',\n      'zoomend',\n      'movestart',\n      'move',\n      'moveend',\n      'mousemove',\n      'mouseout',\n      'mouseover',\n    ];\n\n    if (opt && opt.include) {\n      events = events.filter((x) => opt.include.includes(x));\n    }\n\n    events.forEach((x) => {\n      this._mapEvents[x] = (data): void => {\n        if (this.runtimeParams.length) {\n          const mapStatusEvents = this.mapState.filter((y) =>\n            y.event.includes(x),\n          );\n          mapStatusEvents.forEach((mapStatusEvent) => {\n            const value = mapStatusEvent.toString();\n            this.runtimeParams.forEach((r) => {\n              r.set(mapStatusEvent.name, value);\n            });\n          });\n        }\n        if (this._eventsStatus) {\n          this.emitter.emit(x, data);\n        }\n      };\n      const mapEvent = this._mapEvents[x];\n      if (mapEvent) {\n        this.mapAdapter.emitter.on(x, mapEvent);\n      }\n    });\n  }\n\n  private _removeEventListeners(opt?: AddEventsListenersOptions): void {\n    let events = Object.entries(this._mapEvents) as [\n      keyof MainMapEvents,\n      ((...args: any[]) => void) | undefined,\n    ][];\n    if (opt && opt.include) {\n      events = events.filter((x) => opt.include.includes(x[0]));\n    }\n    events.forEach(([x, event]) => {\n      if (event) {\n        this.mapAdapter.emitter.removeListener(x as keyof MainMapEvents, event);\n      }\n    });\n  }\n}\n","import { preparePaint } from '@nextgis/paint';\nimport { propertiesFilter } from '@nextgis/properties-filter';\nimport { defined } from '@nextgis/utils';\n\nimport { updateGeoJsonAdapterOptions } from './utils/updateGeoJsonAdapterOptions';\nimport { WebMapMain } from './WebMapMain';\n\nimport type { Paint } from '@nextgis/paint';\nimport type { PropertiesFilter } from '@nextgis/properties-filter';\nimport type { FeatureProperties, TileJson, Type } from '@nextgis/utils';\nimport type { Feature, GeoJsonObject, Geometry } from 'geojson';\n\nimport type { LayerLegend } from '../../ngw-connector/src/types/LegendItem';\n\nimport type { LayerDef } from './interfaces/BaseTypes';\nimport type { WebMapEvents } from './interfaces/Events';\nimport type {\n  AdapterConstructor,\n  AdapterOptions,\n  DataLayerFilter,\n  FeatureLayerAdapter,\n  FilterOptions,\n  GeoJsonAdapterOptions,\n  GetLegendOptions,\n  ImageAdapterOptions,\n  LayerAdapter,\n  LayerAdapterDefinition,\n  LayerAdapters,\n  LayerAdaptersOptions,\n  LayerDefinition,\n  MainLayerAdapter,\n  OnLayerMouseOptions,\n  OnLayerSelectOptions,\n  TileAdapterOptions,\n  VectorLayerAdapter,\n} from './interfaces/LayerAdapter';\nimport type { FitOptions } from './interfaces/MapAdapter';\nimport type {\n  GetAttributionsOptions,\n  MapOptions,\n  ToggleLayerOptions,\n} from './interfaces/MapOptions';\n\ntype AddedLayers<M = any, L = any> = { [id: string]: LayerAdapter<M, L> };\n\nexport class WebMapLayers<\n  M = any,\n  L = any,\n  E extends WebMapEvents = WebMapEvents,\n  O extends MapOptions = MapOptions,\n> extends WebMapMain<M, E, O> {\n  private _layersIdCounter = 1;\n  private _layersOrderCounter = 1;\n  private readonly _baselayers: string[] = [];\n  private readonly _layers: AddedLayers<M, L> = {};\n  private readonly _selectedLayers: string[] = [];\n\n  constructor(mapOptions: O) {\n    super(mapOptions);\n    const tileJson = this.options.tileJson;\n    if (tileJson) {\n      this.emitter.once('build-map', () => this.addTileJsonLayer(tileJson));\n    }\n  }\n\n  /**\n   * Try to fit map view by given layer bounds.\n   * But not all layers have borders\n   */\n  async fitLayer(layerDef: LayerDef, options?: FitOptions): Promise<void> {\n    const layer = this.getLayer(layerDef);\n    // TODO: remove backward compatibility for `getExtent`\n    const getBounds = layer && (layer.getBounds || layer.getExtent);\n    if (getBounds) {\n      const extent = await getBounds.call(layer);\n      if (extent) {\n        this.fitBounds(extent, options);\n      }\n    }\n  }\n\n  /**\n   * Check if given layer is baselayer\n   */\n  isBaseLayer(layerDef: LayerDef): boolean | undefined {\n    const layer = this.getLayer(layerDef);\n    if (layer && layer.id) {\n      return this._baselayers.indexOf(layer.id) !== -1;\n    }\n    return undefined;\n  }\n\n  getBaseLayers(): LayerAdapter[] {\n    const baselayers: LayerAdapter[] = [];\n    this._baselayers.forEach((x) => {\n      const baselayer = this._layers[x];\n      if (baselayer) {\n        baselayers.push(baselayer);\n      }\n    });\n    return baselayers;\n  }\n\n  getBaseLayersIds(): string[] {\n    return this._baselayers;\n  }\n\n  /**\n   * Helper method to return added layer object by any definition type.\n   */\n  getLayer<LA extends LayerAdapter = LayerAdapter>(\n    layerDef: LayerDef,\n  ): LA | undefined {\n    if (typeof layerDef === 'string') {\n      return this._layers[layerDef] as LA;\n    }\n    return layerDef as LA;\n  }\n\n  /**\n   * Helper method to return added layer identificator by any definition type.\n   */\n  getLayerId(layerDef: LayerDef): string | undefined {\n    const layer = this.getLayer(layerDef);\n    if (layer) {\n      if (layer.id) {\n        return layer?.id;\n      }\n      if (layer && layer.options) {\n        return layer.options.id;\n      }\n    }\n    throw new Error('No id for layer');\n  }\n\n  /**\n   * Return array of all added layer identifications.\n   */\n  getLayers(): string[] {\n    return Object.keys(this._layers);\n  }\n\n  // TODO: rename to getLayers, getLayers rename to getLayersIds\n  allLayers(): AddedLayers<M, L> {\n    return this._layers;\n  }\n\n  orderedLayers<LA extends LayerAdapter<M, L> = LayerAdapter<M, L>>(): LA[] {\n    return Object.values(this._layers).sort((a, b) =>\n      a.order && b.order ? a.order - b.order : 0,\n    ) as LA[];\n  }\n\n  findLayer<T extends LayerAdapter = LayerAdapter>(\n    filter: (adapter: T) => boolean,\n  ): T | undefined {\n    for (const l in this._layers) {\n      const layerAdapter = this._layers[l] as T;\n      const isFit = filter(layerAdapter);\n      if (isFit) {\n        return layerAdapter;\n      }\n    }\n  }\n\n  /**\n   * Check if the given layer on the map\n   */\n  isLayerVisible(layerDef: LayerDef): boolean {\n    const layer = this.getLayer(layerDef);\n    return layer && layer.options.visibility !== undefined\n      ? layer.options.visibility\n      : false;\n  }\n\n  /**\n   * Shortcut method to create base layer\n   */\n  async addBaseLayer<\n    K extends keyof LayerAdapters,\n    O extends AdapterOptions = AdapterOptions,\n  >(\n    adapter: K | Type<LayerAdapters[K]>,\n    options?: O | LayerAdaptersOptions[K],\n  ): Promise<LayerAdapter> {\n    const layer = await this.addLayer(\n      adapter,\n      {\n        ...options,\n        baselayer: true,\n      },\n      undefined,\n    );\n\n    return layer;\n  }\n\n  /**\n   * Registration of map layer.\n   *\n   * @param adapter - The name of layer adapter from [MapAdapter.layerAdapters](webmap#MapAdapter.layerAdapters).\n   *                May be custom object or class implemented by [MainLayerAdapter](webmap#MainLayerAdapter).\n   * @param options - Specific options for given adapter\n   *\n   * @example\n   * ```javascript\n   * webMap.addLayer('TILE', options).then((layer) => webMap.showLayer(layer));\n   *\n   * webMap.addLayer(CustomLayerAdapter, options);\n   * ```\n   */\n  async addLayer<\n    K extends keyof LayerAdapters,\n    LO extends AdapterOptions = AdapterOptions,\n  >(\n    adapter: LayerAdapterDefinition<K>,\n    options: LO | LayerAdaptersOptions[K] = {},\n    order?: number,\n  ): Promise<LayerAdapter> {\n    const id = this._layersIdCounter++;\n    const _order = defined(order)\n      ? order\n      : options.order !== undefined\n        ? options.order\n        : this.reserveOrder();\n    let adapterEngine: Type<LayerAdapter<M, L, LO>> | undefined;\n    if (typeof adapter === 'string') {\n      adapterEngine = this.getLayerAdapter(adapter) as Type<\n        LayerAdapter<M, L, LO>\n      >;\n    } else if (typeof adapter === 'function') {\n      adapterEngine = adapter as Type<LayerAdapter<M, L, LO>>;\n    } else if (\n      'then' in (adapter as Promise<Type<LayerAdapters[K]> | undefined>)\n    ) {\n      adapterEngine = (await adapter) as Type<LayerAdapter<M, L, LO>>;\n    }\n\n    const geoJsonOptions = options as GeoJsonAdapterOptions;\n\n    this._updateGeoJsonOptions(geoJsonOptions);\n\n    options = {\n      id: String(id),\n      order: _order,\n      ...options,\n    };\n\n    // options.visibility is a layer global state\n    const visibility = options.visibility ?? true;\n    options.visibility = false;\n\n    if (options.baselayer) {\n      options.order = 0;\n    }\n    if (this.options.onBeforeAddLayer) {\n      const modified = this.options.onBeforeAddLayer({\n        options,\n        adapter: adapterEngine,\n      });\n      if (modified) {\n        if (modified.options) {\n          options = modified.options;\n        }\n        if (modified.adapter) {\n          adapterEngine = modified.adapter as Type<LayerAdapter<M, L, LO>>;\n        }\n      }\n    }\n    if (adapterEngine !== undefined) {\n      const _adapter = new adapterEngine(this.mapAdapter.map, options);\n      _adapter.options = { ...options, ..._adapter.options };\n\n      if (_adapter.options.baselayer) {\n        options.baselayer = true;\n        options.order = 0;\n        _adapter.options.order = 0;\n      }\n\n      let layerId: string | undefined;\n      if (_adapter.options.id) {\n        layerId = String(_adapter.options.id);\n\n        this._layers[layerId] = _adapter;\n      }\n      this._emitLayerEvent('layer:preadd', layerId || '', _adapter);\n      await this.onMapLoad();\n      _adapter.map = this.mapAdapter.map;\n      const layer = await _adapter.addLayer(_adapter.options);\n      // checking that the original layer was inserted into the adapter anyway\n      _adapter.layer = layer;\n      // think about how to move `id` to the adapter's constructor,\n      // but that it is not required in the options\n      _adapter.id = _adapter.options.id || String(id);\n      _adapter.options.id = _adapter.id;\n      if (options.baselayer) {\n        _adapter.options.order = 0;\n      }\n      _adapter.order = _adapter.options.order ?? _order;\n      if (layerId) {\n        delete this._layers[layerId];\n      }\n      layerId = String(_adapter.id);\n      if (this._layers[layerId]) {\n        throw Error(`layer with id '${layerId}' already exist`);\n      }\n      if (layerId) {\n        this._layers[layerId] = _adapter;\n\n        if (geoJsonOptions.filter) {\n          this.filterLayer(_adapter, geoJsonOptions.filter);\n        }\n        if (options.baselayer) {\n          this._baselayers.push(layerId);\n        }\n\n        if (visibility) {\n          await this.showLayer(layerId);\n        }\n      }\n      const opacity = options.opacity;\n      if (opacity !== undefined && opacity !== null && opacity <= 1) {\n        this.setLayerOpacity(_adapter, opacity);\n      }\n      // TODO: remove backward compatibility for `getExtent`\n      const getBounds = layer && (_adapter.getBounds || _adapter.getExtent);\n      if (options.fit && getBounds) {\n        const extent = await getBounds.call(_adapter);\n        if (extent) {\n          await this.fitBounds(extent);\n        }\n      }\n      if (options.onAdded) {\n        options.onAdded(_adapter);\n      }\n      this._emitLayerEvent('layer:add', layerId, _adapter);\n      return _adapter;\n    }\n    return Promise.reject('No adapter');\n  }\n\n  async addLayerFromAsyncAdapter<\n    K extends keyof LayerAdapters,\n    O extends AdapterOptions = AdapterOptions,\n  >(\n    adapter: AdapterConstructor,\n    options: O | LayerAdaptersOptions[K],\n    order?: number,\n  ): Promise<LayerAdapter> {\n    const _order =\n      order || options.order !== undefined\n        ? options.order\n        : this.reserveOrder();\n    const adapterConstructor = adapter as AdapterConstructor;\n    const adapterConstructorPromise = adapterConstructor();\n    const adapterEngine = await adapterConstructorPromise;\n    if (adapterEngine) {\n      return this.addLayer(adapterEngine, options, _order);\n    }\n    return Promise.reject('No adapter');\n  }\n\n  /**\n   * Remove all layer from map and memory.\n   */\n  removeLayers(\n    allowCb?: (layer: string, adapter: LayerAdapter) => boolean,\n  ): void {\n    for (const l in this._layers) {\n      let allow = true;\n      if (allowCb) {\n        allow = allowCb(l, this._layers[l]);\n      }\n      if (allow) {\n        this.removeLayer(l);\n        delete this._layers[l];\n      }\n    }\n  }\n\n  async getLegend(options?: GetLegendOptions): Promise<LayerLegend[]> {\n    const promises: Promise<LayerLegend[]>[] = [];\n    for (const l of this.orderedLayers()) {\n      if (l.getLegend) {\n        promises.push(l.getLegend(options));\n      }\n    }\n    return (await Promise.all(promises)).flat();\n  }\n\n  reserveOrder(): number {\n    return this._layersOrderCounter++;\n  }\n\n  /**\n   * Remove all layers but not remove basemap.\n   */\n  removeOverlays(): void {\n    this.removeLayers((layerId, layer) => {\n      if (layer && layer.options && layer.options.baselayer) {\n        return false;\n      }\n      return true;\n    });\n  }\n\n  /**\n   * Remove specific layer from map and memory by its definition.\n   */\n  removeLayer(layerDef: LayerDef): void {\n    const layer = this.getLayer(layerDef);\n    const layerId = layer && this.getLayerId(layer);\n    if (layer && layerId) {\n      this.emitter.emit('layer:preremove', layer);\n      if (layer.beforeRemove) {\n        layer.beforeRemove();\n      }\n      if (layer.removeLayer) {\n        layer.removeLayer();\n      } else {\n        this.mapAdapter.removeLayer(layer.layer);\n      }\n      if (layer.options && layer.options.baselayer) {\n        const index = this._baselayers.indexOf(layerId);\n        if (index) {\n          this._baselayers.splice(index, 1);\n        }\n      }\n      delete this._layers[layerId];\n      this.emitter.emit('layer:remove', layer);\n    }\n  }\n\n  /**\n   * Create layer from GeoJson data. Set style and behavior for selection.\n   *\n   * @example\n   * ```javascript\n   * // Add simple layer\n   * webMap.addGeoJsonLayer({ data: geojson, paint: { color: 'red' } });\n   *\n   * // Add styled by feature property layer with selection behavior\n   * webMap.addGeoJsonLayer({\n   *   data: geojson,\n   *   paint: function (feature) {\n   *     return { color: feature.properties.color, opacity: 0.5 }\n   *   },\n   *  selectedPaint: function (feature) {\n   *    return { color: feature.properties.selcolor, opacity: 1 }\n   *  },\n   *  selectable: true,\n   *  multiselect: true\n   * });\n   *\n   * // Add marker layer styled with use [Icons](icons)\n   * webMap.addGeoJsonLayer({ data: geojson, paint: webMap.getIcon({ color: 'orange' })});\n   *\n   * // work with added layer\n   * const layer = webMap.addGeoJsonLayer({ data: geojson, id: 'my_layer_name'});\n   * // access layer by id\n   * webMap.showLayer('my_layer_name');\n   * // or access layer by instance\n   * webMap.showLayer(layer);\n   * ```\n   */\n  addGeoJsonLayer<\n    K extends keyof LayerAdapters = keyof LayerAdapters,\n    O extends GeoJsonAdapterOptions<any, any> = GeoJsonAdapterOptions,\n  >(\n    opt: O = {} as O,\n    adapter?: LayerAdapterDefinition<K>,\n  ): Promise<VectorLayerAdapter<any, any, any>> {\n    opt = opt || ({} as O);\n    opt.multiselect = opt.multiselect !== undefined ? opt.multiselect : false;\n    opt.unselectOnSecondClick =\n      opt.unselectOnSecondClick !== undefined\n        ? opt.unselectOnSecondClick\n        : true;\n    if (!adapter) {\n      opt = updateGeoJsonAdapterOptions(opt);\n    }\n    opt.paint = opt.paint || {};\n    return this.addLayer(adapter || 'GEOJSON', opt);\n  }\n\n  /** Shortcut for {@link WebMapLayers.addGeoJsonLayer} to create GeoJson adapter with generic types for working in typescript */\n  addFeatureLayer<\n    P extends FeatureProperties = FeatureProperties,\n    G extends Geometry = Geometry,\n    O extends GeoJsonAdapterOptions<Feature<G, P>> = GeoJsonAdapterOptions<\n      Feature<G, P>\n    >,\n  >(options = {} as O): Promise<FeatureLayerAdapter<P, G>> {\n    return this.addGeoJsonLayer<'GEOJSON', O>(options) as Promise<\n      FeatureLayerAdapter<P, G>\n    >;\n  }\n\n  /** Shortcut for {@link WebMapLayers.addLayer} to create TileLayer adapter */\n  addTileLayer(\n    url: string,\n    options: Omit<TileAdapterOptions, 'url'> = {},\n  ): Promise<MainLayerAdapter<M, L, TileAdapterOptions>> {\n    return this.addLayer('TILE', { ...options, url }) as Promise<\n      MainLayerAdapter<M, L, TileAdapterOptions>\n    >;\n  }\n\n  /** Shortcut for {@link WebMapLayers.addLayer} to create TileLayer adapter */\n  addImageLayer(\n    url: string,\n    options: Omit<ImageAdapterOptions, 'url'>,\n  ): Promise<MainLayerAdapter<M, L, ImageAdapterOptions>>;\n  addImageLayer(\n    options: ImageAdapterOptions,\n  ): Promise<MainLayerAdapter<M, L, ImageAdapterOptions>>;\n  addImageLayer(\n    urlOrOptions: string | ImageAdapterOptions,\n    options?: Omit<ImageAdapterOptions, 'url'>,\n  ): Promise<MainLayerAdapter<M, L, ImageAdapterOptions>> {\n    let url;\n    if (typeof urlOrOptions === 'string') {\n      url = urlOrOptions;\n    } else {\n      url = urlOrOptions.url;\n      options = urlOrOptions;\n    }\n\n    return this.addLayer('IMAGE', { ...options, url }) as Promise<\n      MainLayerAdapter<M, L, ImageAdapterOptions>\n    >;\n  }\n\n  /**\n   * Show added layer on the map by it definition.\n   */\n  showLayer(\n    layerDef: LayerDef,\n    options: ToggleLayerOptions = {},\n  ): Promise<void> {\n    return this.toggleLayer(layerDef, true, options);\n  }\n\n  /**\n   * Hide added layer on the map by it definition.\n   */\n  hideLayer(\n    layerDef: LayerDef,\n    options: ToggleLayerOptions = {},\n  ): Promise<void> {\n    return this.toggleLayer(layerDef, false, options);\n  }\n\n  /**\n   * Change added layer visibility on the map by given status or inverse current status.\n   *\n   * @example\n   * ```javascript\n   * webMap.addLayer('TILE', {id: 'my_layer', url: ''}).then((layer) => {\n   *   webMap.toggleLayer(layer, true);\n   *   webMap.toggleLayer('my_layer', false);\n   *   webMap.toggleLayer('my_layer');\n   *   webMap.isLayerVisible(layer); // true\n   * });\n   * ```\n   */\n  toggleLayer(\n    layerDef: LayerDef,\n    status?: boolean,\n    options: ToggleLayerOptions = {},\n  ): Promise<void> {\n    const layer = this.getLayer(layerDef);\n\n    const onMap = layer && layer.options.visibility;\n    const toStatus = status !== undefined ? status : !onMap;\n    const silent = options.silent !== undefined ? options.silent : false;\n    const action = async (l: LayerAdapter) => {\n      const id = String(l.id);\n      const preEventName = toStatus ? 'layer:preshow' : 'layer:prehide';\n      const eventName = toStatus ? 'layer:show' : 'layer:hide';\n      if (!silent) {\n        this._emitLayerEvent(preEventName, id, l);\n        this._emitLayerEvent('layer:pretoggle', id, l);\n      }\n      if (toStatus && this.mapAdapter) {\n        const order = l.options.baselayer ? 0 : l.options.order;\n\n        // do not show baselayer if another on the map\n        if (l.options.baselayer && this._baselayers.length) {\n          const anotherVisibleBaselayers = this._baselayers.filter((x) => {\n            return x !== l.id && this.isLayerVisible(x);\n          });\n          for (const bl of anotherVisibleBaselayers) {\n            await this.hideLayer(bl);\n          }\n        }\n        if (l.showLayer) {\n          await l.showLayer.call(l, l.layer);\n        } else if (l.layer !== undefined) {\n          await this.mapAdapter.showLayer(l.layer);\n        }\n        if (order !== undefined) {\n          this.mapAdapter.setLayerOrder(l.layer, order, this._layers);\n        }\n      } else {\n        if (l.hideLayer) {\n          await l.hideLayer.call(l, l.layer);\n        } else if (l.layer !== undefined) {\n          await this.mapAdapter.hideLayer(l.layer);\n        }\n      }\n      l.options.visibility = toStatus;\n      if (!silent) {\n        this._emitLayerEvent(eventName, id, l);\n        this._emitLayerEvent('layer:toggle', id, l);\n      }\n    };\n    if (layer) {\n      return this.onMapLoad().then(() => action(layer));\n    }\n    return Promise.resolve();\n  }\n\n  updateLayer(\n    layerDef: LayerDef,\n    options?: { params?: Record<string, string> },\n  ): Promise<void> {\n    const layer = this.getLayer(layerDef);\n    if (layer) {\n      if (layer.updateLayer) {\n        return Promise.resolve(layer.updateLayer(options));\n      } else if (this.isLayerVisible(layer)) {\n        return this.hideLayer(layer, { silent: true }).then(() => {\n          return this.showLayer(layer, { silent: true });\n        });\n      }\n    }\n    return Promise.resolve();\n  }\n\n  /**\n   * Set transparency for a given layer by number from 0 to 1\n   */\n  setLayerOpacity(layerDef: LayerDef, value: number): void {\n    const layer = this.getLayer(layerDef);\n    if (layer) {\n      if (layer.setOpacity) {\n        layer.setOpacity(value);\n      } else if (this.mapAdapter.setLayerOpacity) {\n        this.mapAdapter.setLayerOpacity(layer.layer, value);\n      }\n    }\n  }\n\n  isLayerLabelVisible(layerDef: LayerDef): boolean {\n    const layer = this.getLayer(layerDef) as VectorLayerAdapter;\n    if (layer.isLabelVisible) {\n      return layer.isLabelVisible();\n    }\n    return layer.options.labelVisibility ?? true;\n  }\n\n  showLayerLabel(layerDef: LayerDef): void {\n    this.toggleLayerLabel(layerDef, true);\n  }\n\n  hideLayerLabel(layerDef: LayerDef): void {\n    this.toggleLayerLabel(layerDef, false);\n  }\n\n  toggleLayerLabel(layerDef: LayerDef, status?: boolean): boolean {\n    const layer = this.getLayer(layerDef) as VectorLayerAdapter;\n    status = status ?? !this.isLayerLabelVisible(layerDef);\n    if (layer) {\n      if (status) {\n        if (layer.showLabel) {\n          layer.options.labelVisibility = true;\n          layer.showLabel();\n        }\n      } else {\n        if (layer.hideLabel) {\n          layer.options.labelVisibility = false;\n          layer.hideLabel();\n        }\n      }\n      if (layer.id) {\n        this._emitLayerEvent('layer:label:toggle', layer.id, layer);\n      }\n    }\n    return status;\n  }\n\n  /**\n   * Mark the layer as selected.\n   * If the adapter is a vector layer and supports data selection,\n   * you can pass a callback function to specify which data will be selected.\n   *\n   * @example\n   * ```javascript\n   * const layer = webMap.addLayer('GEOJSON', {data: geojson}).then((layer) => {\n   *   webMap.selectLayer(layer, ({feature}) => feature.id === '42');\n   * });\n   * ```\n\n   */\n  selectLayer(layerDef: LayerDef, findFeatureFun?: DataLayerFilter): void {\n    const layer = this.getLayer(layerDef);\n    if (layer) {\n      const adapter = layer as VectorLayerAdapter;\n      if (adapter && adapter.select) {\n        adapter.select(findFeatureFun);\n      }\n      const layerId = this.getLayerId(layer);\n      if (layerId) {\n        this._selectedLayers.push(layerId);\n      }\n    }\n  }\n\n  /**\n   * Unselect the given layer.\n   * If the adapter is a vector layer and supports data selection,\n   * you can pass a callback function to specify which data will be unselected.\n   *\n   * @example\n   * ```javascript\n   * const layer = webMap.addLayer('GEOJSON', {data: geojson}).then((layer) => {\n   *   webMap.unSelectLayer(layer, ({feature}) => feature.id === '42');\n   * });\n   * ```\n   *\n   */\n  unSelectLayer(layerDef: LayerDef, findFeatureFun?: DataLayerFilter): void {\n    const layer = this.getLayer(layerDef);\n    if (layer) {\n      const adapter = layer && (layer as VectorLayerAdapter);\n      if (adapter.unselect) {\n        adapter.unselect(findFeatureFun);\n      }\n      const layerId = this.getLayerId(layer);\n      if (layerId) {\n        const index = this._selectedLayers.indexOf(layerId);\n        if (index !== -1) {\n          this._selectedLayers.splice(index, 1);\n        }\n      }\n    }\n  }\n  /** Remove selection from any selected selectable layer */\n  unSelectLayers(): void {\n    const layers = Object.values(this.allLayers());\n    let l: VectorLayerAdapter;\n    for (l of layers) {\n      if (l.unselect) {\n        l.unselect();\n      }\n    }\n  }\n\n  /**\n   * Hide features from a vector layer using a callback function.\n   *\n   * @example\n   * ```javascript\n   * const layer = webMap.addLayer('GEOJSON', {data: geojson}).then((layer) => {\n   *   webMap.filterLayer(layer, ({feature}) => feature.id === '42');\n   * });\n   * ```\n   *\n   */\n  filterLayer(\n    layerDef: LayerDef,\n    filter: DataLayerFilter<Feature, L>,\n  ): LayerDefinition<Feature, L>[] {\n    const layer = this.getLayer(layerDef);\n    const adapter = layer as VectorLayerAdapter;\n    if (adapter.filter) {\n      return adapter.filter(filter);\n    }\n    return [];\n  }\n\n  propertiesFilter(\n    layerDef: LayerDef,\n    filters: PropertiesFilter,\n    options?: FilterOptions,\n  ): Promise<void> {\n    const layer = this.getLayer(layerDef);\n    if (layer) {\n      const adapter = layer as VectorLayerAdapter;\n      if (adapter.propertiesFilter) {\n        return adapter.propertiesFilter(filters, options);\n      } else if (adapter.filter) {\n        this.filterLayer(adapter, (e) => {\n          if (e.feature && e.feature.properties) {\n            return propertiesFilter(e.feature.properties, filters);\n          }\n          return true;\n        });\n      }\n    }\n    return Promise.resolve();\n  }\n\n  removeLayerFilter(layerDef: LayerDef): void {\n    const layer = this.getLayer(layerDef);\n    const adapter = layer as VectorLayerAdapter;\n    if (adapter.removeFilter) {\n      adapter.removeFilter();\n    } else if (adapter.filter) {\n      adapter.filter(() => {\n        return true;\n      });\n    }\n  }\n\n  /**\n   * Sets the GeoJSON data for given vector layer.\n   *\n   * @example\n   * ```javascript\n   * const layer = webMap.addLayer('GEOJSON').then((layer) => {\n   *   webMap.setLayerData(layer, geojson);\n   * });\n   * ```\n   */\n  setLayerData(layerDef: LayerDef, data: GeoJsonObject): void | Promise<void> {\n    const vectorAdapter = this.getLayer(layerDef);\n    const adapter = vectorAdapter as VectorLayerAdapter;\n    if (adapter) {\n      if (adapter.setData) {\n        return adapter.setData(data);\n      } else if (adapter.clearLayer && adapter.addData) {\n        adapter.clearLayer();\n        return adapter.addData(data);\n      }\n    }\n    return Promise.resolve();\n  }\n\n  /**\n   * Push new the GeoJSON features into given vector layer.\n   *\n   * @example\n   * ```javascript\n   * const layer = webMap.addLayer('GEOJSON', {data: geojson_features_5}).then((layer) => {\n   *   console.log(layer.getLayers().length) // > 5;\n   *   webMap.addLayerData(layer, geojson_features_3);\n   *   console.log(layer.getLayers().length) // > 8;\n   * });\n   * ```\n   */\n  addLayerData(layerDef: LayerDef, data: GeoJsonObject): void {\n    const layerMem = this.getLayer(layerDef);\n    const adapter = layerMem as VectorLayerAdapter;\n    if (adapter.addData) {\n      adapter.addData(data);\n    }\n  }\n\n  /**\n   * Remove from vector layer all features.\n   * it is possible to remove only some objects if you specify a callback function.\n   *\n   * @example\n   * ```javascript\n   * const layer = webMap.addLayer('GEOJSON', {data: geojson}).then((layer) => {\n   *   webMap.clearLayerData(layer, (feture) => feture.id === 42);\n   *   webMap.clearLayerData(layer);\n   * });\n   * ```\n   */\n  clearLayerData(layerDef: LayerDef, cb?: (feature: Feature) => boolean): void {\n    const layerMem = this.getLayer(layerDef);\n    const adapter = layerMem as VectorLayerAdapter;\n    if (adapter && adapter.clearLayer) {\n      adapter.clearLayer(cb);\n    }\n  }\n\n  setLayerPaint(layerDef: LayerDef, paint?: Paint | null): void {\n    const layer = this.getLayer(layerDef);\n    if (paint && layer && layer.setPaint) {\n      layer.setPaint(paint);\n    }\n  }\n  setLayerSelectedPaint(layerDef: LayerDef, paint?: Paint | null): void {\n    const layer = this.getLayer(layerDef);\n    if (paint && layer && layer.setSelectedPaint) {\n      layer.setSelectedPaint(paint);\n    }\n  }\n  updateLayerPaint(layerDef: LayerDef, paint: Partial<Paint>): void {\n    const layer = this.getLayer(layerDef);\n    if (paint && layer && layer.updatePaint) {\n      layer.updatePaint(paint);\n    }\n  }\n  updateLayerSelectedPaint(layerDef: LayerDef, paint: Partial<Paint>): void {\n    const layer = this.getLayer(layerDef);\n    if (paint && layer && layer.updateSelectedPaint) {\n      layer.updateSelectedPaint(paint);\n    }\n  }\n\n  getAttributions(options: GetAttributionsOptions): string[] {\n    const attributions: string[] = [];\n    for (const l in this._layers) {\n      const layerCache = this._layers[l];\n      const onlyVisible =\n        options.onlyVisible !== undefined ? options.onlyVisible : true;\n      let useLayerAttr = onlyVisible ? layerCache.options.visibility : true;\n      if (useLayerAttr && options.onlyBaselayer) {\n        useLayerAttr = this._baselayers.includes(l);\n      }\n      if (useLayerAttr) {\n        const attr = layerCache.options && layerCache.options.attribution;\n        if (attr) {\n          attributions.push(attr);\n        }\n      }\n    }\n\n    return attributions;\n  }\n\n  getActiveBaseLayer(): MainLayerAdapter<M, any, AdapterOptions> | undefined {\n    const visibleLayerBaseLayer = this.getBaseLayers().find((x) => {\n      return this.isLayerVisible(x);\n    });\n    if (visibleLayerBaseLayer) {\n      return this.getLayer(visibleLayerBaseLayer);\n    }\n  }\n\n  addTileJsonLayer(\n    tileJson: TileJson,\n  ): Promise<MainLayerAdapter<M, any, TileAdapterOptions>> {\n    // if (this.mapAdapter.createTileJsonlayer) {\n    // } else {\n\n    const url = tileJson.tiles[0];\n    return this.addLayer('TILE', {\n      url,\n      maxZoom: tileJson.maxzoom,\n      minZoom: tileJson.minzoom,\n      subdomains: tileJson.scheme,\n      attribution: tileJson.attribution,\n    }) as Promise<MainLayerAdapter<M, any, TileAdapterOptions>>;\n  }\n\n  /** @internal */\n  _emitLayerEvent(name: keyof E, id: string, options?: unknown) {\n    const name_ = String(name);\n    if (defined(id) && name_.startsWith('layer:')) {\n      const specificLayerName = name_.replace('layer:', 'layer-' + id + ':');\n      this.emitter.emit(specificLayerName as keyof WebMapEvents, options);\n    }\n    this.emitter.emit(name as keyof WebMapEvents, options);\n  }\n\n  private async _onLayerClick(options: OnLayerMouseOptions) {\n    const id = options.layer.id;\n    this._emitLayerEvent('layer:click', id || '', options);\n    return Promise.resolve(options);\n  }\n  private async _onLayerDoubleClick(options: OnLayerMouseOptions) {\n    const id = options.layer.id;\n    this._emitLayerEvent('layer:dblclick', id || '', options);\n    return Promise.resolve(options);\n  }\n\n  private async _onLayerSelect(options: OnLayerSelectOptions) {\n    this._emitLayerEvent('layer:select', options.layer.id || '', options);\n    return Promise.resolve(options);\n  }\n\n  private _updateGeoJsonOptions(options: GeoJsonAdapterOptions) {\n    const {\n      onSelect,\n      onLayerSelect,\n      onClick,\n      onDoubleClick,\n      onLayerClick,\n      onMouseOut,\n      onMouseOver,\n    } = options;\n    const onLayerClickFromOpt = onClick || onLayerClick;\n    const onLayerDblClickFromOpt = onDoubleClick || onLayerClick;\n    options.onClick = (e) => {\n      if (onLayerClickFromOpt) {\n        onLayerClickFromOpt(e);\n      }\n      return this._onLayerClick(e);\n    };\n    options.onDoubleClick = (e) => {\n      if (onLayerDblClickFromOpt) {\n        onLayerDblClickFromOpt(e);\n      }\n      return this._onLayerDoubleClick(e);\n    };\n\n    options.onMouseOut = (e) => {\n      const id = e.layer.id;\n      if (onMouseOut) onMouseOut(e);\n      if (defined(id)) {\n        this._emitLayerEvent(`layer:mouseout`, id, e);\n      }\n    };\n\n    options.onMouseOver = (e) => {\n      const id = e.layer.id;\n      if (onMouseOver) onMouseOver(e);\n      if (defined(id)) {\n        this._emitLayerEvent(`layer:mouseover`, id, e);\n      }\n    };\n\n    // TODO: remove backward compatibility for onLayerSelect\n    const onLayerSelectFromOpt = onSelect || onLayerSelect;\n    options.onSelect = (e) => {\n      if (onLayerSelectFromOpt) {\n        onLayerSelectFromOpt(e);\n      }\n      return this._onLayerSelect(e);\n    };\n\n    if (!options.nativePaint) {\n      if (this.options.paint) {\n        options.paint = preparePaint({\n          paint: options.paint || {},\n          defaultPaint: this.options.paint,\n          getPaintFunctions: this.getPaintFunctions,\n        });\n      }\n      if (options.selectedPaint && this.options.selectedPaint) {\n        options.selectedPaint = preparePaint({\n          paint: options.selectedPaint,\n          defaultPaint: this.options.selectedPaint,\n          getPaintFunctions: this.getPaintFunctions,\n        });\n      }\n    }\n  }\n}\n","import { createToggleControl } from './components/controls/createToggleControl';\nimport { WebMapLayers } from './WebMapLayers';\n\nimport type { WebMapEvents } from './interfaces/Events';\nimport type { ControlPosition } from './interfaces/MapAdapter';\nimport type {\n  ButtonControlOptions,\n  CreateControlOptions,\n  MapControl,\n  MapControls,\n  ToggleControl,\n  ToggleControlOptions,\n} from './interfaces/MapControl';\nimport type { MapOptions } from './interfaces/MapOptions';\nimport type { WebMapMain } from './WebMapMain';\n\n/**\n * Collection of methods for managing map controls\n */\nexport class WebMapControls<\n    M = any,\n    L = any,\n    C extends object = any,\n    E extends WebMapEvents = WebMapEvents,\n    O extends MapOptions = MapOptions,\n  >\n  extends WebMapLayers<M, L, E, O>\n  implements WebMapLayers, WebMapMain\n{\n  static controls: {\n    [name: string]: (webMap: WebMapControls, options?: any) => any;\n  } = {\n    CONTROL: (\n      webMap: WebMapControls,\n      options: {\n        control: MapControl;\n        options?: CreateControlOptions;\n      },\n    ) => {\n      return webMap.createControl(options.control, options.options);\n    },\n    BUTTON: (webMap: WebMapControls, options: ButtonControlOptions) => {\n      return webMap.createButtonControl(options);\n    },\n    TOGGLE: (webMap: WebMapControls, options: ToggleControlOptions) => {\n      return webMap.createToggleControl(options);\n    },\n  };\n\n  private _loadControlQueue: {\n    [key in ControlPosition]: (() => Promise<any>)[];\n  } = {\n    'top-right': [],\n    'bottom-right': [],\n    'top-left': [],\n    'bottom-left': [],\n  };\n  private _isControlLoading: { [key in ControlPosition]: boolean } = {\n    'top-right': false,\n    'bottom-right': false,\n    'top-left': false,\n    'bottom-left': false,\n  };\n\n  async addControl<K extends keyof MapControls>(\n    controlDef: K | C,\n    position: ControlPosition,\n    options?: MapControls[K],\n  ): Promise<any> {\n    let control: C | undefined;\n    position = position ?? 'top-left';\n    if (typeof controlDef === 'string') {\n      control = this.getControl(controlDef, options);\n    } else {\n      control = controlDef as C;\n    }\n    if (control) {\n      return new Promise<() => Promise<any>>((resolve) => {\n        const promise = async () => {\n          const _control = await control;\n          const c = this.mapAdapter.addControl(_control, position);\n          resolve(c);\n        };\n        this._setControlQueue(position, promise);\n      });\n    }\n  }\n\n  /**\n   * Creating a universal map layout control element. Can be used with any map adapter.\n   *\n   * @example\n   * ```javascript\n   * const control = webMap.createControl({\n   *   onAdd() {\n   *     return document.createElement('div');\n   *   }\n   * });\n   * ```\n   */\n  async createControl(\n    control: MapControl,\n    options?: CreateControlOptions,\n  ): Promise<C | undefined> {\n    await this.onLoad('build-map');\n    if (this.mapAdapter.createControl) {\n      return this.mapAdapter.createControl(control, options);\n    }\n  }\n\n  async createButtonControl(\n    options: ButtonControlOptions,\n  ): Promise<C | undefined> {\n    await this.onLoad('build-map');\n    if (this.mapAdapter.createButtonControl) {\n      return this.mapAdapter.createButtonControl(options);\n    }\n  }\n\n  /**\n   * Create any toggler control button\n   * @param options - Options for control layout customization and assigning a callback function\n   *\n   * @example\n   * ```javascript\n   * const toggleControl = ngwMap.createToggleControl({\n   *   getStatus: () => webMap.isLayerVisible('any-layer-id'),\n   *   onClick: (status) => ngwMap.toggleLayer('webmap', status),\n   *   html: {\n   *     on: 'ON',\n   *     off: 'OFF'\n   *   },\n   *   title: 'Toggle layer visibility'\n   * });\n   * webMap.addControl(toggleControl, 'top-right');\n   * ```\n   * {@link http://code.nextgis.com/demo-examples-toggle-control | Toggle button control example}\n   */\n  async createToggleControl(\n    options: ToggleControlOptions,\n  ): Promise<(C & ToggleControl) | undefined> {\n    await this.onLoad('build-map');\n    if (this.mapAdapter.createToggleControl) {\n      return this.mapAdapter.createToggleControl(options);\n    } else {\n      if (this.mapAdapter.createButtonControl) {\n        return createToggleControl<C>(\n          this.mapAdapter.createButtonControl,\n          options,\n        );\n      }\n    }\n  }\n\n  /**\n   *\n   * @param control - Instance of WEB-GIS framework control.\n   *                  What is returned by the {@link createControl | create} method\n   */\n  removeControl(control: C): void {\n    if ('remove' in control) {\n      // @ts-expect-error TODO: ugly code, rewrite\n      control.remove();\n    } else if (this.mapAdapter.removeControl) {\n      Promise.resolve(control).then((c) => {\n        this.mapAdapter.removeControl(c);\n      });\n    }\n  }\n\n  /**\n   * Get instance of registered control\n   * @param control - Any registered control string name\n   * @param options - Custom control options\n   */\n  getControl<K extends keyof MapControls>(\n    control: K,\n    options?: MapControls[K],\n  ): C | undefined {\n    const engine = this.mapAdapter.controlAdapters[control];\n    if (engine) {\n      return new engine(options);\n    } else {\n      const createFun = WebMapControls.controls[control];\n      if (createFun) {\n        return createFun(this, options);\n      }\n    }\n  }\n\n  getControlContainer(): HTMLElement | undefined {\n    if (this.mapAdapter.getControlContainer) {\n      return this.mapAdapter.getControlContainer();\n    }\n  }\n\n  private _setControlQueue(position: ControlPosition, cb: () => Promise<any>) {\n    this._loadControlQueue[position].push(cb);\n    if (!this._isControlLoading[position]) {\n      this._applyControls(position);\n    }\n  }\n\n  private async _applyControls(position: ControlPosition) {\n    if (this._loadControlQueue[position].length) {\n      this._isControlLoading[position] = true;\n      const controlCb = this._loadControlQueue[position][0];\n      await controlCb();\n      this._loadControlQueue[position].splice(0, 1);\n      this._applyControls(position);\n    } else {\n      this._isControlLoading[position] = false;\n    }\n  }\n}\n","/**\n * @privateRemarks\n * Since it was not possible to split the code through mixins, inheritance was used.\n * The `ts-mixin` plugin worked fine, but led to errors in IE.\n *\n * Now inheritance is as follow:\n * BaseWebMap \\> WebMapLayers \\> WebMap\n *\n * Will need to be done this way:\n * ```javascript\n * class WebMap extend mixin(WebMapLayers, WebMapControls) {}\n * ```\n *\n * This approach can also be considered\n * ```javascript\n * class WebMap {\n *   layers: WebMapLayers;\n *   controls  WebMapControls\n * }\n * ```\n * and then\n *\n * const webMap = new WebMap(...);\n * webMap.layers.addLayer(...)\n *\n * looks good, but will add difficulty in inheriting from WebMap\n *\n * old:\n * ```javascript\n * class NgwMap extends WebMap {\n *   addLayer(...) {\n *      super.addLayer(...)\n *   }\n * }\n * ```\n * new:\n * ```javascript\n * class NgwLayers extends WebMapLayers {\n *   addLayer(...) {\n *     super.addLayer(...)\n *   }\n * }\n *\n * class NgwMap extends WebMap {\n *   layersClass = NgwLayers\n * }\n * ```\n * ...and there will be compatibility issues\n */\n\nimport { getWebMap, setWebMap } from './container';\nimport { WebMapControls } from './WebMapControls';\n\nimport type { WebMapEvents } from './interfaces/Events';\nimport type { ControlOptions } from './interfaces/MapControl';\nimport type { MapOptions } from './interfaces/MapOptions';\nimport type { WebMapLayers } from './WebMapLayers';\nimport type { WebMapMain } from './WebMapMain';\n\n/**\n * The core component for managing map adapters.\n * It contains methods for adding and manipulation with\n * {@link WebMapMain | map}, {@link WebMapLayers | layers} and {@link WebMapControls | controls}.\n *\n * @example\n * ```javascript\n * import { WebMap } from '@nextgis/webmap';\n * import MapAdapter from '@nextgis/ol-map-adapter';\n *\n * const webMap = new WebMap({\n *   mapAdapter: new MapAdapter(),\n *   target: 'map',\n * });\n * ```\n *\n * @typeParam M - Interactive Map used in the adapter\n * @typeParam L - Layer\n * @typeParam C - Control\n * @typeParam E - Events\n *\n */\nexport class WebMap<\n    M = any,\n    L = any,\n    C extends object = any,\n    E extends WebMapEvents = WebMapEvents,\n    O extends MapOptions = MapOptions,\n  >\n  extends WebMapControls<M, L, C, E, O>\n  implements WebMapControls, WebMapLayers, WebMapMain\n{\n  constructor(mapOptions: O) {\n    super(mapOptions);\n    this._addControls();\n    setWebMap(this.id, this);\n  }\n\n  static get<T extends WebMap = WebMap>(id: number): T {\n    return getWebMap<T>(id);\n  }\n\n  /**\n   * @internal\n   */\n  protected async _addLayerProviders(): Promise<void> {\n    for await (const kit of this._starterKits) {\n      if (kit.getLayerAdapters) {\n        const adapters = await kit.getLayerAdapters.call(kit);\n        if (adapters) {\n          for await (const adapter of adapters) {\n            const newAdapter = await adapter.createAdapter(this);\n            if (newAdapter) {\n              this.mapAdapter.layerAdapters[adapter.name] = newAdapter;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @internal\n   */\n  protected async _onLoadSync(): Promise<void> {\n    for await (const kit of this._starterKits) {\n      if (kit.onLoadSync) {\n        try {\n          await kit.onLoadSync.call(kit, this);\n        } catch (er) {\n          console.error(er);\n        }\n      }\n    }\n  }\n\n  private _addControls(): void {\n    if (this.options.controls) {\n      this.options.controls.forEach((x) => {\n        let controlAdapterName = x;\n        let controlOptions: ControlOptions = {};\n        if (typeof x === 'string' && this.options.controlsOptions) {\n          if (this.options.controlsOptions[x]) {\n            controlOptions = this.options.controlsOptions[x];\n            if (controlOptions.control !== undefined) {\n              controlAdapterName = controlOptions.control;\n            }\n          }\n        }\n        const { position, ...options } = controlOptions;\n        this.addControl(controlAdapterName, position || 'top-left', options);\n      });\n    }\n    this._emitStatusEvent('controls:create');\n  }\n}\n","export function getDefaultControls(): string[] {\n  return ['ZOOM', 'ATTRIBUTION'];\n}\n","import { WebMap } from './WebMap';\n\nimport type { MapOptions } from './interfaces/MapOptions';\n\nexport * from './components/controls/createToggleControl';\nexport * from './container';\nexport * from './interfaces/BaseTypes';\nexport * from './interfaces/Events';\nexport * from './interfaces/LayerAdapter';\nexport * from './interfaces/MapAdapter';\nexport * from './interfaces/MapControl';\nexport * from './interfaces/MapOptions';\nexport * from './interfaces/RuntimeParams';\nexport * from './interfaces/StarterKit';\nexport * from './utils/geometryTypes';\nexport * from './utils/getDefaultControls';\nexport * from './utils/updateGeoJsonAdapterOptions';\nexport * from './WebMapControls';\nexport * from './WebMapLayers';\nexport * from './WebMapMain';\n\nexport { WebMap };\n\nexport async function createWebMap(options: MapOptions): Promise<WebMap> {\n  const webMap = new WebMap(options);\n  return webMap.onLoad();\n}\n"],"names":["e","f","__spreadValues","expressionCallback","__publicField","__async","iter","more","temp","error"],"mappings":"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"}