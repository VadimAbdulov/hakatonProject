{"version":3,"file":"properties-filter.esm-browser.js","sources":["../src/propertiesFilter.ts"],"sourcesContent":["import type { Feature } from 'geojson';\n\nimport type {\n  Operation,\n  Properties,\n  PropertiesFilter,\n  PropertyFilter,\n} from './interfaces';\n\nfunction reEscape(s: string): string {\n  return s.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n}\n\nfunction like(b: string, a: string, iLike?: boolean): boolean {\n  a = String(a);\n  b = String(b);\n  if (a === b) return true;\n  if (iLike && a.toUpperCase() === b.toUpperCase()) return true;\n  const re = `^${reEscape(a)}$`.replace(/%/g, '.*').replace('_', '.');\n  return new RegExp(re, iLike ? 'i' : '').exec(b) !== null;\n}\n\nexport const operationsAliases: {\n  [key in Operation]: (a: any, b: any) => boolean;\n} = {\n  // greater(>)\n  gt: (a: any, b: any) => a > b,\n  // lower(<)\n  lt: (a: any, b: any) => a < b,\n  // greater or equal(>=)\n  ge: (a: any, b: any) => a >= b,\n  // lower or equal(<=)\n  le: (a: any, b: any) => a <= b,\n  // equal(=)\n  eq: (a: any, b: any) => a === b,\n  //  not equal(!=)\n  ne: (a: any, b: any) => a !== b,\n\n  in: (a: any, b: any[]) => b.indexOf(a) !== -1,\n  notin: (a: any, b: any[]) => b.indexOf(a) === -1,\n  // LIKE SQL statement(for strings compare)\n  like: (a: string, b: string) => {\n    return like(a, b);\n  },\n  // ILIKE SQL statement(for strings compare)\n  ilike: (a: string, b: string) => {\n    return like(a, b, true);\n  },\n};\n\nexport function isPropertyFilter(\n  filter: PropertyFilter | PropertiesFilter | string,\n): filter is PropertyFilter {\n  const pf = filter as PropertyFilter;\n  if (\n    pf.length === 3 &&\n    typeof pf[0] === 'string' &&\n    typeof pf[1] === 'string'\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/** @deprecated use {@link isPropertyFilter} instead */\nexport function checkIfPropertyFilter(\n  filter: PropertyFilter | PropertiesFilter | string,\n): filter is PropertyFilter {\n  return isPropertyFilter(filter);\n}\n\nexport function featureFilter(\n  feature: Feature,\n  filters: PropertiesFilter,\n): boolean {\n  const properties: Properties = { ...feature.properties };\n  if (properties) {\n    // workaround to filter by feature id\n    properties.$id = feature.id;\n    return propertiesFilter(properties, filters);\n  }\n  return false;\n}\n\nexport function propertiesFilter<T extends Properties = Properties>(\n  properties: T,\n  filters: PropertiesFilter<T>,\n): boolean {\n  const logic = typeof filters[0] === 'string' ? filters[0] : 'all';\n  const filterFunction = (p: PropertyFilter | PropertiesFilter) => {\n    if (isPropertyFilter(p)) {\n      const [field, operation, value] = p;\n      const operationExec = operationsAliases[operation];\n      if (operationExec) {\n        if (operation === 'like' || operation === 'ilike') {\n          if (typeof field === 'string') {\n            let prop = '';\n            const value_ = field.replace(/^%?(\\w+)%?$/, (match, cleanField) => {\n              prop = properties[cleanField];\n              return field.replace(cleanField, value);\n            });\n            return operationExec(prop, value_);\n          }\n        }\n        return operationExec(properties[field], value);\n      }\n      return false;\n    } else {\n      return propertiesFilter(properties, p);\n    }\n  };\n  const filters_ = filters.filter((x) => Array.isArray(x)) as (\n    | PropertyFilter\n    | PropertiesFilter\n  )[];\n  return logic === 'any'\n    ? filters_.some(filterFunction)\n    : filters_.every(filterFunction);\n}\n"],"names":[],"mappings":"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"}