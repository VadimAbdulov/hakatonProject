{"version":3,"file":"webmap.esm-bundler.prod.js","sources":["../src/container.ts","../src/components/controls/createToggleControl.ts","../src/utils/geometryTypes.ts","../src/utils/updateGeoJsonAdapterOptions.ts","../src/components/keys/KeysCodes.ts","../src/components/mapStates/StateItem.ts","../src/components/mapStates/BoundState.ts","../src/components/mapStates/CenterState.ts","../src/components/mapStates/ZoomState.ts","../src/WebMapMain.ts","../src/utils/clearObject.ts","../src/components/keys/Keys.ts","../src/WebMapLayers.ts","../src/WebMapControls.ts","../src/WebMap.ts","../src/utils/getDefaultControls.ts","../src/index.ts"],"sourcesContent":["import type { WebMap } from './WebMap';\n\nconst WEB_MAP_CONTAINER: Record<number, any> = {};\n\nexport function getWebMap<T extends WebMap = WebMap>(id: number): T {\n  return WEB_MAP_CONTAINER[id];\n}\n\nexport function setWebMap(id: number, webMap: WebMap) {\n  WEB_MAP_CONTAINER[id] = webMap;\n}\n","import type {\n  ButtonControlOptions,\n  ToggleControl,\n  ToggleControlOptions,\n} from '../../interfaces/MapControl';\n\n/**\n * The toggle is a button with status.\n * @internal\n */\nexport function createToggleControl<C = any>(\n  createButtonControl: (options: ButtonControlOptions) => C,\n  options: ToggleControlOptions,\n): C & ToggleControl {\n  const link = document.createElement('div');\n\n  let status = false;\n  if (options.getStatus) {\n    status = options.getStatus();\n  } else if (options.status) {\n    status = options.status;\n  }\n\n  const title = options.title || '';\n  const html = options.html;\n\n  function setTitle() {\n    if (title) {\n      if (typeof title === 'string') {\n        link.title = title;\n      } else {\n        link.title = status ? title.on : title.off;\n      }\n      link.setAttribute('aria-label', link.title);\n    }\n  }\n  setTitle();\n\n  // DomEvent.disableClickPropagation(link);\n  // DomEvent.on(link, 'click', DomEvent.stop);\n\n  function _setHtml(htmlDef: string | HTMLElement) {\n    if (htmlDef instanceof HTMLElement) {\n      link.innerHTML = '';\n      link.appendChild(htmlDef);\n    } else if (typeof htmlDef === 'string') {\n      link.innerHTML = htmlDef;\n    }\n  }\n  function setHtml() {\n    if (html) {\n      if (typeof html === 'string' || html instanceof HTMLElement) {\n        _setHtml(html);\n      } else {\n        _setHtml(status ? html.on : html.off);\n      }\n      link.setAttribute('aria-label', link.title);\n    }\n  }\n  setHtml();\n\n  function _setClass(addClass: string, impact: boolean) {\n    addClass.split(' ').forEach((x) => {\n      if (impact) {\n        link.classList.add(x);\n      } else {\n        link.classList.remove(x);\n      }\n    });\n  }\n\n  function setClass() {\n    if (options.addClassOn) {\n      _setClass(options.addClassOn, status);\n    }\n    if (options.addClassOff) {\n      _setClass(options.addClassOff, !status);\n    }\n  }\n\n  if (options.addClass) {\n    _setClass(options.addClass, true);\n  }\n  setClass();\n\n  const changeStatus = (status_?: boolean) => {\n    if (status_ !== undefined) {\n      status = status_;\n    }\n    setHtml();\n    setTitle();\n    setClass();\n  };\n\n  const onClick = (status_?: boolean) => {\n    status = status_ !== undefined ? status_ : !status;\n    if (options.onClick) {\n      const afterClick = options.onClick(status);\n      Promise.resolve(afterClick)\n        .then(() => changeStatus())\n        .catch(() => (status = !status));\n    } else {\n      changeStatus();\n    }\n  };\n\n  const buttonControl = createButtonControl({\n    html: link,\n    onClick,\n  }) as C & ToggleControl;\n  buttonControl.onClick = onClick;\n  buttonControl.changeStatus = changeStatus;\n  return buttonControl;\n}\n","import type {\n  Feature,\n  FeatureCollection,\n  GeoJsonGeometryTypes,\n  GeoJsonObject,\n  GeometryCollection,\n} from 'geojson';\n\n/**\n * @internal\n */\nexport function findMostFrequentGeomType(\n  arr: GeoJsonGeometryTypes[],\n): GeoJsonGeometryTypes {\n  const counts: { [x: string]: number } = {};\n  for (let fry = 0; fry < arr.length; fry++) {\n    counts[arr[fry]] = 1 + (counts[arr[fry]] || 0);\n  }\n  let maxName;\n  for (const c in counts) {\n    const count = maxName !== undefined ? counts[maxName] : 0;\n    if (counts[c] > (count || 0)) {\n      maxName = c;\n    }\n  }\n  return maxName as GeoJsonGeometryTypes;\n}\n\n/**\n * @internal\n */\nexport function detectGeometryType(\n  geojson: GeoJsonObject,\n): GeoJsonGeometryTypes {\n  let geometry: GeoJsonGeometryTypes;\n  if (geojson.type === 'FeatureCollection') {\n    const featuresTypes = (geojson as FeatureCollection).features.map(\n      (f) => f.geometry.type,\n    );\n    geometry = findMostFrequentGeomType(featuresTypes);\n  } else if (geojson.type === 'GeometryCollection') {\n    const geometryTypes = (geojson as GeometryCollection).geometries.map(\n      (g) => g.type,\n    );\n    geometry = findMostFrequentGeomType(geometryTypes);\n  } else if (geojson.type === 'Feature') {\n    geometry = (geojson as Feature).geometry.type;\n  } else {\n    geometry = geojson.type;\n  }\n  return geometry;\n}\n","import { isPaint } from '@nextgis/paint';\n\nimport { detectGeometryType } from './geometryTypes';\n\nimport type {\n  GeoJsonAdapterOptions,\n  VectorAdapterLayerType,\n} from '../interfaces/LayerAdapter';\n\n/**\n * @internal\n */\nexport const paintTypeAlias: Record<VectorAdapterLayerType, any> = {\n  polygon: 'path',\n  line: 'path',\n  point: 'circle',\n};\n\nexport const typeAlias: { [x: string]: VectorAdapterLayerType } = {\n  Point: 'point',\n  LineString: 'line',\n  MultiPoint: 'point',\n  Polygon: 'polygon',\n  MultiLineString: 'line',\n  MultiPolygon: 'polygon',\n};\n\n/**\n * @internal\n */\nexport function updateGeoJsonAdapterOptions<\n  O extends GeoJsonAdapterOptions = GeoJsonAdapterOptions,\n>(opt: O): O {\n  if (opt.data) {\n    const geomType = typeAlias[detectGeometryType(opt.data)];\n    const p = opt.paint;\n    if (p && isPaint(p)) {\n      // define parameter if not specified\n      p.type = p.type\n        ? p.type\n        : geomType === 'polygon' || geomType === 'line'\n          ? 'path'\n          : 'html' in p || 'className' in p\n            ? 'icon'\n            : paintTypeAlias[geomType];\n    }\n    opt.type = opt.type || geomType;\n  }\n  return opt;\n}\n","export class KeyCodes {\n  'backspace' = 8;\n  'tab' = 9;\n  'enter' = 13;\n  'shift' = 16;\n  'ctrl' = 17;\n  'alt' = 18;\n  'pause/break' = 19;\n  'caps_lock' = 20;\n  'escape' = 27;\n  'page_up' = 33;\n  'page_down' = 34;\n  'end' = 35;\n  'home' = 36;\n  'left_arrow' = 37;\n  'up_arrow' = 38;\n  'right_arrow' = 39;\n  'down_arrow' = 40;\n  'insert' = 45;\n  'delete' = 46;\n  'left_window_key' = 91;\n  'right_window_key' = 92;\n  'select_key' = 93;\n  'numpad_0' = 96;\n  'numpad_1' = 97;\n  'numpad_2' = 98;\n  'numpad_3' = 99;\n  'numpad_4' = 100;\n  'numpad_5' = 101;\n  'numpad_6' = 102;\n  'numpad_7' = 103;\n  'numpad_8' = 104;\n  'numpad_9' = 105;\n  'multiply' = 106;\n  'add' = 107;\n  'subtract' = 109;\n  'decimal_point' = 110;\n  'divide' = 111;\n  'f1' = 112;\n  'f2' = 113;\n  'f3' = 114;\n  'f4' = 115;\n  'f5' = 116;\n  'f6' = 117;\n  'f7' = 118;\n  'f8' = 119;\n  'f9' = 120;\n  'f10' = 121;\n  'f11' = 122;\n  'f12' = 123;\n  'num_lock' = 144;\n  'scroll_lock' = 145;\n  'semi-colon' = 186;\n  'equal_sign' = 187;\n  ',' = 188; // \"comma\";\n  '-' = 189; // \"dash\";\n  '.' = 190; // \"period\";\n  '/' = 191; // \"forward slash\";\n  '`' = 192; // \"grave accent\";\n  '[' = 219; // \"open bracket\";\n  '\\\\' = 220; // \"back slash\";\n  ']' = 221; // \"close braket\";\n  \"'\" = 222; // \"single quote\"\n}\n","import type { WebMapEvents } from '../../interfaces/Events';\nimport type { MapOptions } from '../../interfaces/MapOptions';\nimport type { MapStateItem } from '../../interfaces/MapState';\nimport type { WebMap } from '../../WebMap';\n\nexport abstract class StateItem<V extends any | undefined = any | undefined>\n  implements MapStateItem<V | undefined>\n{\n  name!: keyof MapOptions;\n  event!: (keyof WebMapEvents)[];\n  protected value?: V;\n\n  constructor(\n    protected webMap: WebMap,\n    opt?: {\n      name?: keyof MapOptions;\n      event?: (keyof WebMapEvents)[] | keyof WebMapEvents;\n      value?: V;\n    },\n  ) {\n    if (opt) {\n      if (opt.value) {\n        this.setValue(opt.value);\n      }\n      if (opt.name) {\n        this.name = opt.name;\n      }\n      if (opt.event) {\n        if (typeof opt.event === 'string') {\n          this.event = [opt.event];\n        } else {\n          this.event = opt.event;\n        }\n      }\n    }\n  }\n\n  getValue(): V | undefined {\n    return this.value;\n  }\n\n  setValue(val: V): void {\n    this.value = val;\n  }\n\n  abstract toString(): string | undefined;\n  abstract parse(str: string): V;\n}\n","import { StateItem } from './StateItem';\n\nimport type { LngLatBoundsArray } from '@nextgis/utils';\n\nimport type { WebMapEvents } from '../../interfaces/Events';\nimport type { MapOptions } from '../../interfaces/MapOptions';\n\nexport class BoundState extends StateItem<LngLatBoundsArray> {\n  name: keyof MapOptions = 'bounds';\n  event: (keyof WebMapEvents)[] = ['moveend'];\n\n  getValue(): LngLatBoundsArray | undefined {\n    return this.webMap.getBounds();\n  }\n  setValue(bounds: LngLatBoundsArray): void {\n    this.webMap.setView({ bounds });\n  }\n  toString(): string | undefined {\n    const data = this.getValue();\n    if (data) {\n      return data\n        .slice(0, 4)\n        .map((x) => x.toFixed(5))\n        .join('_');\n    }\n    return undefined;\n  }\n  parse(str: string): LngLatBoundsArray {\n    const lngLat = str.split('_').map(Number) as LngLatBoundsArray;\n    return lngLat;\n  }\n}\n","import { StateItem } from './StateItem';\n\nimport type { LngLatArray } from '@nextgis/utils';\n\nimport type { WebMapEvents } from '../../interfaces/Events';\nimport type { MapOptions } from '../../interfaces/MapOptions';\n\nexport class CenterState extends StateItem<LngLatArray> {\n  name: keyof MapOptions = 'center';\n  event: (keyof WebMapEvents)[] = ['moveend'];\n\n  getValue(): LngLatArray | undefined {\n    return this.webMap.getCenter();\n  }\n  setValue(val: LngLatArray): void {\n    this.webMap.setCenter(val);\n  }\n  toString(): string {\n    const data = this.getValue();\n    if (data) {\n      const d = data.map((x) => x.toFixed(5));\n      return d[0] + '_' + d[1];\n    }\n    return '';\n  }\n  parse(str: string): LngLatArray {\n    const lngLat = str.split('_').map(Number) as LngLatArray;\n    return lngLat;\n  }\n}\n","import { StateItem } from './StateItem';\n\nimport type { WebMapEvents } from '../../interfaces/Events';\nimport type { MapOptions } from '../../interfaces/MapOptions';\n\nexport class ZoomState extends StateItem<number> {\n  name: keyof MapOptions = 'zoom';\n  event: (keyof WebMapEvents)[] = ['zoomend'];\n  getValue(): number | undefined {\n    const zoom = this.webMap.getZoom();\n    return zoom !== undefined ? Math.round(zoom) : undefined;\n  }\n  setValue(val: number): void {\n    this.webMap.setZoom(val);\n  }\n  toString(): string | undefined {\n    return String(this.getValue());\n  }\n  parse(str: string): number {\n    return Number(str);\n  }\n}\n","import {\n  checkExtent,\n  deepmerge,\n  defined,\n  getBoundsFeature,\n} from '@nextgis/utils';\nimport { deprecatedMapClick } from '@nextgis/utils';\nimport { EventEmitter } from 'events';\n\nimport { Keys } from './components/keys/Keys';\nimport { BoundState, CenterState, ZoomState } from './components/mapStates';\nimport { clearObject } from './utils/clearObject';\n\nimport type { GetPaintFunction } from '@nextgis/paint';\nimport type {\n  LngLatArray,\n  LngLatBoundsArray,\n  TileJson,\n  Type,\n} from '@nextgis/utils';\nimport type { Feature, Polygon } from 'geojson';\nimport type StrictEventEmitter from 'strict-event-emitter-types';\n\nimport type { StateItem } from './components/mapStates/StateItem';\nimport type { Cursor } from './interfaces/BaseTypes';\nimport type { MainMapEvents, WebMapEvents } from './interfaces/Events';\nimport type { LayerAdapter } from './interfaces/LayerAdapter';\nimport type {\n  FitOptions,\n  Locate,\n  LocateOptions,\n  LocationEvents,\n  MapAdapter,\n  MapClickEvent,\n} from './interfaces/MapAdapter';\nimport type { MapOptions, ViewOptions } from './interfaces/MapOptions';\nimport type { RuntimeParams } from './interfaces/RuntimeParams';\nimport type { StarterKit } from './interfaces/StarterKit';\n\ntype EmitStatusEventData = any;\n\nlet ID = 0;\n\nconst OPTIONS: MapOptions = {\n  minZoom: 0,\n  maxZoom: 22,\n  paint: {\n    color: '#0000ff', // blue\n    opacity: 0.4,\n    strokeOpacity: 1,\n    stroke: true,\n    radius: 8,\n    weight: 1,\n  },\n  selectedPaint: {\n    color: '#00008b', // darkblue\n    opacity: 0.4,\n    strokeOpacity: 1,\n    stroke: true,\n    radius: 12,\n    weight: 1,\n  },\n  create: true,\n};\n\ninterface AddEventsListenersOptions {\n  include: (keyof MainMapEvents)[];\n}\n\nexport class WebMapMain<\n  M = any,\n  E extends WebMapEvents = WebMapEvents,\n  O extends MapOptions = MapOptions,\n> {\n  static keys: Keys = new Keys();\n\n  static getPaintFunctions: { [name: string]: GetPaintFunction };\n\n  options: O = OPTIONS as O;\n  // `WebMapEvents` must be `E` but its not work correct\n  readonly emitter: StrictEventEmitter<EventEmitter, WebMapEvents> =\n    new EventEmitter();\n  readonly keys = WebMapMain.keys;\n\n  readonly mapAdapter: MapAdapter<M>;\n  readonly runtimeParams: RuntimeParams[] = [];\n\n  getPaintFunctions = WebMapMain.getPaintFunctions;\n  mapStateItems: Type<StateItem>[] = [CenterState, ZoomState, BoundState];\n  id = ID++;\n\n  /**\n   * From runtime params\n   */\n  readonly mapState: StateItem[] = [];\n  protected _initMapState: Record<string, any> = {};\n  protected readonly _starterKits: StarterKit[];\n  private _extent?: LngLatBoundsArray;\n  private readonly _eventsStatus: { [key in keyof E]?: boolean } = {};\n  private _coordFromMapClickAbort?: () => void;\n\n  private readonly _mapEvents: {\n    [key in keyof MainMapEvents]?: (...args: any[]) => void;\n  } = {};\n\n  constructor(mapOptions: O) {\n    this.mapAdapter = mapOptions.mapAdapter as MapAdapter<M>;\n    this._starterKits = mapOptions.starterKits || [];\n    if (mapOptions) {\n      this.options = deepmerge((OPTIONS as O) || {}, mapOptions) as O;\n    }\n    if (this.options.runtimeParams) {\n      this.runtimeParams = this.options.runtimeParams;\n    }\n    this._addEventsListeners();\n\n    if (this.options.tileJson) {\n      this._setTileJsonOptions(this.options.tileJson);\n    }\n    if (this.options.create) {\n      this.create();\n    }\n  }\n\n  getId(): number {\n    return this.id;\n  }\n\n  /**\n   * Manual way to create a map (If {@link MapOptions.create} is `false`).\n   * @example\n   * ```javascript\n   * const webMap = new WebMap(options);\n   * webMap.create().then(() => doSomething());\n   * ```\n   */\n  async create(): Promise<this> {\n    if (!this.getEventStatus('create')) {\n      await this._setInitMapState(this.mapStateItems);\n      await this._setupMap();\n      this._emitStatusEvent('create', this);\n    }\n    return this;\n  }\n\n  setRuntimeParams(params: RuntimeParams): void {\n    this.runtimeParams.push(params);\n  }\n\n  /**\n   * Destroys WebMap, MapAdapter, clears all layers and turn off all event listeners\n   */\n  destroy(): void {\n    this._removeEventListeners();\n    clearObject(this._emitStatusEvent);\n    if (this.mapAdapter.destroy) {\n      this.mapAdapter.destroy();\n    }\n  }\n\n  mapStateWithFunc(func: (x: any) => any): Record<string, any> {\n    const state: Record<string, any> = {};\n    this.mapState.forEach((x) => {\n      state[x.name] = func(x);\n    });\n    return state;\n  }\n\n  getStateAsString(): Record<string, any> {\n    return this.mapStateWithFunc((x) => x.toString());\n  }\n\n  getState(): Record<string, any> {\n    return this.mapStateWithFunc((x) => x.getValue());\n  }\n\n  getRuntimeParams(): Record<string, any> {\n    const state: Record<string, any> = {};\n    this.mapState.forEach((x) => {\n      for (const r of this.runtimeParams) {\n        const val = r.get(x.name);\n        if (val !== undefined) {\n          state[x.name] = x.parse(val);\n          break;\n        }\n      }\n    });\n    return state;\n  }\n\n  /**\n   * Returns the HTML element that contains the map.\n   * @returns The map's container\n   */\n  getContainer(): HTMLElement | undefined {\n    if (this.mapAdapter.getContainer) {\n      return this.mapAdapter.getContainer();\n    } else if (this.options.target) {\n      if (this.options.target instanceof HTMLElement) {\n        return this.options.target;\n      } else if (typeof this.options.target === 'string') {\n        const element = document.getElementById(this.options.target);\n        if (element) {\n          return element;\n        }\n      }\n    }\n  }\n\n  /**\n   * Set the cursor icon to be displayed when hover icon on the map container.\n   * @param cursor - Available cursor name from https://developer.mozilla.org/ru/docs/Web/CSS/cursor\n   */\n  setCursor(cursor: Cursor): void {\n    this.onLoad().then(() => {\n      if (this.mapAdapter.setCursor) {\n        this.mapAdapter.setCursor(cursor);\n      }\n    });\n  }\n\n  getCursor(): Cursor | undefined {\n    if (this.mapAdapter.getCursor) {\n      return this.mapAdapter.getCursor() as Cursor;\n    }\n    const container = this.getContainer();\n    if (container) {\n      return container.style.cursor as Cursor;\n    }\n  }\n\n  /**\n   * Set the center of the current view.\n   * @param lngLat - Array of two numbers representing longitude and latitude of the center of the map view.\n   *\n   * @example\n   * ```javascript\n   * // Mount Everest 27° 59′ 17″ N, 86° 55′ 31″ E\n   * webMap.setCenter([86.925278, 27.988056]);\n   * ```\n   */\n  setCenter(lngLat: LngLatArray): this {\n    this.mapAdapter.setCenter(lngLat);\n    return this;\n  }\n\n  /**\n   * Returns the map's geographical centerpoint.\n   * @returns lngLat Array of two numbers representing longitude and latitude of the center of the map view.\n   *\n   * @example\n   * ```javascript\n   * // Mount Everest 27° 59′ 17″ N, 86° 55′ 31″ E\n   * webMap.getCenter(); // [86.925278, 27.988056]\n   * ```\n   */\n  getCenter(): LngLatArray | undefined {\n    return this.mapAdapter.getCenter();\n  }\n\n  getBounds(): LngLatBoundsArray | undefined {\n    if (this.mapAdapter.getBounds) {\n      return this.mapAdapter.getBounds();\n    }\n  }\n\n  getBoundsPolygon(): Feature<Polygon> | undefined {\n    const bounds = this.getBounds();\n    if (bounds) {\n      const feature = getBoundsFeature(bounds);\n      return feature;\n    }\n  }\n\n  /**\n   * Zoom to a specific zoom level.\n   * @param zoom - The zoom level to set (0-24).\n   */\n  setZoom(zoom: number): this {\n    this.mapAdapter.setZoom(zoom);\n    return this;\n  }\n\n  /**\n   * Returns the map's current zoom level.\n   * @returns The map's current zoom level (0-24).\n   */\n  getZoom(): number | undefined {\n    const zoom = this.mapAdapter.getZoom();\n    if (typeof zoom === 'number') {\n      return zoom;\n    }\n    // throw Error(\n    //   'Unable to get zoom level. Perhaps the map is not have been initialized yet',\n    // );\n  }\n\n  zoomIn(): void {\n    if (this.mapAdapter.zoomIn) {\n      this.mapAdapter.zoomIn();\n    } else {\n      const zoom = this.getZoom();\n      if (zoom !== undefined) {\n        const toZoom = zoom + 1;\n        this.setZoom(toZoom);\n      }\n    }\n  }\n\n  zoomOut(): void {\n    if (this.mapAdapter.zoomOut) {\n      this.mapAdapter.zoomOut();\n    } else {\n      const zoom = this.getZoom();\n      if (zoom !== undefined) {\n        const toZoom = zoom - 1;\n        this.setZoom(toZoom);\n      }\n    }\n  }\n\n  /**\n   * Sets the view of the map geographical center and zoom\n   * @param lngLat - Array of two numbers representing longitude and latitude of the center of the map view.\n   * @param zoom - The zoom level to set (0-24).\n   *\n   * @example\n   * ```javascript\n   * // Mount Everest 27° 59′ 17″ N, 86° 55′ 31″ E\n   * webMap.setView([86.925278, 27.988056], 12)\n   * ```\n   */\n  setView(lngLatOr: LngLatArray, zoom?: number): void;\n\n  setView(options: ViewOptions): void;\n\n  setView(lngLatOrOpt: LngLatArray | ViewOptions, zoom?: number): void {\n    if (Array.isArray(lngLatOrOpt)) {\n      const lngLat = lngLatOrOpt;\n      if (this.mapAdapter.setView && lngLat && defined(zoom)) {\n        this.mapAdapter.setView(lngLat, zoom);\n      } else {\n        if (lngLat) {\n          this.mapAdapter.setCenter(lngLat);\n        }\n        if (defined(zoom)) {\n          this.mapAdapter.setZoom(zoom);\n        }\n      }\n    } else {\n      const viewOpt = lngLatOrOpt;\n      if (this.mapAdapter.setView) {\n        this.mapAdapter.setView(viewOpt);\n      }\n    }\n  }\n\n  /**\n   * Sets a map view that contains the given geographical bounds.\n   * @param bounds - Array of coordinates, measured in degrees, in [west, south, east, north] order.\n   *\n   * @example\n   * ```javascript\n   * // Whole world\n   * webMap.fitBounds([0, -90, 180, 90]);\n   * ```\n   */\n  fitBounds(bounds: LngLatBoundsArray, options?: FitOptions): this {\n    checkExtent(bounds);\n    if (bounds.every((x) => defined(x))) {\n      if (bounds[1] < -85.06) {\n        bounds[1] = -85.06;\n      }\n      if (bounds[3] > 85.06) {\n        bounds[3] = 85.06;\n      }\n      this.mapAdapter.fitBounds(bounds, options);\n    }\n    return this;\n  }\n\n  /**\n   * Checking the status of any asynchronous operation\n   * @param event - The name of the event whose status is checked\n   *\n   * @example\n   * ```javascript\n   * var webMap = new WebMap(options);\n   * webMap.getEventStatus('create'); // false\n   * webMap.emitter.on('create', function () {\n   *   webMap.getEventStatus('create'); // true\n   * })\n   * ```\n   */\n  getEventStatus(event: keyof E): boolean {\n    // ugly hack to disable type checking error\n    const _eventName = event as keyof WebMapEvents;\n    const status = this._eventsStatus[_eventName];\n    return status ?? false;\n  }\n\n  /**\n   * helper method to wait for events to load. By default, card creation is tracked\n   * @param event - The name of the event whose status is checked\n   *\n   * @example\n   * ```javascript\n   * var webMap = new WebMap(options);\n   * webMap.onLoad().then(function () {\n   *   webMap.getEventStatus('create'); // true\n   * })\n   *\n   * // use async/await syntax\n   * async function () {\n   *   await webMap.onLoad();\n   *   doSomething();\n   * }\n   *\n   * ```\n   */\n  onLoad(event: keyof WebMapEvents = 'create'): Promise<this> {\n    return new Promise((res) => {\n      if (this.getEventStatus(event)) {\n        res(this);\n      } else {\n        this.emitter.once(event, () => {\n          res(this);\n        });\n      }\n    });\n  }\n\n  onMapLoad(cb?: (mapAdapter: MapAdapter) => void): Promise<MapAdapter> {\n    return new Promise((res) => {\n      const _resolve = () => {\n        const mapAdapter = this.mapAdapter;\n        if (cb) {\n          cb(mapAdapter);\n        }\n        if (mapAdapter) {\n          res(mapAdapter);\n        }\n      };\n      const isLoaded = this.mapAdapter.isLoaded ?? true;\n      if (this.mapAdapter.map && isLoaded) {\n        _resolve();\n      } else {\n        this.mapAdapter.emitter.once('create', () => {\n          _resolve();\n        });\n      }\n    });\n  }\n\n  getLayerAdapters(): { [name: string]: Type<LayerAdapter> } {\n    return this.mapAdapter.layerAdapters;\n  }\n\n  getLayerAdapter(name: string): Type<LayerAdapter> {\n    const adapter = this.mapAdapter.layerAdapters[name];\n    return adapter;\n  }\n\n  locate(opt: LocateOptions, events?: LocationEvents): Locate {\n    if (this.mapAdapter && this.mapAdapter.locate) {\n      return this.mapAdapter.locate(opt, events);\n    }\n    const stop = () => ({});\n    return { stop };\n  }\n\n  stopGetCoordFromMapClick(): void {\n    if (this._coordFromMapClickAbort) {\n      this._coordFromMapClickAbort();\n      this._coordFromMapClickAbort = undefined;\n    }\n  }\n\n  getCoordFromMapClick(): Promise<LngLatArray> {\n    if (!this._coordFromMapClickAbort) {\n      return new Promise((resolve, reject) => {\n        const cursor: Cursor = this.getCursor() || 'grab';\n        this._removeEventListeners({ include: ['click'] });\n        this.setCursor('crosshair');\n        const onCancel_ = (): void => {\n          this.setCursor(cursor);\n          this._addEventsListeners({ include: ['click'] });\n          this.mapAdapter.emitter.off('click', onMapClick);\n          this._coordFromMapClickAbort = undefined;\n        };\n        const onMapClick = (e: MapClickEvent) => {\n          onCancel_();\n          deprecatedMapClick(e);\n          resolve(e.lngLat);\n        };\n        this.mapAdapter.emitter.once('click', onMapClick);\n        this._coordFromMapClickAbort = onCancel_;\n      });\n    } else {\n      return this.getCoordFromMapClick();\n    }\n  }\n\n  protected _emitStatusEvent(\n    eventName: keyof E,\n    data?: EmitStatusEventData,\n  ): void {\n    // ugly hack to disable type checking error\n    const _eventName = eventName as keyof E;\n    this._eventsStatus[_eventName] = true;\n    this.emitter.emit(_eventName as keyof WebMapEvents, data);\n  }\n\n  protected async _addLayerProviders(): Promise<void> {\n    //\n  }\n\n  protected async _onLoadSync(): Promise<void> {\n    //\n  }\n\n  private async _setupMap(): Promise<this> {\n    if (!this.mapAdapter) {\n      throw new Error('WebMap `mapAdapter` option is not set');\n    }\n    await this.mapAdapter.create(this.options);\n    this._zoomToInitialExtent();\n\n    await this._addLayerProviders();\n    await this._onLoadSync();\n\n    this._emitStatusEvent('build-map', this.mapAdapter);\n    return this;\n  }\n\n  private _setTileJsonOptions(tileJson: TileJson): void {\n    if (tileJson.center) {\n      this.options.center = tileJson.center;\n    }\n    if (tileJson.bounds) {\n      this.options.bounds = tileJson.bounds;\n    }\n    if (defined(tileJson.maxzoom)) {\n      // this.options.maxZoom = tileJson.maxzoom;\n      this.options.zoom = tileJson.maxzoom;\n    }\n    if (defined(tileJson.minzoom)) {\n      // this.options.minZoom = tileJson.minzoom;\n      this.options.zoom = tileJson.minzoom;\n    }\n    if (defined(tileJson.maxzoom) && defined(tileJson.minzoom)) {\n      this.options.zoom = (tileJson.maxzoom + tileJson.minzoom) / 2;\n    }\n  }\n\n  private _zoomToInitialExtent(): void {\n    const { center, zoom, bounds } = this.options;\n    if (this._extent) {\n      this.fitBounds(this._extent);\n    } else if (center && zoom) {\n      this.setView(center, zoom);\n    } else if (bounds) {\n      this.fitBounds(bounds);\n      if (zoom !== undefined) {\n        this.setZoom(zoom);\n      }\n    }\n  }\n\n  private _setInitMapState(states: Type<StateItem>[]): void {\n    for (const X of states) {\n      const state = new X(this);\n      this.mapState.push(state);\n      for (const r of this.runtimeParams) {\n        const str = r.get(state.name);\n        if (str !== undefined) {\n          const val = state.parse(str);\n          this._initMapState[state.name] = val;\n          Object.defineProperty(this.options, state.name, {\n            value: val,\n            configurable: true,\n            enumerable: true,\n          });\n          break;\n        }\n      }\n    }\n  }\n\n  private _addEventsListeners(opt?: AddEventsListenersOptions): void {\n    let events: (keyof MainMapEvents)[] = [\n      'preclick',\n      'click',\n      'zoomstart',\n      'zoom',\n      'zoomend',\n      'movestart',\n      'move',\n      'moveend',\n      'mousemove',\n      'mouseout',\n      'mouseover',\n    ];\n\n    if (opt && opt.include) {\n      events = events.filter((x) => opt.include.includes(x));\n    }\n\n    events.forEach((x) => {\n      this._mapEvents[x] = (data): void => {\n        if (this.runtimeParams.length) {\n          const mapStatusEvents = this.mapState.filter((y) =>\n            y.event.includes(x),\n          );\n          mapStatusEvents.forEach((mapStatusEvent) => {\n            const value = mapStatusEvent.toString();\n            this.runtimeParams.forEach((r) => {\n              r.set(mapStatusEvent.name, value);\n            });\n          });\n        }\n        if (this._eventsStatus) {\n          this.emitter.emit(x, data);\n        }\n      };\n      const mapEvent = this._mapEvents[x];\n      if (mapEvent) {\n        this.mapAdapter.emitter.on(x, mapEvent);\n      }\n    });\n  }\n\n  private _removeEventListeners(opt?: AddEventsListenersOptions): void {\n    let events = Object.entries(this._mapEvents) as [\n      keyof MainMapEvents,\n      ((...args: any[]) => void) | undefined,\n    ][];\n    if (opt && opt.include) {\n      events = events.filter((x) => opt.include.includes(x[0]));\n    }\n    events.forEach(([x, event]) => {\n      if (event) {\n        this.mapAdapter.emitter.removeListener(x as keyof MainMapEvents, event);\n      }\n    });\n  }\n}\n","/**\n * @internal\n */\nexport function clearObject(obj: Record<any, any>): void {\n  for (const member in obj) {\n    delete obj[member];\n  }\n}\n","import { KeyCodes } from './KeysCodes';\n\n/**\n * @param {string} key - key symbol\n * @param {string} func - action on key press\n * @param {number} [keyCode] - key code for special button like tab\n *\n * @export\n * @interface KeyControl\n */\nexport interface KeyControl {\n  key?: string;\n  keyCode?: number;\n  func: () => void;\n}\n\nexport class Keys {\n  keyCodeAlias = new KeyCodes();\n\n  keys: { [keyCode: number]: boolean } = {};\n\n  private _windowOnFocus: () => void;\n  private _keysPressed: (e: KeyboardEvent) => void;\n  private _keysReleased: (e: KeyboardEvent) => void;\n\n  constructor() {\n    this._windowOnFocus = this.windowOnFocus.bind(this);\n    this._keysPressed = this.keysPressed.bind(this);\n    this._keysReleased = this.keysReleased.bind(this);\n    this.addKeyboardEventsListener();\n  }\n\n  pressed(keyName: keyof KeyCodes): boolean {\n    const code = this.keyCodeAlias[keyName];\n    return !!code && this.keys[code];\n  }\n\n  addKeyboardEventsListener(): void {\n    if (typeof window !== 'undefined') {\n      window.addEventListener('focus', this._windowOnFocus, false);\n      window.addEventListener('keydown', this._keysPressed, false);\n      window.addEventListener('keyup', this._keysReleased, false);\n    }\n  }\n\n  removeKeyboardEventsListener(): void {\n    if (typeof window !== 'undefined') {\n      window.removeEventListener('focus', this._windowOnFocus, false);\n      window.removeEventListener('keydown', this._keysPressed, false);\n      window.removeEventListener('keyup', this._keysReleased, false);\n    }\n  }\n\n  private keysPressed(e: KeyboardEvent) {\n    e.stopPropagation();\n    if (!this.keys[e.keyCode]) {\n      this.keys[e.keyCode] = true;\n    }\n  }\n\n  private keysReleased(e: KeyboardEvent) {\n    e.stopPropagation();\n    this.keys[e.keyCode] = false;\n  }\n\n  private windowOnFocus() {\n    this.keys = {};\n  }\n}\n","import { preparePaint } from '@nextgis/paint';\nimport { propertiesFilter } from '@nextgis/properties-filter';\nimport { defined } from '@nextgis/utils';\n\nimport { updateGeoJsonAdapterOptions } from './utils/updateGeoJsonAdapterOptions';\nimport { WebMapMain } from './WebMapMain';\n\nimport type { Paint } from '@nextgis/paint';\nimport type { PropertiesFilter } from '@nextgis/properties-filter';\nimport type { FeatureProperties, TileJson, Type } from '@nextgis/utils';\nimport type { Feature, GeoJsonObject, Geometry } from 'geojson';\n\nimport type { LayerLegend } from '../../ngw-connector/src/types/LegendItem';\n\nimport type { LayerDef } from './interfaces/BaseTypes';\nimport type { WebMapEvents } from './interfaces/Events';\nimport type {\n  AdapterConstructor,\n  AdapterOptions,\n  DataLayerFilter,\n  FeatureLayerAdapter,\n  FilterOptions,\n  GeoJsonAdapterOptions,\n  GetLegendOptions,\n  ImageAdapterOptions,\n  LayerAdapter,\n  LayerAdapterDefinition,\n  LayerAdapters,\n  LayerAdaptersOptions,\n  LayerDefinition,\n  MainLayerAdapter,\n  OnLayerMouseOptions,\n  OnLayerSelectOptions,\n  TileAdapterOptions,\n  VectorLayerAdapter,\n} from './interfaces/LayerAdapter';\nimport type { FitOptions } from './interfaces/MapAdapter';\nimport type {\n  GetAttributionsOptions,\n  MapOptions,\n  ToggleLayerOptions,\n} from './interfaces/MapOptions';\n\ntype AddedLayers<M = any, L = any> = { [id: string]: LayerAdapter<M, L> };\n\nexport class WebMapLayers<\n  M = any,\n  L = any,\n  E extends WebMapEvents = WebMapEvents,\n  O extends MapOptions = MapOptions,\n> extends WebMapMain<M, E, O> {\n  private _layersIdCounter = 1;\n  private _layersOrderCounter = 1;\n  private readonly _baselayers: string[] = [];\n  private readonly _layers: AddedLayers<M, L> = {};\n  private readonly _selectedLayers: string[] = [];\n\n  constructor(mapOptions: O) {\n    super(mapOptions);\n    const tileJson = this.options.tileJson;\n    if (tileJson) {\n      this.emitter.once('build-map', () => this.addTileJsonLayer(tileJson));\n    }\n  }\n\n  /**\n   * Try to fit map view by given layer bounds.\n   * But not all layers have borders\n   */\n  async fitLayer(layerDef: LayerDef, options?: FitOptions): Promise<void> {\n    const layer = this.getLayer(layerDef);\n    // TODO: remove backward compatibility for `getExtent`\n    const getBounds = layer && (layer.getBounds || layer.getExtent);\n    if (getBounds) {\n      const extent = await getBounds.call(layer);\n      if (extent) {\n        this.fitBounds(extent, options);\n      }\n    }\n  }\n\n  /**\n   * Check if given layer is baselayer\n   */\n  isBaseLayer(layerDef: LayerDef): boolean | undefined {\n    const layer = this.getLayer(layerDef);\n    if (layer && layer.id) {\n      return this._baselayers.indexOf(layer.id) !== -1;\n    }\n    return undefined;\n  }\n\n  getBaseLayers(): LayerAdapter[] {\n    const baselayers: LayerAdapter[] = [];\n    this._baselayers.forEach((x) => {\n      const baselayer = this._layers[x];\n      if (baselayer) {\n        baselayers.push(baselayer);\n      }\n    });\n    return baselayers;\n  }\n\n  getBaseLayersIds(): string[] {\n    return this._baselayers;\n  }\n\n  /**\n   * Helper method to return added layer object by any definition type.\n   */\n  getLayer<LA extends LayerAdapter = LayerAdapter>(\n    layerDef: LayerDef,\n  ): LA | undefined {\n    if (typeof layerDef === 'string') {\n      return this._layers[layerDef] as LA;\n    }\n    return layerDef as LA;\n  }\n\n  /**\n   * Helper method to return added layer identificator by any definition type.\n   */\n  getLayerId(layerDef: LayerDef): string | undefined {\n    const layer = this.getLayer(layerDef);\n    if (layer) {\n      if (layer.id) {\n        return layer?.id;\n      }\n      if (layer && layer.options) {\n        return layer.options.id;\n      }\n    }\n    throw new Error('No id for layer');\n  }\n\n  /**\n   * Return array of all added layer identifications.\n   */\n  getLayers(): string[] {\n    return Object.keys(this._layers);\n  }\n\n  // TODO: rename to getLayers, getLayers rename to getLayersIds\n  allLayers(): AddedLayers<M, L> {\n    return this._layers;\n  }\n\n  orderedLayers<LA extends LayerAdapter<M, L> = LayerAdapter<M, L>>(): LA[] {\n    return Object.values(this._layers).sort((a, b) =>\n      a.order && b.order ? a.order - b.order : 0,\n    ) as LA[];\n  }\n\n  findLayer<T extends LayerAdapter = LayerAdapter>(\n    filter: (adapter: T) => boolean,\n  ): T | undefined {\n    for (const l in this._layers) {\n      const layerAdapter = this._layers[l] as T;\n      const isFit = filter(layerAdapter);\n      if (isFit) {\n        return layerAdapter;\n      }\n    }\n  }\n\n  /**\n   * Check if the given layer on the map\n   */\n  isLayerVisible(layerDef: LayerDef): boolean {\n    const layer = this.getLayer(layerDef);\n    return layer && layer.options.visibility !== undefined\n      ? layer.options.visibility\n      : false;\n  }\n\n  /**\n   * Shortcut method to create base layer\n   */\n  async addBaseLayer<\n    K extends keyof LayerAdapters,\n    O extends AdapterOptions = AdapterOptions,\n  >(\n    adapter: K | Type<LayerAdapters[K]>,\n    options?: O | LayerAdaptersOptions[K],\n  ): Promise<LayerAdapter> {\n    const layer = await this.addLayer(\n      adapter,\n      {\n        ...options,\n        baselayer: true,\n      },\n      undefined,\n    );\n\n    return layer;\n  }\n\n  /**\n   * Registration of map layer.\n   *\n   * @param adapter - The name of layer adapter from [MapAdapter.layerAdapters](webmap#MapAdapter.layerAdapters).\n   *                May be custom object or class implemented by [MainLayerAdapter](webmap#MainLayerAdapter).\n   * @param options - Specific options for given adapter\n   *\n   * @example\n   * ```javascript\n   * webMap.addLayer('TILE', options).then((layer) => webMap.showLayer(layer));\n   *\n   * webMap.addLayer(CustomLayerAdapter, options);\n   * ```\n   */\n  async addLayer<\n    K extends keyof LayerAdapters,\n    LO extends AdapterOptions = AdapterOptions,\n  >(\n    adapter: LayerAdapterDefinition<K>,\n    options: LO | LayerAdaptersOptions[K] = {},\n    order?: number,\n  ): Promise<LayerAdapter> {\n    const id = this._layersIdCounter++;\n    const _order = defined(order)\n      ? order\n      : options.order !== undefined\n        ? options.order\n        : this.reserveOrder();\n    let adapterEngine: Type<LayerAdapter<M, L, LO>> | undefined;\n    if (typeof adapter === 'string') {\n      adapterEngine = this.getLayerAdapter(adapter) as Type<\n        LayerAdapter<M, L, LO>\n      >;\n    } else if (typeof adapter === 'function') {\n      adapterEngine = adapter as Type<LayerAdapter<M, L, LO>>;\n    } else if (\n      'then' in (adapter as Promise<Type<LayerAdapters[K]> | undefined>)\n    ) {\n      adapterEngine = (await adapter) as Type<LayerAdapter<M, L, LO>>;\n    }\n\n    const geoJsonOptions = options as GeoJsonAdapterOptions;\n\n    this._updateGeoJsonOptions(geoJsonOptions);\n\n    options = {\n      id: String(id),\n      order: _order,\n      ...options,\n    };\n\n    // options.visibility is a layer global state\n    const visibility = options.visibility ?? true;\n    options.visibility = false;\n\n    if (options.baselayer) {\n      options.order = 0;\n    }\n    if (this.options.onBeforeAddLayer) {\n      const modified = this.options.onBeforeAddLayer({\n        options,\n        adapter: adapterEngine,\n      });\n      if (modified) {\n        if (modified.options) {\n          options = modified.options;\n        }\n        if (modified.adapter) {\n          adapterEngine = modified.adapter as Type<LayerAdapter<M, L, LO>>;\n        }\n      }\n    }\n    if (adapterEngine !== undefined) {\n      const _adapter = new adapterEngine(this.mapAdapter.map, options);\n      _adapter.options = { ...options, ..._adapter.options };\n\n      if (_adapter.options.baselayer) {\n        options.baselayer = true;\n        options.order = 0;\n        _adapter.options.order = 0;\n      }\n\n      let layerId: string | undefined;\n      if (_adapter.options.id) {\n        layerId = String(_adapter.options.id);\n\n        this._layers[layerId] = _adapter;\n      }\n      this._emitLayerEvent('layer:preadd', layerId || '', _adapter);\n      await this.onMapLoad();\n      _adapter.map = this.mapAdapter.map;\n      const layer = await _adapter.addLayer(_adapter.options);\n      // checking that the original layer was inserted into the adapter anyway\n      _adapter.layer = layer;\n      // think about how to move `id` to the adapter's constructor,\n      // but that it is not required in the options\n      _adapter.id = _adapter.options.id || String(id);\n      _adapter.options.id = _adapter.id;\n      if (options.baselayer) {\n        _adapter.options.order = 0;\n      }\n      _adapter.order = _adapter.options.order ?? _order;\n      if (layerId) {\n        delete this._layers[layerId];\n      }\n      layerId = String(_adapter.id);\n      if (this._layers[layerId]) {\n        throw Error(`layer with id '${layerId}' already exist`);\n      }\n      if (layerId) {\n        this._layers[layerId] = _adapter;\n\n        if (geoJsonOptions.filter) {\n          this.filterLayer(_adapter, geoJsonOptions.filter);\n        }\n        if (options.baselayer) {\n          this._baselayers.push(layerId);\n        }\n\n        if (visibility) {\n          await this.showLayer(layerId);\n        }\n      }\n      const opacity = options.opacity;\n      if (opacity !== undefined && opacity !== null && opacity <= 1) {\n        this.setLayerOpacity(_adapter, opacity);\n      }\n      // TODO: remove backward compatibility for `getExtent`\n      const getBounds = layer && (_adapter.getBounds || _adapter.getExtent);\n      if (options.fit && getBounds) {\n        const extent = await getBounds.call(_adapter);\n        if (extent) {\n          await this.fitBounds(extent);\n        }\n      }\n      if (options.onAdded) {\n        options.onAdded(_adapter);\n      }\n      this._emitLayerEvent('layer:add', layerId, _adapter);\n      return _adapter;\n    }\n    return Promise.reject('No adapter');\n  }\n\n  async addLayerFromAsyncAdapter<\n    K extends keyof LayerAdapters,\n    O extends AdapterOptions = AdapterOptions,\n  >(\n    adapter: AdapterConstructor,\n    options: O | LayerAdaptersOptions[K],\n    order?: number,\n  ): Promise<LayerAdapter> {\n    const _order =\n      order || options.order !== undefined\n        ? options.order\n        : this.reserveOrder();\n    const adapterConstructor = adapter as AdapterConstructor;\n    const adapterConstructorPromise = adapterConstructor();\n    const adapterEngine = await adapterConstructorPromise;\n    if (adapterEngine) {\n      return this.addLayer(adapterEngine, options, _order);\n    }\n    return Promise.reject('No adapter');\n  }\n\n  /**\n   * Remove all layer from map and memory.\n   */\n  removeLayers(\n    allowCb?: (layer: string, adapter: LayerAdapter) => boolean,\n  ): void {\n    for (const l in this._layers) {\n      let allow = true;\n      if (allowCb) {\n        allow = allowCb(l, this._layers[l]);\n      }\n      if (allow) {\n        this.removeLayer(l);\n        delete this._layers[l];\n      }\n    }\n  }\n\n  async getLegend(options?: GetLegendOptions): Promise<LayerLegend[]> {\n    const promises: Promise<LayerLegend[]>[] = [];\n    for (const l of this.orderedLayers()) {\n      if (l.getLegend) {\n        promises.push(l.getLegend(options));\n      }\n    }\n    return (await Promise.all(promises)).flat();\n  }\n\n  reserveOrder(): number {\n    return this._layersOrderCounter++;\n  }\n\n  /**\n   * Remove all layers but not remove basemap.\n   */\n  removeOverlays(): void {\n    this.removeLayers((layerId, layer) => {\n      if (layer && layer.options && layer.options.baselayer) {\n        return false;\n      }\n      return true;\n    });\n  }\n\n  /**\n   * Remove specific layer from map and memory by its definition.\n   */\n  removeLayer(layerDef: LayerDef): void {\n    const layer = this.getLayer(layerDef);\n    const layerId = layer && this.getLayerId(layer);\n    if (layer && layerId) {\n      this.emitter.emit('layer:preremove', layer);\n      if (layer.beforeRemove) {\n        layer.beforeRemove();\n      }\n      if (layer.removeLayer) {\n        layer.removeLayer();\n      } else {\n        this.mapAdapter.removeLayer(layer.layer);\n      }\n      if (layer.options && layer.options.baselayer) {\n        const index = this._baselayers.indexOf(layerId);\n        if (index) {\n          this._baselayers.splice(index, 1);\n        }\n      }\n      delete this._layers[layerId];\n      this.emitter.emit('layer:remove', layer);\n    }\n  }\n\n  /**\n   * Create layer from GeoJson data. Set style and behavior for selection.\n   *\n   * @example\n   * ```javascript\n   * // Add simple layer\n   * webMap.addGeoJsonLayer({ data: geojson, paint: { color: 'red' } });\n   *\n   * // Add styled by feature property layer with selection behavior\n   * webMap.addGeoJsonLayer({\n   *   data: geojson,\n   *   paint: function (feature) {\n   *     return { color: feature.properties.color, opacity: 0.5 }\n   *   },\n   *  selectedPaint: function (feature) {\n   *    return { color: feature.properties.selcolor, opacity: 1 }\n   *  },\n   *  selectable: true,\n   *  multiselect: true\n   * });\n   *\n   * // Add marker layer styled with use [Icons](icons)\n   * webMap.addGeoJsonLayer({ data: geojson, paint: webMap.getIcon({ color: 'orange' })});\n   *\n   * // work with added layer\n   * const layer = webMap.addGeoJsonLayer({ data: geojson, id: 'my_layer_name'});\n   * // access layer by id\n   * webMap.showLayer('my_layer_name');\n   * // or access layer by instance\n   * webMap.showLayer(layer);\n   * ```\n   */\n  addGeoJsonLayer<\n    K extends keyof LayerAdapters = keyof LayerAdapters,\n    O extends GeoJsonAdapterOptions<any, any> = GeoJsonAdapterOptions,\n  >(\n    opt: O = {} as O,\n    adapter?: LayerAdapterDefinition<K>,\n  ): Promise<VectorLayerAdapter<any, any, any>> {\n    opt = opt || ({} as O);\n    opt.multiselect = opt.multiselect !== undefined ? opt.multiselect : false;\n    opt.unselectOnSecondClick =\n      opt.unselectOnSecondClick !== undefined\n        ? opt.unselectOnSecondClick\n        : true;\n    if (!adapter) {\n      opt = updateGeoJsonAdapterOptions(opt);\n    }\n    opt.paint = opt.paint || {};\n    return this.addLayer(adapter || 'GEOJSON', opt);\n  }\n\n  /** Shortcut for {@link WebMapLayers.addGeoJsonLayer} to create GeoJson adapter with generic types for working in typescript */\n  addFeatureLayer<\n    P extends FeatureProperties = FeatureProperties,\n    G extends Geometry = Geometry,\n    O extends GeoJsonAdapterOptions<Feature<G, P>> = GeoJsonAdapterOptions<\n      Feature<G, P>\n    >,\n  >(options = {} as O): Promise<FeatureLayerAdapter<P, G>> {\n    return this.addGeoJsonLayer<'GEOJSON', O>(options) as Promise<\n      FeatureLayerAdapter<P, G>\n    >;\n  }\n\n  /** Shortcut for {@link WebMapLayers.addLayer} to create TileLayer adapter */\n  addTileLayer(\n    url: string,\n    options: Omit<TileAdapterOptions, 'url'> = {},\n  ): Promise<MainLayerAdapter<M, L, TileAdapterOptions>> {\n    return this.addLayer('TILE', { ...options, url }) as Promise<\n      MainLayerAdapter<M, L, TileAdapterOptions>\n    >;\n  }\n\n  /** Shortcut for {@link WebMapLayers.addLayer} to create TileLayer adapter */\n  addImageLayer(\n    url: string,\n    options: Omit<ImageAdapterOptions, 'url'>,\n  ): Promise<MainLayerAdapter<M, L, ImageAdapterOptions>>;\n  addImageLayer(\n    options: ImageAdapterOptions,\n  ): Promise<MainLayerAdapter<M, L, ImageAdapterOptions>>;\n  addImageLayer(\n    urlOrOptions: string | ImageAdapterOptions,\n    options?: Omit<ImageAdapterOptions, 'url'>,\n  ): Promise<MainLayerAdapter<M, L, ImageAdapterOptions>> {\n    let url;\n    if (typeof urlOrOptions === 'string') {\n      url = urlOrOptions;\n    } else {\n      url = urlOrOptions.url;\n      options = urlOrOptions;\n    }\n\n    return this.addLayer('IMAGE', { ...options, url }) as Promise<\n      MainLayerAdapter<M, L, ImageAdapterOptions>\n    >;\n  }\n\n  /**\n   * Show added layer on the map by it definition.\n   */\n  showLayer(\n    layerDef: LayerDef,\n    options: ToggleLayerOptions = {},\n  ): Promise<void> {\n    return this.toggleLayer(layerDef, true, options);\n  }\n\n  /**\n   * Hide added layer on the map by it definition.\n   */\n  hideLayer(\n    layerDef: LayerDef,\n    options: ToggleLayerOptions = {},\n  ): Promise<void> {\n    return this.toggleLayer(layerDef, false, options);\n  }\n\n  /**\n   * Change added layer visibility on the map by given status or inverse current status.\n   *\n   * @example\n   * ```javascript\n   * webMap.addLayer('TILE', {id: 'my_layer', url: ''}).then((layer) => {\n   *   webMap.toggleLayer(layer, true);\n   *   webMap.toggleLayer('my_layer', false);\n   *   webMap.toggleLayer('my_layer');\n   *   webMap.isLayerVisible(layer); // true\n   * });\n   * ```\n   */\n  toggleLayer(\n    layerDef: LayerDef,\n    status?: boolean,\n    options: ToggleLayerOptions = {},\n  ): Promise<void> {\n    const layer = this.getLayer(layerDef);\n\n    const onMap = layer && layer.options.visibility;\n    const toStatus = status !== undefined ? status : !onMap;\n    const silent = options.silent !== undefined ? options.silent : false;\n    const action = async (l: LayerAdapter) => {\n      const id = String(l.id);\n      const preEventName = toStatus ? 'layer:preshow' : 'layer:prehide';\n      const eventName = toStatus ? 'layer:show' : 'layer:hide';\n      if (!silent) {\n        this._emitLayerEvent(preEventName, id, l);\n        this._emitLayerEvent('layer:pretoggle', id, l);\n      }\n      if (toStatus && this.mapAdapter) {\n        const order = l.options.baselayer ? 0 : l.options.order;\n\n        // do not show baselayer if another on the map\n        if (l.options.baselayer && this._baselayers.length) {\n          const anotherVisibleBaselayers = this._baselayers.filter((x) => {\n            return x !== l.id && this.isLayerVisible(x);\n          });\n          for (const bl of anotherVisibleBaselayers) {\n            await this.hideLayer(bl);\n          }\n        }\n        if (l.showLayer) {\n          await l.showLayer.call(l, l.layer);\n        } else if (l.layer !== undefined) {\n          await this.mapAdapter.showLayer(l.layer);\n        }\n        if (order !== undefined) {\n          this.mapAdapter.setLayerOrder(l.layer, order, this._layers);\n        }\n      } else {\n        if (l.hideLayer) {\n          await l.hideLayer.call(l, l.layer);\n        } else if (l.layer !== undefined) {\n          await this.mapAdapter.hideLayer(l.layer);\n        }\n      }\n      l.options.visibility = toStatus;\n      if (!silent) {\n        this._emitLayerEvent(eventName, id, l);\n        this._emitLayerEvent('layer:toggle', id, l);\n      }\n    };\n    if (layer) {\n      return this.onMapLoad().then(() => action(layer));\n    }\n    return Promise.resolve();\n  }\n\n  updateLayer(\n    layerDef: LayerDef,\n    options?: { params?: Record<string, string> },\n  ): Promise<void> {\n    const layer = this.getLayer(layerDef);\n    if (layer) {\n      if (layer.updateLayer) {\n        return Promise.resolve(layer.updateLayer(options));\n      } else if (this.isLayerVisible(layer)) {\n        return this.hideLayer(layer, { silent: true }).then(() => {\n          return this.showLayer(layer, { silent: true });\n        });\n      }\n    }\n    return Promise.resolve();\n  }\n\n  /**\n   * Set transparency for a given layer by number from 0 to 1\n   */\n  setLayerOpacity(layerDef: LayerDef, value: number): void {\n    const layer = this.getLayer(layerDef);\n    if (layer) {\n      if (layer.setOpacity) {\n        layer.setOpacity(value);\n      } else if (this.mapAdapter.setLayerOpacity) {\n        this.mapAdapter.setLayerOpacity(layer.layer, value);\n      }\n    }\n  }\n\n  isLayerLabelVisible(layerDef: LayerDef): boolean {\n    const layer = this.getLayer(layerDef) as VectorLayerAdapter;\n    if (layer.isLabelVisible) {\n      return layer.isLabelVisible();\n    }\n    return layer.options.labelVisibility ?? true;\n  }\n\n  showLayerLabel(layerDef: LayerDef): void {\n    this.toggleLayerLabel(layerDef, true);\n  }\n\n  hideLayerLabel(layerDef: LayerDef): void {\n    this.toggleLayerLabel(layerDef, false);\n  }\n\n  toggleLayerLabel(layerDef: LayerDef, status?: boolean): boolean {\n    const layer = this.getLayer(layerDef) as VectorLayerAdapter;\n    status = status ?? !this.isLayerLabelVisible(layerDef);\n    if (layer) {\n      if (status) {\n        if (layer.showLabel) {\n          layer.options.labelVisibility = true;\n          layer.showLabel();\n        }\n      } else {\n        if (layer.hideLabel) {\n          layer.options.labelVisibility = false;\n          layer.hideLabel();\n        }\n      }\n      if (layer.id) {\n        this._emitLayerEvent('layer:label:toggle', layer.id, layer);\n      }\n    }\n    return status;\n  }\n\n  /**\n   * Mark the layer as selected.\n   * If the adapter is a vector layer and supports data selection,\n   * you can pass a callback function to specify which data will be selected.\n   *\n   * @example\n   * ```javascript\n   * const layer = webMap.addLayer('GEOJSON', {data: geojson}).then((layer) => {\n   *   webMap.selectLayer(layer, ({feature}) => feature.id === '42');\n   * });\n   * ```\n\n   */\n  selectLayer(layerDef: LayerDef, findFeatureFun?: DataLayerFilter): void {\n    const layer = this.getLayer(layerDef);\n    if (layer) {\n      const adapter = layer as VectorLayerAdapter;\n      if (adapter && adapter.select) {\n        adapter.select(findFeatureFun);\n      }\n      const layerId = this.getLayerId(layer);\n      if (layerId) {\n        this._selectedLayers.push(layerId);\n      }\n    }\n  }\n\n  /**\n   * Unselect the given layer.\n   * If the adapter is a vector layer and supports data selection,\n   * you can pass a callback function to specify which data will be unselected.\n   *\n   * @example\n   * ```javascript\n   * const layer = webMap.addLayer('GEOJSON', {data: geojson}).then((layer) => {\n   *   webMap.unSelectLayer(layer, ({feature}) => feature.id === '42');\n   * });\n   * ```\n   *\n   */\n  unSelectLayer(layerDef: LayerDef, findFeatureFun?: DataLayerFilter): void {\n    const layer = this.getLayer(layerDef);\n    if (layer) {\n      const adapter = layer && (layer as VectorLayerAdapter);\n      if (adapter.unselect) {\n        adapter.unselect(findFeatureFun);\n      }\n      const layerId = this.getLayerId(layer);\n      if (layerId) {\n        const index = this._selectedLayers.indexOf(layerId);\n        if (index !== -1) {\n          this._selectedLayers.splice(index, 1);\n        }\n      }\n    }\n  }\n  /** Remove selection from any selected selectable layer */\n  unSelectLayers(): void {\n    const layers = Object.values(this.allLayers());\n    let l: VectorLayerAdapter;\n    for (l of layers) {\n      if (l.unselect) {\n        l.unselect();\n      }\n    }\n  }\n\n  /**\n   * Hide features from a vector layer using a callback function.\n   *\n   * @example\n   * ```javascript\n   * const layer = webMap.addLayer('GEOJSON', {data: geojson}).then((layer) => {\n   *   webMap.filterLayer(layer, ({feature}) => feature.id === '42');\n   * });\n   * ```\n   *\n   */\n  filterLayer(\n    layerDef: LayerDef,\n    filter: DataLayerFilter<Feature, L>,\n  ): LayerDefinition<Feature, L>[] {\n    const layer = this.getLayer(layerDef);\n    const adapter = layer as VectorLayerAdapter;\n    if (adapter.filter) {\n      return adapter.filter(filter);\n    }\n    return [];\n  }\n\n  propertiesFilter(\n    layerDef: LayerDef,\n    filters: PropertiesFilter,\n    options?: FilterOptions,\n  ): Promise<void> {\n    const layer = this.getLayer(layerDef);\n    if (layer) {\n      const adapter = layer as VectorLayerAdapter;\n      if (adapter.propertiesFilter) {\n        return adapter.propertiesFilter(filters, options);\n      } else if (adapter.filter) {\n        this.filterLayer(adapter, (e) => {\n          if (e.feature && e.feature.properties) {\n            return propertiesFilter(e.feature.properties, filters);\n          }\n          return true;\n        });\n      }\n    }\n    return Promise.resolve();\n  }\n\n  removeLayerFilter(layerDef: LayerDef): void {\n    const layer = this.getLayer(layerDef);\n    const adapter = layer as VectorLayerAdapter;\n    if (adapter.removeFilter) {\n      adapter.removeFilter();\n    } else if (adapter.filter) {\n      adapter.filter(() => {\n        return true;\n      });\n    }\n  }\n\n  /**\n   * Sets the GeoJSON data for given vector layer.\n   *\n   * @example\n   * ```javascript\n   * const layer = webMap.addLayer('GEOJSON').then((layer) => {\n   *   webMap.setLayerData(layer, geojson);\n   * });\n   * ```\n   */\n  setLayerData(layerDef: LayerDef, data: GeoJsonObject): void | Promise<void> {\n    const vectorAdapter = this.getLayer(layerDef);\n    const adapter = vectorAdapter as VectorLayerAdapter;\n    if (adapter) {\n      if (adapter.setData) {\n        return adapter.setData(data);\n      } else if (adapter.clearLayer && adapter.addData) {\n        adapter.clearLayer();\n        return adapter.addData(data);\n      }\n    }\n    return Promise.resolve();\n  }\n\n  /**\n   * Push new the GeoJSON features into given vector layer.\n   *\n   * @example\n   * ```javascript\n   * const layer = webMap.addLayer('GEOJSON', {data: geojson_features_5}).then((layer) => {\n   *   console.log(layer.getLayers().length) // > 5;\n   *   webMap.addLayerData(layer, geojson_features_3);\n   *   console.log(layer.getLayers().length) // > 8;\n   * });\n   * ```\n   */\n  addLayerData(layerDef: LayerDef, data: GeoJsonObject): void {\n    const layerMem = this.getLayer(layerDef);\n    const adapter = layerMem as VectorLayerAdapter;\n    if (adapter.addData) {\n      adapter.addData(data);\n    }\n  }\n\n  /**\n   * Remove from vector layer all features.\n   * it is possible to remove only some objects if you specify a callback function.\n   *\n   * @example\n   * ```javascript\n   * const layer = webMap.addLayer('GEOJSON', {data: geojson}).then((layer) => {\n   *   webMap.clearLayerData(layer, (feture) => feture.id === 42);\n   *   webMap.clearLayerData(layer);\n   * });\n   * ```\n   */\n  clearLayerData(layerDef: LayerDef, cb?: (feature: Feature) => boolean): void {\n    const layerMem = this.getLayer(layerDef);\n    const adapter = layerMem as VectorLayerAdapter;\n    if (adapter && adapter.clearLayer) {\n      adapter.clearLayer(cb);\n    }\n  }\n\n  setLayerPaint(layerDef: LayerDef, paint?: Paint | null): void {\n    const layer = this.getLayer(layerDef);\n    if (paint && layer && layer.setPaint) {\n      layer.setPaint(paint);\n    }\n  }\n  setLayerSelectedPaint(layerDef: LayerDef, paint?: Paint | null): void {\n    const layer = this.getLayer(layerDef);\n    if (paint && layer && layer.setSelectedPaint) {\n      layer.setSelectedPaint(paint);\n    }\n  }\n  updateLayerPaint(layerDef: LayerDef, paint: Partial<Paint>): void {\n    const layer = this.getLayer(layerDef);\n    if (paint && layer && layer.updatePaint) {\n      layer.updatePaint(paint);\n    }\n  }\n  updateLayerSelectedPaint(layerDef: LayerDef, paint: Partial<Paint>): void {\n    const layer = this.getLayer(layerDef);\n    if (paint && layer && layer.updateSelectedPaint) {\n      layer.updateSelectedPaint(paint);\n    }\n  }\n\n  getAttributions(options: GetAttributionsOptions): string[] {\n    const attributions: string[] = [];\n    for (const l in this._layers) {\n      const layerCache = this._layers[l];\n      const onlyVisible =\n        options.onlyVisible !== undefined ? options.onlyVisible : true;\n      let useLayerAttr = onlyVisible ? layerCache.options.visibility : true;\n      if (useLayerAttr && options.onlyBaselayer) {\n        useLayerAttr = this._baselayers.includes(l);\n      }\n      if (useLayerAttr) {\n        const attr = layerCache.options && layerCache.options.attribution;\n        if (attr) {\n          attributions.push(attr);\n        }\n      }\n    }\n\n    return attributions;\n  }\n\n  getActiveBaseLayer(): MainLayerAdapter<M, any, AdapterOptions> | undefined {\n    const visibleLayerBaseLayer = this.getBaseLayers().find((x) => {\n      return this.isLayerVisible(x);\n    });\n    if (visibleLayerBaseLayer) {\n      return this.getLayer(visibleLayerBaseLayer);\n    }\n  }\n\n  addTileJsonLayer(\n    tileJson: TileJson,\n  ): Promise<MainLayerAdapter<M, any, TileAdapterOptions>> {\n    // if (this.mapAdapter.createTileJsonlayer) {\n    // } else {\n\n    const url = tileJson.tiles[0];\n    return this.addLayer('TILE', {\n      url,\n      maxZoom: tileJson.maxzoom,\n      minZoom: tileJson.minzoom,\n      subdomains: tileJson.scheme,\n      attribution: tileJson.attribution,\n    }) as Promise<MainLayerAdapter<M, any, TileAdapterOptions>>;\n  }\n\n  /** @internal */\n  _emitLayerEvent(name: keyof E, id: string, options?: unknown) {\n    const name_ = String(name);\n    if (defined(id) && name_.startsWith('layer:')) {\n      const specificLayerName = name_.replace('layer:', 'layer-' + id + ':');\n      this.emitter.emit(specificLayerName as keyof WebMapEvents, options);\n    }\n    this.emitter.emit(name as keyof WebMapEvents, options);\n  }\n\n  private async _onLayerClick(options: OnLayerMouseOptions) {\n    const id = options.layer.id;\n    this._emitLayerEvent('layer:click', id || '', options);\n    return Promise.resolve(options);\n  }\n  private async _onLayerDoubleClick(options: OnLayerMouseOptions) {\n    const id = options.layer.id;\n    this._emitLayerEvent('layer:dblclick', id || '', options);\n    return Promise.resolve(options);\n  }\n\n  private async _onLayerSelect(options: OnLayerSelectOptions) {\n    this._emitLayerEvent('layer:select', options.layer.id || '', options);\n    return Promise.resolve(options);\n  }\n\n  private _updateGeoJsonOptions(options: GeoJsonAdapterOptions) {\n    const {\n      onSelect,\n      onLayerSelect,\n      onClick,\n      onDoubleClick,\n      onLayerClick,\n      onMouseOut,\n      onMouseOver,\n    } = options;\n    const onLayerClickFromOpt = onClick || onLayerClick;\n    const onLayerDblClickFromOpt = onDoubleClick || onLayerClick;\n    options.onClick = (e) => {\n      if (onLayerClickFromOpt) {\n        onLayerClickFromOpt(e);\n      }\n      return this._onLayerClick(e);\n    };\n    options.onDoubleClick = (e) => {\n      if (onLayerDblClickFromOpt) {\n        onLayerDblClickFromOpt(e);\n      }\n      return this._onLayerDoubleClick(e);\n    };\n\n    options.onMouseOut = (e) => {\n      const id = e.layer.id;\n      if (onMouseOut) onMouseOut(e);\n      if (defined(id)) {\n        this._emitLayerEvent(`layer:mouseout`, id, e);\n      }\n    };\n\n    options.onMouseOver = (e) => {\n      const id = e.layer.id;\n      if (onMouseOver) onMouseOver(e);\n      if (defined(id)) {\n        this._emitLayerEvent(`layer:mouseover`, id, e);\n      }\n    };\n\n    // TODO: remove backward compatibility for onLayerSelect\n    const onLayerSelectFromOpt = onSelect || onLayerSelect;\n    options.onSelect = (e) => {\n      if (onLayerSelectFromOpt) {\n        onLayerSelectFromOpt(e);\n      }\n      return this._onLayerSelect(e);\n    };\n\n    if (!options.nativePaint) {\n      if (this.options.paint) {\n        options.paint = preparePaint({\n          paint: options.paint || {},\n          defaultPaint: this.options.paint,\n          getPaintFunctions: this.getPaintFunctions,\n        });\n      }\n      if (options.selectedPaint && this.options.selectedPaint) {\n        options.selectedPaint = preparePaint({\n          paint: options.selectedPaint,\n          defaultPaint: this.options.selectedPaint,\n          getPaintFunctions: this.getPaintFunctions,\n        });\n      }\n    }\n  }\n}\n","import { createToggleControl } from './components/controls/createToggleControl';\nimport { WebMapLayers } from './WebMapLayers';\n\nimport type { WebMapEvents } from './interfaces/Events';\nimport type { ControlPosition } from './interfaces/MapAdapter';\nimport type {\n  ButtonControlOptions,\n  CreateControlOptions,\n  MapControl,\n  MapControls,\n  ToggleControl,\n  ToggleControlOptions,\n} from './interfaces/MapControl';\nimport type { MapOptions } from './interfaces/MapOptions';\nimport type { WebMapMain } from './WebMapMain';\n\n/**\n * Collection of methods for managing map controls\n */\nexport class WebMapControls<\n    M = any,\n    L = any,\n    C extends object = any,\n    E extends WebMapEvents = WebMapEvents,\n    O extends MapOptions = MapOptions,\n  >\n  extends WebMapLayers<M, L, E, O>\n  implements WebMapLayers, WebMapMain\n{\n  static controls: {\n    [name: string]: (webMap: WebMapControls, options?: any) => any;\n  } = {\n    CONTROL: (\n      webMap: WebMapControls,\n      options: {\n        control: MapControl;\n        options?: CreateControlOptions;\n      },\n    ) => {\n      return webMap.createControl(options.control, options.options);\n    },\n    BUTTON: (webMap: WebMapControls, options: ButtonControlOptions) => {\n      return webMap.createButtonControl(options);\n    },\n    TOGGLE: (webMap: WebMapControls, options: ToggleControlOptions) => {\n      return webMap.createToggleControl(options);\n    },\n  };\n\n  private _loadControlQueue: {\n    [key in ControlPosition]: (() => Promise<any>)[];\n  } = {\n    'top-right': [],\n    'bottom-right': [],\n    'top-left': [],\n    'bottom-left': [],\n  };\n  private _isControlLoading: { [key in ControlPosition]: boolean } = {\n    'top-right': false,\n    'bottom-right': false,\n    'top-left': false,\n    'bottom-left': false,\n  };\n\n  async addControl<K extends keyof MapControls>(\n    controlDef: K | C,\n    position: ControlPosition,\n    options?: MapControls[K],\n  ): Promise<any> {\n    let control: C | undefined;\n    position = position ?? 'top-left';\n    if (typeof controlDef === 'string') {\n      control = this.getControl(controlDef, options);\n    } else {\n      control = controlDef as C;\n    }\n    if (control) {\n      return new Promise<() => Promise<any>>((resolve) => {\n        const promise = async () => {\n          const _control = await control;\n          const c = this.mapAdapter.addControl(_control, position);\n          resolve(c);\n        };\n        this._setControlQueue(position, promise);\n      });\n    }\n  }\n\n  /**\n   * Creating a universal map layout control element. Can be used with any map adapter.\n   *\n   * @example\n   * ```javascript\n   * const control = webMap.createControl({\n   *   onAdd() {\n   *     return document.createElement('div');\n   *   }\n   * });\n   * ```\n   */\n  async createControl(\n    control: MapControl,\n    options?: CreateControlOptions,\n  ): Promise<C | undefined> {\n    await this.onLoad('build-map');\n    if (this.mapAdapter.createControl) {\n      return this.mapAdapter.createControl(control, options);\n    }\n  }\n\n  async createButtonControl(\n    options: ButtonControlOptions,\n  ): Promise<C | undefined> {\n    await this.onLoad('build-map');\n    if (this.mapAdapter.createButtonControl) {\n      return this.mapAdapter.createButtonControl(options);\n    }\n  }\n\n  /**\n   * Create any toggler control button\n   * @param options - Options for control layout customization and assigning a callback function\n   *\n   * @example\n   * ```javascript\n   * const toggleControl = ngwMap.createToggleControl({\n   *   getStatus: () => webMap.isLayerVisible('any-layer-id'),\n   *   onClick: (status) => ngwMap.toggleLayer('webmap', status),\n   *   html: {\n   *     on: 'ON',\n   *     off: 'OFF'\n   *   },\n   *   title: 'Toggle layer visibility'\n   * });\n   * webMap.addControl(toggleControl, 'top-right');\n   * ```\n   * {@link http://code.nextgis.com/demo-examples-toggle-control | Toggle button control example}\n   */\n  async createToggleControl(\n    options: ToggleControlOptions,\n  ): Promise<(C & ToggleControl) | undefined> {\n    await this.onLoad('build-map');\n    if (this.mapAdapter.createToggleControl) {\n      return this.mapAdapter.createToggleControl(options);\n    } else {\n      if (this.mapAdapter.createButtonControl) {\n        return createToggleControl<C>(\n          this.mapAdapter.createButtonControl,\n          options,\n        );\n      }\n    }\n  }\n\n  /**\n   *\n   * @param control - Instance of WEB-GIS framework control.\n   *                  What is returned by the {@link createControl | create} method\n   */\n  removeControl(control: C): void {\n    if ('remove' in control) {\n      // @ts-expect-error TODO: ugly code, rewrite\n      control.remove();\n    } else if (this.mapAdapter.removeControl) {\n      Promise.resolve(control).then((c) => {\n        this.mapAdapter.removeControl(c);\n      });\n    }\n  }\n\n  /**\n   * Get instance of registered control\n   * @param control - Any registered control string name\n   * @param options - Custom control options\n   */\n  getControl<K extends keyof MapControls>(\n    control: K,\n    options?: MapControls[K],\n  ): C | undefined {\n    const engine = this.mapAdapter.controlAdapters[control];\n    if (engine) {\n      return new engine(options);\n    } else {\n      const createFun = WebMapControls.controls[control];\n      if (createFun) {\n        return createFun(this, options);\n      }\n    }\n  }\n\n  getControlContainer(): HTMLElement | undefined {\n    if (this.mapAdapter.getControlContainer) {\n      return this.mapAdapter.getControlContainer();\n    }\n  }\n\n  private _setControlQueue(position: ControlPosition, cb: () => Promise<any>) {\n    this._loadControlQueue[position].push(cb);\n    if (!this._isControlLoading[position]) {\n      this._applyControls(position);\n    }\n  }\n\n  private async _applyControls(position: ControlPosition) {\n    if (this._loadControlQueue[position].length) {\n      this._isControlLoading[position] = true;\n      const controlCb = this._loadControlQueue[position][0];\n      await controlCb();\n      this._loadControlQueue[position].splice(0, 1);\n      this._applyControls(position);\n    } else {\n      this._isControlLoading[position] = false;\n    }\n  }\n}\n","/**\n * @privateRemarks\n * Since it was not possible to split the code through mixins, inheritance was used.\n * The `ts-mixin` plugin worked fine, but led to errors in IE.\n *\n * Now inheritance is as follow:\n * BaseWebMap \\> WebMapLayers \\> WebMap\n *\n * Will need to be done this way:\n * ```javascript\n * class WebMap extend mixin(WebMapLayers, WebMapControls) {}\n * ```\n *\n * This approach can also be considered\n * ```javascript\n * class WebMap {\n *   layers: WebMapLayers;\n *   controls  WebMapControls\n * }\n * ```\n * and then\n *\n * const webMap = new WebMap(...);\n * webMap.layers.addLayer(...)\n *\n * looks good, but will add difficulty in inheriting from WebMap\n *\n * old:\n * ```javascript\n * class NgwMap extends WebMap {\n *   addLayer(...) {\n *      super.addLayer(...)\n *   }\n * }\n * ```\n * new:\n * ```javascript\n * class NgwLayers extends WebMapLayers {\n *   addLayer(...) {\n *     super.addLayer(...)\n *   }\n * }\n *\n * class NgwMap extends WebMap {\n *   layersClass = NgwLayers\n * }\n * ```\n * ...and there will be compatibility issues\n */\n\nimport { getWebMap, setWebMap } from './container';\nimport { WebMapControls } from './WebMapControls';\n\nimport type { WebMapEvents } from './interfaces/Events';\nimport type { ControlOptions } from './interfaces/MapControl';\nimport type { MapOptions } from './interfaces/MapOptions';\nimport type { WebMapLayers } from './WebMapLayers';\nimport type { WebMapMain } from './WebMapMain';\n\n/**\n * The core component for managing map adapters.\n * It contains methods for adding and manipulation with\n * {@link WebMapMain | map}, {@link WebMapLayers | layers} and {@link WebMapControls | controls}.\n *\n * @example\n * ```javascript\n * import { WebMap } from '@nextgis/webmap';\n * import MapAdapter from '@nextgis/ol-map-adapter';\n *\n * const webMap = new WebMap({\n *   mapAdapter: new MapAdapter(),\n *   target: 'map',\n * });\n * ```\n *\n * @typeParam M - Interactive Map used in the adapter\n * @typeParam L - Layer\n * @typeParam C - Control\n * @typeParam E - Events\n *\n */\nexport class WebMap<\n    M = any,\n    L = any,\n    C extends object = any,\n    E extends WebMapEvents = WebMapEvents,\n    O extends MapOptions = MapOptions,\n  >\n  extends WebMapControls<M, L, C, E, O>\n  implements WebMapControls, WebMapLayers, WebMapMain\n{\n  constructor(mapOptions: O) {\n    super(mapOptions);\n    this._addControls();\n    setWebMap(this.id, this);\n  }\n\n  static get<T extends WebMap = WebMap>(id: number): T {\n    return getWebMap<T>(id);\n  }\n\n  /**\n   * @internal\n   */\n  protected async _addLayerProviders(): Promise<void> {\n    for await (const kit of this._starterKits) {\n      if (kit.getLayerAdapters) {\n        const adapters = await kit.getLayerAdapters.call(kit);\n        if (adapters) {\n          for await (const adapter of adapters) {\n            const newAdapter = await adapter.createAdapter(this);\n            if (newAdapter) {\n              this.mapAdapter.layerAdapters[adapter.name] = newAdapter;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * @internal\n   */\n  protected async _onLoadSync(): Promise<void> {\n    for await (const kit of this._starterKits) {\n      if (kit.onLoadSync) {\n        try {\n          await kit.onLoadSync.call(kit, this);\n        } catch (er) {\n          console.error(er);\n        }\n      }\n    }\n  }\n\n  private _addControls(): void {\n    if (this.options.controls) {\n      this.options.controls.forEach((x) => {\n        let controlAdapterName = x;\n        let controlOptions: ControlOptions = {};\n        if (typeof x === 'string' && this.options.controlsOptions) {\n          if (this.options.controlsOptions[x]) {\n            controlOptions = this.options.controlsOptions[x];\n            if (controlOptions.control !== undefined) {\n              controlAdapterName = controlOptions.control;\n            }\n          }\n        }\n        const { position, ...options } = controlOptions;\n        this.addControl(controlAdapterName, position || 'top-left', options);\n      });\n    }\n    this._emitStatusEvent('controls:create');\n  }\n}\n","export function getDefaultControls(): string[] {\n  return ['ZOOM', 'ATTRIBUTION'];\n}\n","import { WebMap } from './WebMap';\n\nimport type { MapOptions } from './interfaces/MapOptions';\n\nexport * from './components/controls/createToggleControl';\nexport * from './container';\nexport * from './interfaces/BaseTypes';\nexport * from './interfaces/Events';\nexport * from './interfaces/LayerAdapter';\nexport * from './interfaces/MapAdapter';\nexport * from './interfaces/MapControl';\nexport * from './interfaces/MapOptions';\nexport * from './interfaces/RuntimeParams';\nexport * from './interfaces/StarterKit';\nexport * from './utils/geometryTypes';\nexport * from './utils/getDefaultControls';\nexport * from './utils/updateGeoJsonAdapterOptions';\nexport * from './WebMapControls';\nexport * from './WebMapLayers';\nexport * from './WebMapMain';\n\nexport { WebMap };\n\nexport async function createWebMap(options: MapOptions): Promise<WebMap> {\n  const webMap = new WebMap(options);\n  return webMap.onLoad();\n}\n"],"names":["WEB_MAP_CONTAINER","getWebMap","id","setWebMap","webMap","createToggleControl","createButtonControl","options","link","document","createElement","status","getStatus","title","html","setTitle","on","off","setAttribute","_setHtml","htmlDef","HTMLElement","innerHTML","appendChild","setHtml","_setClass","addClass","impact","split","forEach","x","classList","add","remove","setClass","addClassOn","addClassOff","changeStatus","status_","onClick","afterClick","Promise","resolve","then","catch","buttonControl","findMostFrequentGeomType","arr","counts","fry","length","maxName","c","detectGeometryType","geojson","geometry","type","features","map","f","geometries","g","paintTypeAlias","polygon","line","point","typeAlias","Point","LineString","MultiPoint","Polygon","MultiLineString","MultiPolygon","updateGeoJsonAdapterOptions","opt","data","geomType","p","paint","isPaint","KeyCodes","constructor","__publicField","this","StateItem","value","setValue","name","event","getValue","val","BoundState","super","arguments","getBounds","bounds","setView","toString","slice","toFixed","join","parse","str","Number","CenterState","getCenter","setCenter","d","ZoomState","zoom","getZoom","Math","round","setZoom","String","ID","OPTIONS","minZoom","maxZoom","color","opacity","strokeOpacity","stroke","radius","weight","selectedPaint","create","_WebMapMain","mapOptions","EventEmitter","keys","getPaintFunctions","mapAdapter","_starterKits","starterKits","deepmerge","runtimeParams","_addEventsListeners","tileJson","_setTileJsonOptions","getId","__async","getEventStatus","_setInitMapState","mapStateItems","_setupMap","_emitStatusEvent","setRuntimeParams","params","push","destroy","_removeEventListeners","obj","member","clearObject","mapStateWithFunc","func","state","mapState","getStateAsString","getState","getRuntimeParams","r","get","getContainer","target","element","getElementById","setCursor","cursor","onLoad","getCursor","container","style","lngLat","getBoundsPolygon","getBoundsFeature","zoomIn","zoomOut","lngLatOrOpt","Array","isArray","defined","fitBounds","checkExtent","every","_eventsStatus","res","emitter","once","onMapLoad","cb","_a","_resolve","isLoaded","getLayerAdapters","layerAdapters","getLayerAdapter","locate","events","stop","stopGetCoordFromMapClick","_coordFromMapClickAbort","getCoordFromMapClick","reject","include","onCancel_","onMapClick","e","deprecatedMapClick","eventName","_eventName","emit","_addLayerProviders","_onLoadSync","Error","_zoomToInitialExtent","center","maxzoom","minzoom","_extent","states","X","_initMapState","Object","defineProperty","configurable","enumerable","filter","includes","_mapEvents","y","mapStatusEvent","set","mapEvent","entries","removeListener","_windowOnFocus","windowOnFocus","bind","_keysPressed","keysPressed","_keysReleased","keysReleased","addKeyboardEventsListener","pressed","keyName","code","keyCodeAlias","window","addEventListener","removeKeyboardEventsListener","removeEventListener","stopPropagation","keyCode","WebMapMain","WebMapLayers","addTileJsonLayer","fitLayer","layerDef","layer","getLayer","getExtent","extent","call","isBaseLayer","_baselayers","indexOf","getBaseLayers","baselayers","baselayer","_layers","getBaseLayersIds","getLayerId","getLayers","allLayers","orderedLayers","values","sort","a","b","order","findLayer","l","layerAdapter","isLayerVisible","visibility","addBaseLayer","adapter","addLayer","__spreadProps","_0","_b","_layersIdCounter","_order","reserveOrder","adapterEngine","geoJsonOptions","_updateGeoJsonOptions","__spreadValues","onBeforeAddLayer","modified","_adapter","layerId","_emitLayerEvent","filterLayer","showLayer","setLayerOpacity","fit","onAdded","addLayerFromAsyncAdapter","adapterConstructorPromise","removeLayers","allowCb","allow","removeLayer","getLegend","promises","all","flat","_layersOrderCounter","removeOverlays","beforeRemove","index","splice","addGeoJsonLayer","multiselect","unselectOnSecondClick","addFeatureLayer","addTileLayer","url","addImageLayer","urlOrOptions","toggleLayer","hideLayer","toStatus","silent","action","anotherVisibleBaselayers","bl","setLayerOrder","updateLayer","setOpacity","isLayerLabelVisible","isLabelVisible","labelVisibility","showLayerLabel","toggleLayerLabel","hideLayerLabel","showLabel","hideLabel","selectLayer","findFeatureFun","select","_selectedLayers","unSelectLayer","unselect","unSelectLayers","layers","propertiesFilter","filters","feature","properties","removeLayerFilter","removeFilter","setLayerData","setData","clearLayer","addData","addLayerData","layerMem","clearLayerData","setLayerPaint","setPaint","setLayerSelectedPaint","setSelectedPaint","updateLayerPaint","updatePaint","updateLayerSelectedPaint","updateSelectedPaint","getAttributions","attributions","layerCache","useLayerAttr","onlyVisible","onlyBaselayer","attr","attribution","getActiveBaseLayer","visibleLayerBaseLayer","find","tiles","subdomains","scheme","name_","startsWith","specificLayerName","replace","_onLayerClick","_onLayerDoubleClick","_onLayerSelect","onSelect","onLayerSelect","onDoubleClick","onLayerClick","onMouseOut","onMouseOver","onLayerClickFromOpt","onLayerDblClickFromOpt","onLayerSelectFromOpt","nativePaint","preparePaint","defaultPaint","_WebMapControls","addControl","controlDef","position","control","getControl","_setControlQueue","_control","createControl","removeControl","engine","controlAdapters","createFun","controls","getControlContainer","_loadControlQueue","_isControlLoading","_applyControls","controlCb","CONTROL","BUTTON","TOGGLE","WebMapControls","WebMap","_addControls","more","temp","error","iter","__forAwait","next","done","kit","adapters","newAdapter","createAdapter","return","onLoadSync","er","console","controlAdapterName","controlOptions","controlsOptions","__objRest","getDefaultControls","createWebMap"],"mappings":"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"}